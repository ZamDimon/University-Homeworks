(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    914801,      18254]
NotebookOptionsPosition[    888910,      17795]
NotebookOutlinePosition[    889391,      17813]
CellTagsIndexPosition[    889348,      17810]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Computer Mathematics Course Work", "Title",
 CellFrame->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.887468658333342*^9, 3.8874686659950523`*^9}, {
  3.887468811241172*^9, 3.887468813168397*^9}},
 Background->None,ExpressionUUID->"1f323f23-10a4-49f0-a770-44a6a467e2c2"],

Cell["Dmytro Zakharov", "Author",
 CellChangeTimes->{{3.887468731159154*^9, 
  3.887468733032207*^9}},ExpressionUUID->"bab39657-8b55-4fca-989c-\
c6235972c468"],

Cell["Kharkiv Karazin National University, Applied Mathematics", "Affiliation",
 CellChangeTimes->{{3.8874686836020308`*^9, 
  3.887468738934986*^9}},ExpressionUUID->"2a3da637-413c-4136-98da-\
4e3cd71d3f59"],

Cell[TextData[{
 "Variant ",
 StyleBox["13",
  FontWeight->"Bold"]
}], "Affiliation",
 CellChangeTimes->{{3.887468761356048*^9, 
  3.8874687628777037`*^9}},ExpressionUUID->"7931586f-6218-424d-b8c9-\
583bca426c66"],

Cell[CellGroupData[{

Cell["1. Introduction to Wolfram Mathematica", "Section",
 CellChangeTimes->{{3.886655143600127*^9, 3.886655166337097*^9}, {
  3.886655243270352*^9, 
  3.886655261269683*^9}},ExpressionUUID->"7c2bb4b6-f563-42bc-be2c-\
d153bc86b603"],

Cell[CellGroupData[{

Cell["1.1. Arithmetical Operations", "Subsection",
 CellChangeTimes->{{3.886655174806015*^9, 3.88665517991639*^9}, {
  3.88665526338832*^9, 
  3.886655285613377*^9}},ExpressionUUID->"8c9c8c9e-02b1-4af8-9a6d-\
7bf3208abedf"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Find the value of expression ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"0.134", "+", "0.05"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"18", "+", 
       FractionBox["1", "6"]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox["11", "14"]}], ")"}], "-", 
     RowBox[{
      FractionBox["2", "15"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        FractionBox["6", "7"]}], ")"}]}]}]], TraditionalForm]],ExpressionUUID->
  "58d40e89-95a9-4dda-bc77-830dc84a4ded"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886655301229691*^9, 3.88665536760493*^9}, {
  3.890924123230524*^9, 3.8909241244658003`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"deef2c9f-a066-4ff1-9065-7bab7a384d78"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "Answer", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Answer", " ", "=", " ", 
   FractionBox[
    RowBox[{"0.134", "+", "0.05"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"18", "+", 
       FractionBox["1", "6"]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox["11", "14"]}], ")"}], "-", 
     RowBox[{
      FractionBox["2", "15"], 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        FractionBox["6", "7"]}], ")"}]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Answer is \>\"", ",", " ", "Answer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.88665521662598*^9, 3.886655221991459*^9}, {
  3.886655382294469*^9, 3.886655459823698*^9}, {3.890924127347117*^9, 
  3.890924128175269*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"5aca2649-fd42-422f-93eb-10a0e33b4de5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Answer is \"\>", "\[InvisibleSpace]", "0.0115`"}],
  SequenceForm["Answer is ", 0.0115],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8866554554126062`*^9, 3.886655460171793*^9}, 
   3.887269949434251*^9, 3.890924130577244*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"a9503802-c60f-497b-8b28-4bfaea913aac"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
1.2. Evaluating expression containing solely elementary functions\
\>", "Subsection",
 CellChangeTimes->{{3.8866554890670156`*^9, 
  3.8866555063993692`*^9}},ExpressionUUID->"ad997c4e-905d-4d2a-948f-\
d95738043827"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Find the value of expression ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", 
         FractionBox["1", "3"], "cos", 
         RowBox[{"(", 
           FractionBox["1", 
            RowBox[{"tan", "3"}]], ")"}], "+", 
         FractionBox["1", "5"], 
         FractionBox[
          RowBox[{
            SuperscriptBox["sin", "2"], "(", 
            RowBox[{"5", 
              SqrtBox["2"]}], ")"}], 
          RowBox[{"cos", 
            RowBox[{"10", 
              SuperscriptBox[
               StyleBox["e", "TI"], "3"]}]}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "y=\\frac{1}{3}\\cos\\left( \\frac{1}{\\tan \
3}\\right)+\\frac{1}{5}\\frac{\\sin^2(5\\sqrt{2})}{\\cos{10e^3}}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "556cda8d-afcf-465e-af83-835cbed8a31a"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886655530999673*^9, 3.886655661645049*^9}, {
  3.88665569910795*^9, 3.886655706497026*^9}, {3.886655859950633*^9, 
  3.886655863889464*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"a2adb66d-5883-4d99-b9a9-5c7c461594c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "Answer"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"Cos", "[", 
      FractionBox["1", 
       RowBox[{"Tan", "[", "3", "]"}]], "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "5"], " ", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], ")"}], "2"], 
      RowBox[{"Cos", "[", 
       RowBox[{"10", 
        SuperscriptBox["\[ExponentialE]", "3"]}], "]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Answer", " ", "=", " ", 
   RowBox[{"N", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Answer is \>\"", ",", " ", "Answer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886655876540362*^9, 3.8866560245740967`*^9}, {
  3.886656995231079*^9, 3.886656995633279*^9}},
 CellLabel->
  "In[799]:=",ExpressionUUID->"5360ff38-79ae-4478-ab8f-6170ea08c630"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Answer is \"\>", "\[InvisibleSpace]", "0.35061102822081447`"}],
  
  SequenceForm["Answer is ", 0.35061102822081447`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886656016139669*^9, 3.886656024841291*^9}, 
   3.886656996324541*^9, 3.8872699510067368`*^9},
 CellLabel->
  "During evaluation of \
In[799]:=",ExpressionUUID->"6b41957b-fcdf-490e-810e-a771d5000de9"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["2. Algebraic Evaluation", "Section",
 CellChangeTimes->{{3.886656050465459*^9, 
  3.886656073266295*^9}},ExpressionUUID->"39b763f7-5081-4ecd-99fe-\
c72379fba2f0"],

Cell[CellGroupData[{

Cell["2.1. Algebraic Manipulations", "Subsection",
 CellChangeTimes->{{3.886656063260935*^9, 
  3.8866560778855333`*^9}},ExpressionUUID->"c7c1c526-296f-43db-bd41-\
70b6283d4b6f"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Simplify expression ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{"2", 
            SuperscriptBox[
             StyleBox["a", "TI"], "2"], 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 StyleBox["b", "TI"], "+", 
                 StyleBox["c", "TI"]}], ")"}], 
             RowBox[{"2", 
               StyleBox["n", "TI"]}]], "-", 
            FractionBox["1", "2"]}], 
          RowBox[{
            StyleBox["a", "TI"], 
            SuperscriptBox[
             StyleBox["n", "TI"], "2"], "-", 
            SuperscriptBox[
             StyleBox["a", "TI"], "3"], "-", "2", 
            SuperscriptBox[
             StyleBox["a", "TI"], "2"], "-", 
            StyleBox["a", "TI"]}]], ":", 
         FractionBox[
          RowBox[{"2", 
            StyleBox["a", "TI"], 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 StyleBox["b", "TI"], "+", 
                 StyleBox["c", "TI"]}], ")"}], 
             StyleBox["n", "TI"]], "-", "1"}], 
          RowBox[{
            SuperscriptBox[
             StyleBox["a", "TI"], "2"], 
            StyleBox["c", "TI"], "-", 
            StyleBox["a", "TI"], 
            RowBox[{"(", 
              RowBox[{
                StyleBox["n", "TI"], 
                StyleBox["c", "TI"], "-", 
                StyleBox["c", "TI"]}], ")"}]}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\frac{2a^2(b+c)^{2n}-\\frac{1}{2}}{an^2-a^3-2a^2-a}:\\frac{2a(b+c)^n-1}\
{a^2c-a(nc-c)}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0ec439c3-be74-4bc9-98f5-e72d8db85052"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886656089558571*^9, 3.886656089638958*^9}, {
  3.886656123350178*^9, 3.8866561361595297`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4a0d36ee-e049-486c-a83e-5b3e3c9fe194"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "n", ",", "Result"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Result", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"2", 
         SuperscriptBox["a", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], 
          RowBox[{"2", "n"}]]}], "-", 
        FractionBox["1", "2"]}], 
       RowBox[{
        RowBox[{"a", " ", 
         SuperscriptBox["n", "2"]}], "-", 
        SuperscriptBox["a", "3"], "-", 
        RowBox[{"2", 
         SuperscriptBox["a", "2"]}], "-", "a"}]], ")"}], "/", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"2", "a", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], "n"]}], "-", "1"}], 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", "2"], " ", "c"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n", " ", "c"}], "-", "c"}], ")"}]}]}]], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Result is \>\"", ",", " ", "Result"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886656231874977*^9, 3.886656347733254*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"531603c5-d4e0-424c-8d0e-8056bccee8ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Result is \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], "n"]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a", "+", "n"}], ")"}]}]]}]}],
  SequenceForm[
  "Result is ", 
   Rational[-1, 2] $CellContext`c (1 + 
    2 $CellContext`a ($CellContext`b + $CellContext`c)^$CellContext`n)/(
   1 + $CellContext`a + $CellContext`n)],
  Editable->False]], "Print",
 CellChangeTimes->{3.8866563488747187`*^9, 3.887269952636569*^9, 
  3.890924166205926*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"e35cb4bc-5cb4-429d-bb2d-04c80c92b2eb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.2. Finding values of algebraic expressions", "Subsection",
 CellChangeTimes->{{3.886656386205278*^9, 
  3.886656397737224*^9}},ExpressionUUID->"8897ff19-fd05-44ea-ae8b-\
daeffec7b1a5"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Calculate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             SqrtBox[
              RowBox[{
                StyleBox["a", "TI"], 
                StyleBox["b", "TI"]}]], "-", 
             FractionBox[
              RowBox[{
                StyleBox["a", "TI"], 
                StyleBox["b", "TI"]}], 
              RowBox[{
                StyleBox["a", "TI"], "+", 
                SqrtBox[
                 RowBox[{
                   StyleBox["a", "TI"], 
                   StyleBox["b", "TI"]}]]}]]}], ")"}], ":", 
         FractionBox[
          RowBox[{
            RadicalBox[
             RowBox[{
               StyleBox["a", "TI"], 
               StyleBox["b", "TI"]}], "4"], "-", 
            SqrtBox[
             StyleBox["b", "TI"]]}], 
          RowBox[{
            StyleBox["a", "TI"], "-", 
            StyleBox["b", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\left(\\sqrt{ab}-\\frac{ab}{a+\\sqrt{ab}}\\right):\\frac{\\sqrt[4]{ab}-\
\\sqrt{b}}{a-b}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c995f23f-6dd0-45d0-8c2b-be68acfd0f08"],
 " for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]", "8", ",", 
         StyleBox["b", "TI"], "\[LongEqual]", "2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "a=8,b=2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b9222f40-9312-42bb-9316-8ad262b2b897"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886656405112088*^9, 3.886656427592371*^9}, {
  3.8866565264974527`*^9, 3.8866565308376913`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ec8da01f-daf8-4dd4-9633-dd8517257e26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", 
  RowBox[{"a", ",", "b", ",", "Answer"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Expr", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"a", " ", "b"}], "]"}], "-", 
      FractionBox[
       RowBox[{"a", " ", "b"}], 
       RowBox[{"a", "+", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"a", " ", "b"}], "]"}]}]]}], ")"}], "/", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"Surd", "[", 
        RowBox[{
         RowBox[{"a", " ", "b"}], ",", "4"}], "]"}], "-", 
       RowBox[{"Sqrt", "[", "b", "]"}]}], 
      RowBox[{"a", "-", "b"}]], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Answer", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Expr", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "->", "8"}], ",", 
       RowBox[{"b", "->", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The answer is \>\"", ",", " ", "Answer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8866565449188747`*^9, 3.886656577202702*^9}, {
  3.886656657472927*^9, 3.8866567573979807`*^9}},
 CellLabel->
  "In[806]:=",ExpressionUUID->"c8fe7f5d-54fa-4b31-a5ec-dae1a920eba6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The answer is \"\>", "\[InvisibleSpace]", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SqrtBox["2"]}], ")"}]}]}],
  SequenceForm["The answer is ", 8 (2 + 2^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8866567125844593`*^9, 3.8866567577097893`*^9}, 
   3.887269954710037*^9},
 CellLabel->
  "During evaluation of \
In[806]:=",ExpressionUUID->"4fba52d1-3e5f-4314-b074-757bb782c2eb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2.3. Solving equations", "Subsection",
 CellChangeTimes->{{3.886656781392222*^9, 
  3.8866567875700293`*^9}},ExpressionUUID->"6f44eccd-8995-45fa-8e28-\
9e14d67a111e"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          StyleBox["a", "TI"]], "+", 
         FractionBox["1", 
          RowBox[{
            StyleBox["a", "TI"], "+", 
            StyleBox["x", "TI"]}]], "+", 
         FractionBox["1", 
          RowBox[{
            StyleBox["a", "TI"], "+", "2", 
            StyleBox["x", "TI"]}]], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\frac{1}{a}+\\frac{1}{a+x}+\\frac{1}{a+2x}=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bb1fce68-0b20-4475-804e-a12c88deda4c"],
 " for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0ee8c642-2d2c-4092-9506-ef2ccc7d948c"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886656797380159*^9, 3.88665684842073*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"af031b6d-f630-4780-85c9-f553ff8d6bff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", 
      RowBox[{"a", "+", "x"}]], "+", 
     FractionBox["1", 
      RowBox[{"a", "+", 
       RowBox[{"2", " ", "x"}]}]]}], "==", "0"}], ",", "x"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8866568642159023`*^9, 3.886656880365831*^9}},
 CellLabel->
  "In[810]:=",ExpressionUUID->"8f883bd5-51cf-4c00-8c37-8cb1fbdff08b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "a"}], "-", 
        RowBox[{
         SqrtBox["3"], " ", "a"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "a"}], "+", 
        RowBox[{
         SqrtBox["3"], " ", "a"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.886656880927511*^9, 3.887269956576406*^9},
 CellLabel->
  "Out[811]=",ExpressionUUID->"ff957328-94bd-4e00-9116-1c57f0a86282"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3. Elements of Analytical Geometry", "Section",
 CellChangeTimes->{{3.886656943030428*^9, 
  3.886656960513402*^9}},ExpressionUUID->"4a0fa35c-e200-4d9c-ae01-\
651885ffe84a"],

Cell[CellGroupData[{

Cell["3.1. Operating with vectors", "Subsection",
 CellChangeTimes->{{3.886656984039689*^9, 3.88665698475525*^9}, {
  3.886657021230483*^9, 
  3.8866570287306232`*^9}},ExpressionUUID->"1ae86241-7ec7-4802-8702-\
e43d60d90e8d"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " For vectors ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          RowBox[{"[", 
            RowBox[{"-2", ",", "7", ",", "-1"}], "]"}], 
          StyleBox["T", "TI"]], ",", 
         StyleBox["b", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          RowBox[{"[", 
            RowBox[{"-3", ",", "5", ",", "2"}], "]"}], 
          StyleBox["T", "TI"]], ",", 
         SubscriptBox[
          StyleBox["c", "TI"], "1"], "\[LongEqual]", "2", 
         StyleBox["a", "TI"], "+", "3", 
         StyleBox["b", "TI"], ",", 
         SubscriptBox[
          StyleBox["c", "TI"], "2"], "\[LongEqual]", "3", 
         StyleBox["a", "TI"], "+", "2", 
         StyleBox["b", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "a=[-2,7,-1]^{T}, b=[-3,5,2]^{T}, c_1=2a+3b, c_2 = 3a+2b", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c2e6789b-379d-47aa-a26e-d24a31b5db4b"],
 " determine whether ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "33312229-6d48-4a61-9efa-73c979021a98"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e66ec0a5-3bf6-4dc2-aad1-fe1f7e0817ee"],
 " are collinear. Find lengths of vectors ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["a", "TI"], TraditionalForm], "errors" -> {}, "input" -> "a", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4c2adae6-9aeb-4519-bb36-070dba0096a6"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["b", "TI"], TraditionalForm], "errors" -> {}, "input" -> "b", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f2b5689c-da62-4a19-9512-9a6e66830057"],
 " and angle between them. Draw vectors ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["a", "TI"], TraditionalForm], "errors" -> {}, "input" -> "a", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c282741c-dd67-4293-880c-d11a793320d0"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["b", "TI"], TraditionalForm], "errors" -> {}, "input" -> "b", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "649f53c2-6182-41aa-ab90-64542531e64a"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8866570338593817`*^9, 3.886657058637619*^9}, {
  3.886657196040029*^9, 3.886657282407956*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"7648500d-af3d-4f53-b09d-b93489a7073f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c1", ",", "c2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "7", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "5", ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{
    RowBox[{"2", " ", "a"}], "+", 
    RowBox[{"3", " ", "b"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   RowBox[{
    RowBox[{"3", "a"}], "+", 
    RowBox[{"2", "b"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio", "=", 
   FractionBox["c1", "c2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Ratio is \>\"", ",", " ", "ratio"}], "]"}]}], "Input",
 CellChangeTimes->{{3.88665730202661*^9, 3.886657381464402*^9}, {
  3.886657425016295*^9, 3.886657483798194*^9}, {3.8866575408636208`*^9, 
  3.886657561620824*^9}, {3.88665762189209*^9, 3.886657663176512*^9}, {
  3.88665770302672*^9, 3.8866577200969*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"06d04f8a-3904-4aae-960a-51951fd07508"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ratio is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "12"], ",", 
     FractionBox["29", "31"], ",", "4"}], "}"}]}],
  SequenceForm["Ratio is ", {
    Rational[13, 12], 
    Rational[29, 31], 4}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886657720546398*^9, 3.886942100190852*^9, {3.887269959946525*^9, 
   3.887269970002022*^9}, 3.890924190177272*^9},
 CellLabel->
  "During evaluation of \
In[12]:=",ExpressionUUID->"72822589-5e79-43eb-a722-3373c9803f9d"]
}, Open  ]],

Cell[TextData[{
 "We thus conclude that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f48a0091-1827-4b21-906e-39a96055a57d"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "feac87d2-74a1-4d18-801d-fe539195ab4c"],
 " are not collinear."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8866577511928053`*^9, 3.886657766701714*^9}, {
  3.8869421892459993`*^9, 3.886942193545999*^9}},
 Background->None,ExpressionUUID->"6c76a3fe-108b-46a0-953c-5237864d59d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LengthOfA", "=", 
   RowBox[{"Norm", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthOfB", "=", 
   RowBox[{"Norm", "[", "b", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AngleAB", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"VectorAngle", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}], " ", "180"}], "\[Pi]"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Length of a is \>\"", ",", " ", "LengthOfA", ",", 
   "\"\< and length of b is \>\"", ",", " ", "LengthOfB"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Angle between a and b (in degrees) is \>\"", ",", " ", "AngleAB"}], 
  "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 InitializationCell->True,
 CellChangeTimes->{{3.886657790045834*^9, 3.886657914770402*^9}},
 Background->None,
 CellLabel->"In[19]:=",ExpressionUUID->"51d87477-d41f-4b6e-b002-44f38639a54d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of a is \"\>", "\[InvisibleSpace]", 
   RowBox[{"3", " ", 
    SqrtBox["6"]}], "\[InvisibleSpace]", "\<\" and length of b is \"\>", 
   "\[InvisibleSpace]", 
   SqrtBox["38"]}],
  SequenceForm[
  "Length of a is ", 3 6^Rational[1, 2], " and length of b is ", 38^
   Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886657834421661*^9, 3.886657915415949*^9, 3.8869420998617353`*^9, 
   3.887018339822893*^9, 3.8872600066296988`*^9, 3.887268954513976*^9, {
   3.887269961918004*^9, 3.887269971613687*^9}, 3.887270802714533*^9, 
   3.887270852073125*^9, 3.887279578775272*^9, 3.887305322399757*^9, 
   3.8874655207242403`*^9, 3.887538762281616*^9, 3.887865566912898*^9, 
   3.8909241302937527`*^9, 3.8909241929579678`*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"3018abdc-c438-4f84-b90e-f506efe39e07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Angle between a and b (in degrees) is \"\>", 
   "\[InvisibleSpace]", "30.57703017157362`"}],
  SequenceForm["Angle between a and b (in degrees) is ", 30.57703017157362],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886657834421661*^9, 3.886657915415949*^9, 3.8869420998617353`*^9, 
   3.887018339822893*^9, 3.8872600066296988`*^9, 3.887268954513976*^9, {
   3.887269961918004*^9, 3.887269971613687*^9}, 3.887270802714533*^9, 
   3.887270852073125*^9, 3.887279578775272*^9, 3.887305322399757*^9, 
   3.8874655207242403`*^9, 3.887538762281616*^9, 3.887865566912898*^9, 
   3.8909241302937527`*^9, 3.890924192961307*^9},
 CellLabel->
  "During evaluation of \
In[19]:=",ExpressionUUID->"7c7054e9-5f45-4e3d-b2a6-e51cc7ead7f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"z", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
     RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{"z", ",", "a"}], "}"}], "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{"z", ",", "b"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8869420133088703`*^9, 3.8869420309768744`*^9}, {
  3.88694207374021*^9, 3.886942146604549*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"4411b014-6ac9-4912-9396-90d6989c7ff9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.886942147265896*^9, 3.8872699797926598`*^9, 
  3.8909241957153597`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"45d4392b-3dc3-4192-8d0f-25184b181ed8"],

Cell[BoxData[
 Graphics3DBox[
  {Thickness[0.02], Arrowheads[0.1], Arrow3DBox[{{0, 0, 0}, {-2, 7, -1}}], 
   Arrow3DBox[{{0, 0, 0}, {-3, 5, 2}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  ImageSize->{367.298425028416, 374.3579477599418},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.2150767180431368`, -0.9930693070669089, 2.3573817010711045`},
  ViewVertical->{0.07840129263258991, 0.16292067677167638`, 
   0.9835192374294456}]], "Output",
 CellChangeTimes->{3.886942147265896*^9, 3.8872699797926598`*^9, 
  3.8909241957184668`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"53b0ba41-9a18-4399-8878-0f084f8ec12e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2. Geometric calculations in Triangle", "Subsection",
 CellChangeTimes->{{3.886942163427691*^9, 3.8869421641686773`*^9}, {
  3.8869421984349203`*^9, 
  3.886942206414322*^9}},ExpressionUUID->"68ab4371-afc3-434d-8373-\
1e5c392d7f90"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given triangle with vertices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{"6", ",", "2", ",", "-3"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{"6", ",", "3", ",", "-2"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "3"], 
         RowBox[{"(", 
           RowBox[{"7", ",", "3", ",", "-3"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A_1(6,2,-3),A_2(6,3,-2),A_3(7,3,-3)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00ff7859-c671-44e4-b84c-1ab6e413aba0"],
 ", find its sides, angles and area."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886942214430575*^9, 3.8869422680276003`*^9}, {
  3.88694229851645*^9, 3.8869423174730787`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8f1809e4-e071-4864-97a8-2533f22c483f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";", " ", 
  RowBox[{"A2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], ";", " ", 
  RowBox[{"A3", "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A1", ",", "A2", ",", "A3"}], "}"}], ",", 
   RowBox[{"BoxRatios", "->", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<SouthwestColors\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886942362266056*^9, 3.886942423753931*^9}, {
  3.8872693466452227`*^9, 3.887269355226076*^9}},
 CellLabel->
  "In[838]:=",ExpressionUUID->"0c5f2eb4-5768-484e-a642-d6cb622211a9"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxdl8tt3EAQRHtnSY5C8O/iTCYGhWDAZ6dQaTibCc0+dBUwT4Cg5VOh2V1d
5JI/f/35/D2q6u//33f558vqD/33Y5/8w/9v/gO89av1Qh25zuvk23rw+trH
A/WbC1zWv1HfevD61scX6jcXuKy/Ud968Prexw/qNxe4rJ+obz34wl7UexH3
9eo61DePz9aPrg+u5qL+3fWpbx6frb+6Priai/q761PfPD5b/3R9cDUX9bPr
U9+8kGfy5Jn613ne6MfZZ/TNM5f1zi2482zfonduwZ3n7MV65xbcefbeo3du
wZ3n5Mp65xbceXZuF/y0z4v3B/AaPj/0w/1Cb99u6OHzgp/2ecHPAref9nnB
zwK3n/Z5wc8Ct5/2ecFP+yzmcJ68hutBP3x+6O0PuOCnmENwwU8xh+CCn2IO
wQU/xRyCC35u5mqeXMP1oLcPD/TwbTNXN/TwbTNXF/TwbTNXb+jh22auBvTw
rfD9m/shv3/BBX+i97zggj/Re15wwZ/oPS+44E/0nhdc8Gdh3tyv+LwBnr0/
0MOHhXlzv8K8BZ69X9DDh4V5c7/CvLm+uMd58uwRXJhX3CO4MK+4R3BhXnGP
4MK8m3uZJxfm2tzLAz3m2tzLDT3m2tzLBT3mKjyv5nrk8yq40H/07gdc6D96
9wMu9L/QT64XPj+Dx7cHevS50E+uF/ST/NCHefL4AC70I/oALvSzOdc8uXDe
zbke6HHewvtF8sD3C3Ch/oI+++L7iP1hnbn/AWe6Up8=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{18, 3, 33}, {99, 8, 9}, {109, 9, 10}, {49, 4, 5}, {
           63, 5, 6}, {34, 1, 4}, {88, 7, 8}, {118, 10, 11}, {144, 14, 15}, {
           153, 17, 18}, {148, 15, 16}, {126, 11, 12}, {139, 13, 14}, {133, 
           12, 13}, {76, 6, 7}, {151, 16, 17}}], Polygon3DBox[CompressedData["

1:eJwNw4NyYwEAAMBMp2df7fZqN7bt5MVOXmzbtv23153ZCzAIgBsQCCT1fvM9
DPqBfH+HQl9fweBXl1DYzTUccXeLRD3cozGkrY23xwcM9vWFQORvb5Eu/21C
nx6xuOcnHP7lGU94eyWSbm8QSDiMTOFxFUokgkrDYVlsFJJGx6AZTDSKzlgt
/6zxODaHSODySEQeX7WzzaeQPwqoFIGQRhWKsBgmCwGnUOk0kZjJkEg5bJkc
3N1RsVmAjM9TqrgcuUIo+KQWCdUaGWAwsphSQCzSaCVirU4q0ekBqd7AoIsl
cpnRpJCbzEqF2eLb2wU16s9WrcZq02ltdr3O7jDoHU6jwekyGV1us8ntsZg9
XtDi9cX393w26xe/3eYPOOyBoNMRDLmcobDbFY543JGo1xON+byxeP5gPx7w
f00EA4lkKJhMhUOpdCSczkQjmWwsms3FY7l87fAgr1JawGTiWyGdKpaymXKl
WPhez6RL5c7RYS2XrVRLxXqjXGo0G/Uf3Vaz16+Um61qpdWuVdud4fFRJ5+r
1pqNbq/d6g9SyUKx1/05mp4cD/u90Xg4mEwH/fFkcXoyJeA53PHo12x9frbq
tAfD6WS+WJ2dLuaz38vFfLmajGfzvxfn6/+X1qnb
           "]]}],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{4, 1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
        47, 48, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
         3, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4},
        VertexColors->None]}, 
      {GrayLevel[0.2], Line3DBox[{4, 34},
        VertexColors->None], 
       Line3DBox[{48, 62, 75, 87, 98, 108, 117, 125, 132, 138, 143, 147, 150, 
        152, 153, 18},
        VertexColors->None], Line3DBox[{5, 49, 35},
        VertexColors->None], Line3DBox[{6, 63, 50, 36},
        VertexColors->None], Line3DBox[{7, 76, 64, 51, 37},
        VertexColors->None], Line3DBox[{8, 88, 77, 65, 52, 38},
        VertexColors->None], Line3DBox[{9, 99, 89, 78, 66, 53, 39},
        VertexColors->None], Line3DBox[{10, 109, 100, 90, 79, 67, 54, 40},
        VertexColors->None], Line3DBox[{11, 118, 110, 101, 91, 80, 68, 55, 41},
        VertexColors->None], 
       Line3DBox[{12, 126, 119, 111, 102, 92, 81, 69, 56, 42},
        VertexColors->None], 
       Line3DBox[{13, 133, 127, 120, 112, 103, 93, 82, 70, 57, 43},
        VertexColors->None], 
       Line3DBox[{14, 139, 134, 128, 121, 113, 104, 94, 83, 71, 58, 44},
        VertexColors->None], 
       Line3DBox[{15, 144, 140, 135, 129, 122, 114, 105, 95, 84, 72, 59, 45},
        VertexColors->None], 
       Line3DBox[{16, 148, 145, 141, 136, 130, 123, 115, 106, 96, 85, 73, 60, 
        46},
        VertexColors->None], 
       Line3DBox[{17, 151, 149, 146, 142, 137, 131, 124, 116, 107, 97, 86, 74,
         61, 47},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{4, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 
        19},
        VertexColors->None], Line3DBox[{33, 18},
        VertexColors->None], 
       Line3DBox[{5, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 20},
        VertexColors->None], 
       Line3DBox[{6, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 21},
        VertexColors->None], 
       Line3DBox[{7, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 22},
        VertexColors->None], 
       Line3DBox[{8, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 23},
        VertexColors->None], 
       Line3DBox[{9, 109, 110, 111, 112, 113, 114, 115, 116, 117, 24},
        VertexColors->None], 
       Line3DBox[{10, 118, 119, 120, 121, 122, 123, 124, 125, 25},
        VertexColors->None], 
       Line3DBox[{11, 126, 127, 128, 129, 130, 131, 132, 26},
        VertexColors->None], 
       Line3DBox[{12, 133, 134, 135, 136, 137, 138, 27},
        VertexColors->None], Line3DBox[{13, 139, 140, 141, 142, 143, 28},
        VertexColors->None], Line3DBox[{14, 144, 145, 146, 147, 29},
        VertexColors->None], Line3DBox[{15, 148, 149, 150, 30},
        VertexColors->None], Line3DBox[{16, 151, 152, 31},
        VertexColors->None], Line3DBox[{17, 153, 32},
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJxTTMoPSmViYGCYCcTMQMwR/eZbZOpN++1zvAtDb162t5zz86qMwil7MYlN
u64WX7O/1bdy9ybux/ZzxNX33Qp8bY9L/ag4fcQP1MpapH+5az/tda6x6Kwn
9nK+X1P+WT6xl/eW37Wg75E918OLxwSln9n7PIu4F/r+tn3QhbeqvZ1P7f/m
PNmlmfvc/sfRpVq5jlftGdb0ybzkeWH/NqVgyp5ZL+zZPOeHXZS/bH+seFvD
hV8v7W8qX+FZOeulvf8Mg1lT116zV/tVM0Xw+Cv7uN1bHm5oeWn/yJZ9mjLL
Tftr94Ua6ple2xvsv5xy7PEL+9l9DHli+2/ZS0yzvy+m88pe6NtbFSWb5/bv
3mjzXwq+bV+hWXrSQu+l/UUOs3X18U/tn1y1ZEuxv21veTVqRivbC/uI4x+d
lz58ZJ/CpvX4Pvt1+/7jPCHH3j+zjy7/HNLu8sDe3Sz8bHHIJXt+9/CX7349
tV8rwrTzyMVb9q9O/lmcH3TS/nLeF0P5D0/s17NPfvQ4+Jr9poRH/YveHbZn
eMXGtefyY/uO7K3tey9csp8XsfzUd5/D9u+freTbOfGBfXtut5H0lUv2Bl8/
L1MyPYZTHJc5uOzF5U5c/sIVDrjCDVc444oXXPGIK95xpRNc6QpXOsSVbkfD
mbrhPBqe5IXnaLjhD7fR8IGEz0gLh+Hq36Hur6Hi/sHmzoFyD63tpZb5pJqD
Sz0AwaaK5g==
     "],
    VertexNormals->CompressedData["
1:eJxTTMoPSmViYGCYCcTMQCxrPMF1eeUjeyi9H40/Kj4qPio+Kj4qPio+Kj4q
Pio+Kj4qPio+Kj4qjlccAJ1DZwQ=
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{293.34918389703813`, 322.4106140949419},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.17520743368113126`, -3.0678850194917247`, 
   1.4168217468549498`},
  ViewVertical->{0.02387365050551979, 0.418028009472261, 
   0.9081203841497005}]], "Output",
 CellChangeTimes->{3.8869424255281277`*^9, 3.887269356347478*^9, 
  3.887269454761571*^9, 3.887270023093762*^9},
 CellLabel->
  "Out[839]=",ExpressionUUID->"93b1d22d-8794-458f-a4cf-4f6ed1a4ddf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1A2", "=", 
   RowBox[{"A2", "-", "A1"}]}], ";", " ", 
  RowBox[{"A1A3", "=", 
   RowBox[{"A3", "-", "A1"}]}], ";", " ", 
  RowBox[{"A2A3", "=", 
   RowBox[{"A3", "-", "A2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthA1A2", "=", 
   RowBox[{"Norm", "[", "A1A2", "]"}]}], ";", 
  RowBox[{"LengthA1A3", "=", 
   RowBox[{"Norm", "[", "A1A3", "]"}]}], ";", 
  RowBox[{"LengthA2A3", "=", 
   RowBox[{"Norm", "[", "A2A3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angleA1", "=", 
   RowBox[{"VectorAngle", "[", 
    RowBox[{"A1A2", ",", "A1A3"}], "]"}]}], ";", 
  RowBox[{"angleA2", "=", 
   RowBox[{"VectorAngle", "[", 
    RowBox[{
     RowBox[{"-", "A1A2"}], ",", "A2A3"}], "]"}]}], ";", " ", 
  RowBox[{"angleA3", "=", 
   RowBox[{"VectorAngle", "[", 
    RowBox[{"A1A3", ",", "A2A3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Lengths of sides \!\(\*SubscriptBox[\(A\), \(1\)]\)\!\(\*SubscriptBox[\
\(A\), \(2\)]\), \!\(\*SubscriptBox[\(A\), \(1\)]\)\!\(\*SubscriptBox[\(A\), \
\(3\)]\), and \!\(\*SubscriptBox[\(A\), \(2\)]\)\!\(\*SubscriptBox[\(A\), \(3\
\)]\) are \>\"", ",", " ", "LengthA1A2", ",", "\"\<, \>\"", ",", "LengthA1A3",
    ",", "\"\<, \>\"", ",", "LengthA2A3"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Angles \!\(\*SubscriptBox[\(A\), \(1\)]\), \!\(\*SubscriptBox[\(A\), \
\(2\)]\), and \!\(\*SubscriptBox[\(A\), \(3\)]\) are \>\"", ",", " ", 
   "angleA1", ",", " ", "\"\<, \>\"", ",", " ", "angleA2", ",", "\"\<, \>\"", 
   ",", " ", "angleA3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886942437708068*^9, 3.886942594787272*^9}, {
  3.887269366349763*^9, 3.887269450859788*^9}},
 CellLabel->
  "In[840]:=",ExpressionUUID->"a895fa53-74a8-4adb-ad3a-d67a51eed0a2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lengths of sides \\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)\\!\
\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\), \\!\\(\\*SubscriptBox[\\(A\\), \
\\(1\\)]\\)\\!\\(\\*SubscriptBox[\\(A\\), \\(3\\)]\\), and \
\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)\\!\\(\\*SubscriptBox[\\(A\\), \\(3\
\\)]\\) are \"\>", "\[InvisibleSpace]", 
   SqrtBox["2"], "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   SqrtBox["2"], "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   SqrtBox["2"]}],
  SequenceForm[
  "Lengths of sides \!\(\*SubscriptBox[\(A\), \
\(1\)]\)\!\(\*SubscriptBox[\(A\), \(2\)]\), \!\(\*SubscriptBox[\(A\), \
\(1\)]\)\!\(\*SubscriptBox[\(A\), \(3\)]\), and \!\(\*SubscriptBox[\(A\), \(2\
\)]\)\!\(\*SubscriptBox[\(A\), \(3\)]\) are ", 2^Rational[1, 2], ", ", 2^
   Rational[1, 2], ", ", 2^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886942577395339*^9, 3.8869425951929083`*^9}, {
   3.887269451212336*^9, 3.8872694571108093`*^9}, 3.887270026316122*^9},
 CellLabel->
  "During evaluation of \
In[840]:=",ExpressionUUID->"cf09890d-b7ae-4cfb-a616-684e7bf6e89b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Angles \\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\), \
\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\), and \
\\!\\(\\*SubscriptBox[\\(A\\), \\(3\\)]\\) are \"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"]}],
  SequenceForm[
  "Angles \!\(\*SubscriptBox[\(A\), \(1\)]\), \!\(\*SubscriptBox[\(A\), \
\(2\)]\), and \!\(\*SubscriptBox[\(A\), \(3\)]\) are ", Rational[1, 3] Pi, 
   ", ", Rational[1, 3] Pi, ", ", Rational[1, 3] Pi],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886942577395339*^9, 3.8869425951929083`*^9}, {
   3.887269451212336*^9, 3.8872694571108093`*^9}, 3.887270026324122*^9},
 CellLabel->
  "During evaluation of \
In[840]:=",ExpressionUUID->"ef7f8ebf-ce42-4d54-8b5a-744b646c7057"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"A1A2", ",", "A1A3"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Area of triangle is \>\"", ",", " ", "S"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886942618420992*^9, 3.886942645445189*^9}, {
  3.8872700321514387`*^9, 3.887270034273275*^9}},
 CellLabel->
  "In[847]:=",ExpressionUUID->"1105956f-691a-443b-acec-c2b9ac9fc4f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Area of triangle is \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SqrtBox["3"], "2"]}],
  SequenceForm["Area of triangle is ", Rational[1, 2] 3^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8869426458506393`*^9, {3.887270028463738*^9, 3.8872700345931873`*^9}},
 CellLabel->
  "During evaluation of \
In[847]:=",ExpressionUUID->"19f866c2-3147-4b47-83b5-e0729fb893e5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3.3. Calculations in Tetrahedron", "Subsection",
 CellChangeTimes->{{3.886942655089711*^9, 
  3.886942693093926*^9}},ExpressionUUID->"7ce7fbc8-b052-4d43-8798-\
9ea5a3c98ae4"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Given Tetrahedron with vertices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "2"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{"-1", ",", "1", ",", "3"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "3"], 
         RowBox[{"(", 
           RowBox[{"2", ",", "-2", ",", "4"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "4"], 
         RowBox[{"(", 
           RowBox[{"-1", ",", "0", ",", "-2"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "A_1(1,1,2),A_2(-1,1,3),A_3(2,-2,4),A_4(-1,0,-2)", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2e312a14-681f-4fdf-abc4-a8bf6bc6f139"],
 ", find its volume, height ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["h", "TI"], TraditionalForm], "errors" -> {}, "input" -> "h", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "41c7a283-5cf4-46d7-b27b-6aec63ccbbc5"],
 " from vertex ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["A", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
     "A_4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3dc8a864-c4c4-4620-a2cd-b0a819697e16"],
 " on side ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         SubscriptBox[
          StyleBox["A", "TI"], "2"], 
         SubscriptBox[
          StyleBox["A", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "A_1A_2A_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "accc5d8e-963a-409d-895d-2b744fbfa3e2"],
 ". Display this tetrahedron, height ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["h", "TI"], TraditionalForm], "errors" -> {}, "input" -> "h", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "646b3db1-cec0-4337-8b7c-3678b87ee78d"],
 " and point ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["B", "TI"], "\[LongEqual]", 
         StyleBox["h", "TI"], "\[Intersection]", 
         RowBox[{"(", 
           RowBox[{
             SubscriptBox[
              StyleBox["A", "TI"], "1"], 
             SubscriptBox[
              StyleBox["A", "TI"], "2"], 
             SubscriptBox[
              StyleBox["A", "TI"], "3"]}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "B=h \\cap (A_1A_2A_3)", "state" -> "Boxes"|>,
    
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "28991237-d42b-495a-8c28-9cd2c2c685e7"],
 ".   "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886942698960346*^9, 3.886942721347617*^9}, {
  3.886942767256968*^9, 3.886942859822733*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8a96f913-484e-4999-a1d2-4aa6f0fb21bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], ";", 
  RowBox[{"A2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}]}], ";", 
  RowBox[{"A3", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], ";", 
  RowBox[{"A4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1A2", "=", 
   RowBox[{"A2", "-", "A1"}]}], ";", 
  RowBox[{"A1A3", "=", 
   RowBox[{"A3", "-", "A1"}]}], ";", 
  RowBox[{"A1A4", "=", 
   RowBox[{"A4", "-", "A1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{"Abs", "[", 
     RowBox[{"Det", "[", 
      RowBox[{"{", 
       RowBox[{"A1A2", ",", "A1A3", ",", "A1A4"}], "}"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"-", 
    RowBox[{"Cross", "[", 
     RowBox[{"A1A2", ",", "A1A3"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Norm", "[", "n", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   FractionBox[
    RowBox[{"3", " ", "V"}], "S"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"A4", "-", 
    RowBox[{
     FractionBox["n", 
      RowBox[{"2", "S"}]], "h"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
         "A1", ",", "A2", ",", "A3", ",", "A1", ",", "A4", ",", "A2", ",", 
          "A3", ",", "A4"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", ".7", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph2", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "B", "}"}], "->", 
      RowBox[{"{", "\"\<Intersection\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red"}], "]"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph3", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"A4", ",", "B"}], "}"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph4", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Gray", ",", 
      RowBox[{"InfinitePlane", "[", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2", ",", "A3"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"graph1", ",", "graph2", ",", "graph3", ",", "graph4"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8869428799406443`*^9, 3.886943236174882*^9}, {
  3.8869433962739687`*^9, 3.8869434556622*^9}, {3.8869439436543407`*^9, 
  3.886943944495417*^9}, {3.886944052661108*^9, 3.8869441056651487`*^9}, {
  3.8869441880966463`*^9, 3.886944210283935*^9}, {3.8869442483634233`*^9, 
  3.88694427895203*^9}, {3.886992902383547*^9, 3.886992919056756*^9}, {
  3.887269332119519*^9, 3.8872693325944653`*^9}, {3.887269470924314*^9, 
  3.887269548912717*^9}, {3.88726963058379*^9, 3.887269640191518*^9}, {
  3.887270050894936*^9, 3.8872700599784403`*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"fe9da181-7f34-411f-b9da-11233688d17d"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.01], 
    Line3DBox[{{1, 1, 2}, {-1, 1, 3}, {2, -2, 4}, {1, 1, 2}, {-1, 0, -2}, {-1,
      1, 3}, {2, -2, 4}, {-1, 0, -2}}]}, {{
     {RGBColor[1, 0, 0], PointSize[0.03], Point3DBox[{0.5, 2.5, 1.}]}, {}, {
      Inset3DBox[
       FormBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{64.65685424949238, 13.456854249492386`}, {0., 0.}], 
              Offset[{64.65685424949238, 0.45685424949238573`}, {0., 0.}], 
              Offset[{9.656854249492383, 0.4568542494923733}, {0., 0.}], 
              Offset[{9.656854249492383, 13.456854249492373`}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Intersection\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{37.15685424949238, 6.9568542494923795}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{84, 42},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], StandardForm], {0.5, 2.5, 1.}, 
       Offset[{-3.3368706917296125, -2.1954660363577174}, {0, 0}]], {}}}, {}}, 
   {Thickness[0.01], 
    {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{-1, 0, -2}, {Rational[1, 2], Rational[5, 2], 1}}, {{-1, 
        0, -2}, {0.5, 2.5, 1}}]]}}, 
   {GrayLevel[0.5], Opacity[0.3], 
    TagBox[ConicHullRegion3DBox[{{1, 1, 2}, {-1, 1, 3}, {2, -2, 4}}],
     "InfinitePlane"]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  BaseStyle->{
    RGBColor[0, 0, 1], 
    Opacity[0.7]},
  ImageSize->{361.2304025574042, 388.2043016859787},
  ImageSizeRaw->Automatic,
  ViewPoint->{3.1542837260294294`, 0.9066558575325595, 0.823692498270922},
  ViewVertical->{0.5219150250780896, 0.38180813142204056`, 
   0.7627760204527584}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.886943192670947*^9, 3.886943236423317*^9}, {
   3.886943441770355*^9, 3.8869434559874477`*^9}, 3.886943944953874*^9, {
   3.886944058851571*^9, 3.8869440715174932`*^9}, 3.886944106589765*^9, {
   3.886944189024497*^9, 3.886944210966353*^9}, {3.886944257235181*^9, 
   3.886944279898123*^9}, {3.886992911883483*^9, 3.88699292098424*^9}, 
   3.887269549669224*^9, {3.887269631673438*^9, 3.88726964132368*^9}, {
   3.887270038591668*^9, 3.887270060398411*^9}, {3.8875387123917923`*^9, 
   3.887538713521446*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNfQmYVdWV7smte28NFJNAMQkUyGwxixMICAoCKopjoSiKluCEE0rUmNKA
xinGIWgSjWYw3RozIenEzuBL0nba7pjuoLGNnbE1L8akW80znaHbx7t7r7WH
dc6/z9mn1O979X33VtW55+6z/n+Nezj7HHPWFZvOveisKzZvPKtzxWVnXbJp
88bLO5dvuaxxqOk9SVLZ2Xj9Q2dSbfy9N0nw231J8u4euEP/2dR9zjnnLDvv
vPPcB3XvpA/pP6tdmzZt2tXT06NeOxov/7x/pna6Gt/Ywq+krt+bOrgV/bPb
XU81o5qkT2uZdnbxK6nvCrbTwSJtOffcc1E7HdyGluRb6lDl/sap/pn/Qmeq
M+5vvJapM7+pz1QNN0RRIpof/cUK/f1UCDJ9XlXX3sGtdjdeX6fDimbVspLD
slgVTS7jb92vm1TvTfqDWgc3tctrNnlCy7RDC6t4VQ07YembybNOJr+Br1G7
Sh4ll6FTm4L/9R85wSydfyPxdDBPFQuqSRCseLIqbJKk6/++Yr9d4atxy85I
KlC5mgVisMmA01fSLSbNFhH/GJSKLNEuS7rDl6rJHdtlju2W8mnk5jzWrFPA
e0TbhkHVXlLp0oa9xWf1K8wMW4cvg7qeatvxwW3/UL/XDfZdibQQfer/8uyg
0mGOfidxgmZiw2SnpGUGun7fkj3Jyv8unzRCvbVQYOnyA0JTzLeH00kdGf8i
xZRr7B0BRQpoWmhUrX42FHznMc2BAtFf/9/8r41v/2fjtYdfOxuvdY2XbnWd
Pqe2jI3BGIluWbd6CbX6OcdNOvIKblr1+wDV/hsNg3yi8fvgzZs3L+Rrqmvv
brx+33g93zDW3Sl5TiRxtrAP7AqJ85gjwUa6WndW71qcyk4d/c5vXG+7dJpa
49+e7SnZkqY9+l3wdLzEHxLIhCwdYAbTNVRrYxuvURdeeOGDDU7mqwDANnRH
4/hQKVO/sXxNX6bXPd1t48/UecnR9M0dIWv4lLUGL+/c70k5UB+urzPg+WdN
Q1AlLAfbwxrB8DMmcBGp+vKtaSGRUpMV+gs2rDBln6SmQTKv+jrUspMXdvtJ
ol2/t5kLmdMFy40fpeG1DekJZ7sCsr2AYCP3WJOqHhcCd3DE03ZfV++UXXD+
JTGbXjcK01TQ+UrEJ/iYNQSSs+maxt9KVmcYAcL38N+C8JucrrvZMroM+/sR
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
35wiLDncTvKe/weOWZ/Y\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"e3b4c9c2-9b20-4db1-9a26-3a33c6857a07"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["4. Matrix Calculations", "Section",
 CellChangeTimes->{{3.886944333888665*^9, 
  3.886944338577331*^9}},ExpressionUUID->"76c4b2fd-b35e-41f0-84d7-\
2caab734ee1d"],

Cell[CellGroupData[{

Cell["4.1. Working with matrices", "Subsection",
 CellChangeTimes->{{3.886944345109672*^9, 
  3.886944351889045*^9}},ExpressionUUID->"2156b00c-0381-4fc1-bb1e-\
20ef0c009e61"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given matrices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]]}}], TraditionalForm]]],
            ")"}], ",", 
         StyleBox["B", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}}], TraditionalForm]]],
            ")"}]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A=\\begin{pmatrix} \
1&2&1\\\\0&2&0\\\\-1&1&1\\end{pmatrix},B=\\begin{pmatrix} \
1&1&2\\\\0&2&1\\\\1&-1&0\\end{pmatrix}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "77609bb6-567d-4b2e-8a5b-9d80d81c256d"],
 ", find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", "2", 
         SuperscriptBox[
          StyleBox["A", "TI"], "2"], "+", "3", 
         StyleBox["A", "TI"], "+", 
         StyleBox["E", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "M=2A^2+3A+E", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "60c724af-60ec-42dc-9a1b-3ee7ccf611e3"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["E", "TI"], TraditionalForm], "errors" -> {}, "input" -> "E", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4497d1dc-cb26-4fe3-8c61-b2998298ac84"],
 " is an identity matrix. Find inverse matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["A", "TI"], "-1"], TraditionalForm], "errors" -> {}, "input" -> 
     "A^{-1}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "be431469-4840-455a-abc5-55da71bba4ea"],
 ". Find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"det", 
         StyleBox["A", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\det A", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4ea16667-fb96-46d3-a94c-0f2e51e02f57"],
 ". Find sum and difference of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], ",", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A,B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8d281368-01c7-4439-98bd-b414cb82cc23"],
 ". Find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CenterDot]", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\cdot B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a18176cc-320a-44aa-94ac-b99a45a75a94"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CircleTimes]", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\otimes B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ee098bef-6a5a-42af-b237-9755e9398c38"],
 ", find difference between these values. Solve matrix equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         StyleBox["X", "TI"], "\[LongEqual]", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "AX=B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "82515a1e-7b7f-4001-92d5-74d799f715dd"],
 " with respect to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["X", "TI"], "\[Element]", 
         SuperscriptBox[
          StyleBox["R", FontSlant -> "Plain"], 
          RowBox[{"3", "\[Cross]", "3"}]]}], TraditionalForm], "errors" -> {},
      "input" -> "X \\in \\mathbb{R}^{3\\times 3}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "aa72030d-0b59-4ab3-b308-453c7c81ae6b"],
 ". "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886944384622839*^9, 3.886944390378944*^9}, {
  3.8869444808745728`*^9, 3.8869445551523657`*^9}, {3.886944591255308*^9, 
  3.886944640086549*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ceae94c2-eaf2-4f4e-859b-42c551c89d40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{
    RowBox[{"2", "*", 
     RowBox[{"A", ".", "A"}]}], "+", 
    RowBox[{"3", " ", "A"}], "+", 
    RowBox[{"5", " ", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix polynomial equals \>\"", ",", 
   RowBox[{"M", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886944679048202*^9, 3.886944763760104*^9}},
 CellLabel->
  "In[885]:=",ExpressionUUID->"12220fae-fb73-468e-bd60-214eec87f2ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix polynomial equals \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"8", "20", "7"},
       {"0", "19", "0"},
       {
        RowBox[{"-", "7"}], "5", "8"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix polynomial equals ", 
   MatrixForm[{{8, 20, 7}, {0, 19, 0}, {-7, 5, 8}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8869447640478497`*^9, 3.887270078548209*^9},
 CellLabel->
  "During evaluation of \
In[885]:=",ExpressionUUID->"959b2306-f677-4b66-8463-620610c26f51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"InverseA", "=", 
   RowBox[{"Inverse", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Inverse of matrix A is \>\"", ",", " ", 
   RowBox[{"InverseA", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886944819423246*^9, 3.886944841634057*^9}},
 CellLabel->
  "In[889]:=",ExpressionUUID->"4d58fbbb-98d9-426d-83b9-884bbb491fe6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inverse of matrix A is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "4"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {"0", 
        FractionBox["1", "2"], "0"},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["3", "4"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inverse of matrix A is ", 
   MatrixForm[{{
      Rational[1, 2], 
      Rational[-1, 4], 
      Rational[-1, 2]}, {0, 
      Rational[1, 2], 0}, {
      Rational[1, 2], 
      Rational[-3, 4], 
      Rational[1, 2]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886944842569429*^9, 3.88727007983141*^9},
 CellLabel->
  "During evaluation of \
In[889]:=",ExpressionUUID->"c7674e42-eec3-4fd6-b444-07c941b1899d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DetA", "=", 
   RowBox[{"Det", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<det(A) = \>\"", ",", " ", "DetA"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869448541931257`*^9, 3.88694487113142*^9}},
 CellLabel->
  "In[891]:=",ExpressionUUID->"d8eb1c3b-a94c-43e1-9fee-6db01bfa6b42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"det(A) = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["det(A) = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886944865424899*^9, 3.88694487169261*^9}, 
   3.887270081107752*^9},
 CellLabel->
  "During evaluation of \
In[891]:=",ExpressionUUID->"573defb1-c840-4491-a9bb-4c3f8fc74dee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sum of matrices A and B is \>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "+", "B"}], ")"}], "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Difference between matrices A and B is \>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "-", "B"}], ")"}], "//", "MatrixForm"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.886944883452634*^9, 3.886944979363739*^9}},
 CellLabel->
  "In[893]:=",ExpressionUUID->"15569c75-0994-4b4b-b519-89b4a33e3457"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sum of matrices A and B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "3"},
       {"0", "4", "1"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Sum of matrices A and B is ", 
   MatrixForm[{{2, 3, 3}, {0, 4, 1}, {0, 0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886944909550617*^9, {3.886944952824954*^9, 3.886944979757884*^9}, 
   3.8872700826591043`*^9},
 CellLabel->
  "During evaluation of \
In[893]:=",ExpressionUUID->"8b027634-4226-4b65-a453-a0a89e28d9ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Difference between matrices A and B is \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{"-", "1"}]},
       {
        RowBox[{"-", "2"}], "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Difference between matrices A and B is ", 
   MatrixForm[{{0, 1, -1}, {0, 0, -1}, {-2, 2, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886944909550617*^9, {3.886944952824954*^9, 3.886944979757884*^9}, 
   3.887270082667542*^9},
 CellLabel->
  "During evaluation of \
In[893]:=",ExpressionUUID->"aee93d26-c0fd-4fa9-9541-ef58bb1dd815"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatProduct", "=", 
   RowBox[{"A", ".", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemProduct", "=", 
   RowBox[{"A", "*", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix product of A and B is \>\"", ",", " ", 
   RowBox[{"MatProduct", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Elementwise product of A and B is \>\"", ",", " ", 
   RowBox[{"ElemProduct", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Difference between corresponding products is\>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"MatProduct", "-", "ElemProduct"}], ")"}], "//", 
    "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869449835464897`*^9, 3.886945028295285*^9}},
 CellLabel->
  "In[895]:=",ExpressionUUID->"0621a9d4-a4d7-4ac6-8f35-585518a4993d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix product of A and B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "4", "4"},
       {"0", "4", "2"},
       {"0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix product of A and B is ", 
   MatrixForm[{{2, 4, 4}, {0, 4, 2}, {0, 0, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945029073338*^9, 3.887270084910637*^9},
 CellLabel->
  "During evaluation of \
In[895]:=",ExpressionUUID->"35bd9709-73f0-4ef8-b652-75ebbe04ec9e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Elementwise product of A and B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "2"},
       {"0", "4", "0"},
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Elementwise product of A and B is ", 
   MatrixForm[{{1, 2, 2}, {0, 4, 0}, {-1, -1, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945029073338*^9, 3.887270084918817*^9},
 CellLabel->
  "During evaluation of \
In[895]:=",ExpressionUUID->"e9eb436f-b353-43f4-b436-1ddf32ffee93"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Difference between corresponding products is\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "2"},
       {"0", "0", "2"},
       {"1", "1", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Difference between corresponding products is", 
   MatrixForm[{{1, 2, 2}, {0, 0, 2}, {1, 1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945029073338*^9, 3.887270084927168*^9},
 CellLabel->
  "During evaluation of \
In[895]:=",ExpressionUUID->"3a02b37b-e4ad-4c9c-b6e1-6ac88656a128"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"InverseA", ".", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Solution to matrix equation AX=B w/ respect to X is \>\"", ",", " ", 
   RowBox[{"X", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869450450228233`*^9, 3.886945075768548*^9}},
 CellLabel->
  "In[900]:=",ExpressionUUID->"4f4df43a-56cc-4a3d-b7e8-278e3d91fd4f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Solution to matrix equation AX=B w/ respect to X is \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", "2"], 
        FractionBox["3", "4"]},
       {"0", "1", 
        FractionBox["1", "2"]},
       {"1", 
        RowBox[{"-", 
         FractionBox["3", "2"]}], 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Solution to matrix equation AX=B w/ respect to X is ", 
   MatrixForm[{{0, 
      Rational[1, 2], 
      Rational[3, 4]}, {0, 1, 
      Rational[1, 2]}, {1, 
      Rational[-3, 2], 
      Rational[1, 4]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8869450699111357`*^9, 3.886945076135571*^9}, 
   3.887270086478694*^9},
 CellLabel->
  "During evaluation of \
In[900]:=",ExpressionUUID->"857fe77b-0555-4aeb-81e8-07d8d6c3c480"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.2. Working with both matrices and vectors", "Subsection",
 CellChangeTimes->{{3.886945131834684*^9, 
  3.886945164356155*^9}},ExpressionUUID->"d37978e6-a7aa-4bbd-842c-\
16229e781527"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given matrices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-2", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}], ",", 
         StyleBox["B", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}], ",", 
         StyleBox["x", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "A=\\begin{pmatrix}0&2&3\\\\4&1&0\\\\2&-1&-2\\end{pmatrix},B=\\begin{\
pmatrix}1&2&0\\\\3&0&-1\\\\2&1&-1\\end{pmatrix},x=\\begin{pmatrix}2\\\\4\\\\-\
1 \\end{pmatrix}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "904f9fd5-48b2-44be-b93b-80549e16ec12"],
 " calculate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["A", "TI"], "-", 
              StyleBox["B", "TI"]}], ")"}], "2"], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "y=(A-B)^2x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "11277ae6-cd02-4ec5-bb3e-5b9d0714dd01"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["z", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], 
             StyleBox["B", "TI"], "-", 
             StyleBox["B", "TI"], 
             StyleBox["A", "TI"]}], ")"}], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "z=(AB-BA)x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e4cb6d12-ac97-456e-8fdb-b8fc21ee72da"],
 ". Solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CenterDot]", 
         StyleBox["u", "TI"], "\[LongEqual]", 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\cdot u=x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7b862440-be3e-454c-af85-db5bc8ea1812"],
 " with respect to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["u", "TI"], TraditionalForm], "errors" -> {}, "input" -> "u", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e8f00b12-fc2f-4d9f-b94a-f0433958d16e"],
 " using inverse matrix and Cramer\[CloseCurlyQuote]s rule. For each row and \
column of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e9ef30fa-379f-4a83-ae6a-caeac08e4bc3"],
 " find sum of elements. For matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["B", "TI"], TraditionalForm], "errors" -> {}, "input" -> "B", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c35c6ee0-2597-4544-9e9e-03870a4e33ae"],
 " find max and min elements.  "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886945168571397*^9, 3.886945185650916*^9}, {
  3.886945306782734*^9, 3.886945307898324*^9}, {3.886945514754613*^9, 
  3.886945638961314*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"c168fa98-9be9-4f48-bf5d-52f17f440a9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "-", "B"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", "-", "B"}], ")"}], ".", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Vector y is \>\"", ",", " ", 
   RowBox[{"MatrixForm", "[", "y", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", ".", "B"}], "-", 
      RowBox[{"B", ".", "A"}]}], ")"}], ".", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Vector z is \>\"", ",", " ", 
   RowBox[{"MatrixForm", "[", "z", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869456539897337`*^9, 3.886945783671982*^9}},
 CellLabel->
  "In[902]:=",ExpressionUUID->"02efa7c2-d011-4fb0-a645-a3f1464fb1cd"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vector y is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "16"}]},
        {
         RowBox[{"-", "7"}]},
        {
         RowBox[{"-", "3"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Vector y is ", 
   MatrixForm[{-16, -7, -3}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886945748996882*^9, 3.886945752243029*^9}, 
   3.886945784480541*^9, 3.887270090357484*^9},
 CellLabel->
  "During evaluation of \
In[902]:=",ExpressionUUID->"9dbbe6bd-828d-47e4-aade-e51b7284576b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vector z is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"12"},
        {"34"},
        {
         RowBox[{"-", "25"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Vector z is ", 
   MatrixForm[{12, 34, -25}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886945748996882*^9, 3.886945752243029*^9}, 
   3.886945784480541*^9, 3.887270090364572*^9},
 CellLabel->
  "During evaluation of \
In[902]:=",ExpressionUUID->"340f2e1c-a984-4d3c-8c8b-d57c38a7555b"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "To solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CenterDot]", 
         StyleBox["u", "TI"], "\[LongEqual]", 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\cdot u=x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cb9d3be4-dc81-4f79-b8a9-54a701be514f"],
 " we firstly use inverse matrix, that is, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["A", "TI"], "-1"], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "u=A^{-1}x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f4c5108a-00f4-430e-b14b-c48cfa8879d6"],
 ":"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886945816593981*^9, 3.886945848901478*^9}},
 Background->None,ExpressionUUID->"21679cdf-ca99-43ac-8247-7a0209529a6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Solution to Au=x w/ respect to u is \>\"", ",", 
   RowBox[{"MatrixForm", "[", "u", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869458533411493`*^9, 3.886945880061701*^9}},
 CellLabel->
  "In[909]:=",ExpressionUUID->"7a6d290b-108e-4589-91c9-cb106a21c5e1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Solution to Au=x w/ respect to u is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", 
          FractionBox["3", "2"]}]},
        {"10"},
        {
         RowBox[{"-", "6"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Solution to Au=x w/ respect to u is ", 
   MatrixForm[{
     Rational[-3, 2], 10, -6}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945880974772*^9, 3.887270092844326*^9},
 CellLabel->
  "During evaluation of \
In[909]:=",ExpressionUUID->"86d5c0ae-6e6a-4b0e-a608-b1668b16298c"]
}, Open  ]],

Cell["Now, using Cramer\[CloseCurlyQuote]s rule:", "Text",
 CellChangeTimes->{{3.886946271104147*^9, 
  3.886946275701436*^9}},ExpressionUUID->"0603c525-77de-4721-bdb1-\
426fb8c89940"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After putting vector x to the first column we get \>\"", ",", 
   RowBox[{"MatrixForm", "[", "A1", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946319245214*^9, 3.8869463628183928`*^9}, {
  3.886946440673752*^9, 3.886946462649172*^9}, {3.886946504884427*^9, 
  3.8869465073598623`*^9}, {3.886946595208465*^9, 3.88694660021828*^9}, {
  3.8869466594770613`*^9, 3.88694666745427*^9}},
 CellLabel->
  "In[911]:=",ExpressionUUID->"fdf23d05-d6dc-4db0-9b65-b73f42f99edc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After putting vector x to the first column we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "2", "3"},
       {"4", "1", "0"},
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After putting vector x to the first column we get ", 
   MatrixForm[{{2, 2, 3}, {4, 1, 0}, {-1, -1, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886946507964069*^9, 3.8869466680022793`*^9, 
  3.887270094506926*^9},
 CellLabel->
  "During evaluation of \
In[911]:=",ExpressionUUID->"3b9fa05f-b1d3-4b7b-9d73-7661feab9083"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "3"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<After putting vector x to the second column we get \>\"", ",", 
   RowBox[{"MatrixForm", "[", "A2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946526469054*^9, 3.8869465268193207`*^9}, {
  3.886946591889678*^9, 3.88694669237875*^9}},
 CellLabel->
  "In[913]:=",ExpressionUUID->"49acb0e0-3968-48d6-b80a-5325668c9be4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After putting vector x to the second column we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "2", "3"},
       {"4", "4", "0"},
       {"2", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After putting vector x to the second column we get ", 
   MatrixForm[{{0, 2, 3}, {4, 4, 0}, {2, -1, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8869466782964687`*^9, 3.886946692793482*^9}, 
   3.8872700970345984`*^9},
 CellLabel->
  "During evaluation of \
In[913]:=",ExpressionUUID->"29e6fcd2-c2dd-40c4-aefc-26bd396bb8d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A3", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After putting vector x to the third column we get \>\"", ",", 
   RowBox[{"MatrixForm", "[", "A3", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946706966298*^9, 3.886946734470977*^9}},
 CellLabel->
  "In[915]:=",ExpressionUUID->"5100c396-663f-468f-aa1d-ddd203268a95"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After putting vector x to the third column we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "2", "2"},
       {"4", "1", "4"},
       {"2", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After putting vector x to the third column we get ", 
   MatrixForm[{{0, 2, 2}, {4, 1, 4}, {2, -1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886946734778084*^9, 3.8872700987051973`*^9},
 CellLabel->
  "During evaluation of \
In[915]:=",ExpressionUUID->"40d95d98-cd8b-4fda-a01c-4459af8df771"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cramerU", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Det", "[", "A1", "]"}], ",", 
      RowBox[{"Det", "[", "A2", "]"}], ",", 
      RowBox[{"Det", "[", "A3", "]"}]}], "}"}], "/", 
    RowBox[{"Det", "[", "A", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Vector u calculated using Cramer's rule is \>\"", ",", " ", 
   RowBox[{"cramerU", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946760858025*^9, 3.8869468320512943`*^9}},
 CellLabel->
  "In[917]:=",ExpressionUUID->"73d049e2-7c3a-4b6e-8e7e-e081bb04a0c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vector u calculated using Cramer's rule is \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", 
          FractionBox["3", "2"]}]},
        {"10"},
        {
         RowBox[{"-", "6"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Vector u calculated using Cramer's rule is ", 
   MatrixForm[{
     Rational[-3, 2], 10, -6}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946825286914*^9, 3.886946832383032*^9}, 
   3.887270101629925*^9},
 CellLabel->
  "During evaluation of \
In[917]:=",ExpressionUUID->"722edc7d-89d4-441f-a429-995a271e6042"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sum of columns of matrix A is \>\"", ",", 
   RowBox[{"Total", "[", "A", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sum of rows of matrix A is \>\"", ",", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"A", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Max element of B is \>\"", ",", 
   RowBox[{"Max", "[", "B", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Min element of B is \>\"", ",", 
   RowBox[{"Min", "[", "B", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869459421814632`*^9, 3.8869459961330357`*^9}, {
   3.886946072851069*^9, 3.886946092824068*^9}, 3.886946251308957*^9, 
   3.886946840528365*^9},
 CellLabel->
  "In[919]:=",ExpressionUUID->"4447d4b6-a9c2-447c-88c9-abe49dea8890"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sum of columns of matrix A is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "1"}], "}"}]}],
  SequenceForm["Sum of columns of matrix A is ", {6, 2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.8869468414233294`*^9, 3.8872701030504293`*^9},
 CellLabel->
  "During evaluation of \
In[919]:=",ExpressionUUID->"bdf2cdfa-d5c9-4177-8721-5b7b55fd3fe7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sum of rows of matrix A is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", 
     RowBox[{"-", "1"}]}], "}"}]}],
  SequenceForm["Sum of rows of matrix A is ", {5, 5, -1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.8869468414233294`*^9, 3.887270103058432*^9},
 CellLabel->
  "During evaluation of \
In[919]:=",ExpressionUUID->"5a1eaad2-2e4d-4e64-be11-c330910e0953"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Max element of B is \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Max element of B is ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.8869468414233294`*^9, 3.8872701030677013`*^9},
 CellLabel->
  "During evaluation of \
In[919]:=",ExpressionUUID->"b9896ca6-3d50-454a-8ca7-15fec0f65dde"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Min element of B is \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "1"}]}],
  SequenceForm["Min element of B is ", -1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.8869468414233294`*^9, 3.8872701030747557`*^9},
 CellLabel->
  "During evaluation of \
In[919]:=",ExpressionUUID->"30cac45e-6019-4b01-91fa-e6da25b09359"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4.3. Creating matrices", "Subsection",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886946889374241*^9, 3.8869468950970716`*^9}},
 Background->None,ExpressionUUID->"53888805-8636-46dd-8546-4715fb68a977"],

Cell[TextData[{
 StyleBox["Task 1:",
  FontWeight->"Bold"],
 " Generate a one-dimensional array ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["a", "TI"], TraditionalForm], "errors" -> {}, "input" -> "a", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "df6334e7-369b-4c81-a763-38b8ec0995ad"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["16", TraditionalForm], "errors" -> {}, "input" -> 
     "16", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2553d8cb-27b2-494a-a1a8-5e07eda2c8ba"],
 " containing random real numbers. Sort it in descending order and convert to \
a matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7968ee5b-1cc5-4d03-87aa-fb4d7a4d0265"],
 ". Create matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["B", "TI"], TraditionalForm], "errors" -> {}, "input" -> "B", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1bd0142b-c2f9-47e9-8572-cac4a427ab43"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"4", "\[Cross]", "4"}], TraditionalForm], "errors" -> {}, 
     "input" -> "4 \\times 4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0c195582-a1a9-4388-bbb3-0e76a02b6b86"],
 " containing ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["5", TraditionalForm], "errors" -> {}, "input" -> "5", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9e81e16b-eab6-4d9d-85dc-f432fb24aa0e"],
 "\[CloseCurlyQuote]s. Generate matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["F", "TI"], TraditionalForm], "errors" -> {}, "input" -> "F", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0d204cc1-f4ea-4b76-a844-31c74840bd5f"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"4", "\[Cross]", "4"}], TraditionalForm], "errors" -> {}, 
     "input" -> "4 \\times 4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4d408836-e16a-4344-8698-51f9d499c76b"],
 ", elements ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["F", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], ",", 
          StyleBox["j", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "F_{i,j}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "490bfb9c-843d-4459-b646-3ed0b6a576d8"],
 " of which are calculated according to formula ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["F", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], ",", 
            StyleBox["j", "TI"]}]], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["i", "TI"], "2"], "-", 
         SuperscriptBox[
          StyleBox["j", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "F_{i,j}=i^2-j^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "61bab8d7-3ad6-46ac-9f5f-87fae8a7b70c"],
 ". Generate diagonal array ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["G", "TI"], TraditionalForm], "errors" -> {}, "input" -> "G", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "87776cf3-1fcb-4ee7-9c9d-221a4b11a050"],
 " with elements of diagonal ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"1", ",", "-1", ",", "2", ",", "-2"}], "]"}], 
       TraditionalForm], "errors" -> {}, "input" -> "[1,-1,2,-2]", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7f23e7e1-7f49-4e03-bdc3-a4fb5402756b"],
 ". Calculate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", 
         StyleBox["A", "TI"], "+", 
         StyleBox["B", "TI"], "-", 
         StyleBox["C", "TI"], "-", 
         StyleBox["G", "TI"], "+", 
         StyleBox["E", "TI"], "-", "3"}], TraditionalForm], "errors" -> {}, 
     "input" -> "M=A+B-C-G+E-3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8d487046-c54e-48a3-93e1-0ac4bb457ce9"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["E", "TI"], TraditionalForm], "errors" -> {}, "input" -> "E", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f1181dc5-4bd5-439f-b3ff-466eb9517545"],
 " is identity matrix of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["4", TraditionalForm], "errors" -> {}, "input" -> "4", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1a59b74e-8da2-4a15-b833-5d66b8e658ba"],
 ".  "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886946900324759*^9, 3.88694693886938*^9}, {
   3.8869469741081123`*^9, 3.886947168614912*^9}, 3.886948208836972*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"890c0707-542d-46a7-ae8d-b7c766ac6a40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", "16"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Random list a is \>\"", ",", "a"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aSorted", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"a", ",", "Greater"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sorted list a is \>\"", ",", "aSorted"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"aSorted", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Reshaped list a as a matrix A is \>\"", ",", " ", 
   RowBox[{"A", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix B is \>\"", ",", 
   RowBox[{"B", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["i", "2"], "-", 
      SuperscriptBox["j", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix F is \>\"", ",", 
   RowBox[{"F", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "2", ",", 
      RowBox[{"-", "2"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Matrix G is \>\"", ",", " ", 
    RowBox[{"G", "//", "MatrixForm"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"A", "+", "B", "-", "F", "-", "G", "+", 
    RowBox[{"IdentityMatrix", "[", "4", "]"}], "-", "3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Expression A+B-F-G+E-3 equals \>\"", ",", 
   RowBox[{"M", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.886947280198844*^9, 3.88694729741492*^9}, {
  3.88694739235924*^9, 3.886947564830419*^9}, {3.886947614074218*^9, 
  3.88694773223169*^9}, {3.8869477725992413`*^9, 3.8869477972609053`*^9}, {
  3.8869478308010473`*^9, 3.886947840556287*^9}, {3.886947880565915*^9, 
  3.886947951408617*^9}, {3.887269825137833*^9, 3.887269825593173*^9}, {
  3.887269864925441*^9, 3.887269868302775*^9}, {3.887269908277936*^9, 
  3.887269920496619*^9}},
 CellLabel->
  "In[923]:=",ExpressionUUID->"08d41423-3ec4-4b32-918e-f8a1cd78c818"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Random list a is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.35426956844315294`", ",", "0.6990428778476641`", ",", 
     "0.9114590986250519`", ",", "0.4776215390581757`", ",", 
     "0.5895889594242536`", ",", "0.2008756533982936`", ",", 
     "0.1541278576670677`", ",", "0.5570920279592853`", ",", 
     "0.5806490731192211`", ",", "0.7588554686780828`", ",", 
     "0.8070057309774252`", ",", "0.9618926392561651`", ",", 
     "0.4196135025746037`", ",", "0.47313583735704046`", ",", 
     "0.8638433015645834`", ",", "0.45254149644342756`"}], "}"}]}],
  SequenceForm[
  "Random list a is ", {0.35426956844315294`, 0.6990428778476641, 
   0.9114590986250519, 0.4776215390581757, 0.5895889594242536, 
   0.2008756533982936, 0.1541278576670677, 0.5570920279592853, 
   0.5806490731192211, 0.7588554686780828, 0.8070057309774252, 
   0.9618926392561651, 0.4196135025746037, 0.47313583735704046`, 
   0.8638433015645834, 0.45254149644342756`}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.8872701053798943`*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"54dca74b-ef8d-4a59-9464-bcab2d70c2d8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sorted list a is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.9618926392561651`", ",", "0.9114590986250519`", ",", 
     "0.8638433015645834`", ",", "0.8070057309774252`", ",", 
     "0.7588554686780828`", ",", "0.6990428778476641`", ",", 
     "0.5895889594242536`", ",", "0.5806490731192211`", ",", 
     "0.5570920279592853`", ",", "0.4776215390581757`", ",", 
     "0.47313583735704046`", ",", "0.45254149644342756`", ",", 
     "0.4196135025746037`", ",", "0.35426956844315294`", ",", 
     "0.2008756533982936`", ",", "0.1541278576670677`"}], "}"}]}],
  SequenceForm[
  "Sorted list a is ", {0.9618926392561651, 0.9114590986250519, 
   0.8638433015645834, 0.8070057309774252, 0.7588554686780828, 
   0.6990428778476641, 0.5895889594242536, 0.5806490731192211, 
   0.5570920279592853, 0.4776215390581757, 0.47313583735704046`, 
   0.45254149644342756`, 0.4196135025746037, 0.35426956844315294`, 
   0.2008756533982936, 0.1541278576670677}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.88727010538754*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"44dadafb-2d8d-480b-b43c-d1963d379fa0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reshaped list a as a matrix A is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.9618926392561651`", "0.9114590986250519`", "0.8638433015645834`", 
        "0.8070057309774252`"},
       {"0.7588554686780828`", "0.6990428778476641`", "0.5895889594242536`", 
        "0.5806490731192211`"},
       {"0.5570920279592853`", "0.4776215390581757`", "0.47313583735704046`", 
        "0.45254149644342756`"},
       {"0.4196135025746037`", "0.35426956844315294`", "0.2008756533982936`", 
        "0.1541278576670677`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Reshaped list a as a matrix A is ", 
   MatrixForm[{{0.9618926392561651, 0.9114590986250519, 0.8638433015645834, 
    0.8070057309774252}, {0.7588554686780828, 0.6990428778476641, 
    0.5895889594242536, 0.5806490731192211}, {0.5570920279592853, 
    0.4776215390581757, 0.47313583735704046`, 0.45254149644342756`}, {
    0.4196135025746037, 0.35426956844315294`, 0.2008756533982936, 
    0.1541278576670677}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.887270105395678*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"a7f3d676-6ccc-4a85-b1e0-a122ff30968c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "5", "5", "5"},
       {"5", "5", "5", "5"},
       {"5", "5", "5", "5"},
       {"5", "5", "5", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix B is ", 
   MatrixForm[{{5, 5, 5, 5}, {5, 5, 5, 5}, {5, 5, 5, 5}, {5, 5, 5, 5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.887270105403262*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"846ced16-e7de-4cb3-997c-9d4a899af815"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix F is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "3"}], 
        RowBox[{"-", "8"}], 
        RowBox[{"-", "15"}]},
       {"3", "0", 
        RowBox[{"-", "5"}], 
        RowBox[{"-", "12"}]},
       {"8", "5", "0", 
        RowBox[{"-", "7"}]},
       {"15", "12", "7", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix F is ", 
   MatrixForm[{{0, -3, -8, -15}, {3, 0, -5, -12}, {8, 5, 0, -7}, {15, 12, 7, 
    0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.887270105410554*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"5f625950-5640-4850-b581-e3db2a12074a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix G is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", "2", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix G is ", 
   MatrixForm[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 2, 0}, {0, 0, 0, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.887270105417685*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"f0a3d421-a323-4048-af3f-378f853e4a5c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Expression A+B-F-G+E-3 equals \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2.961892639256165`", "5.911459098625052`", "10.863843301564584`", 
        "17.807005730977423`"},
       {
        RowBox[{"-", "0.24114453132191738`"}], "4.699042877847664`", 
        "7.589588959424255`", "14.580649073119222`"},
       {
        RowBox[{"-", "5.4429079720407145`"}], 
        RowBox[{"-", "2.522378460941824`"}], "1.4731358373570407`", 
        "9.452541496443427`"},
       {
        RowBox[{"-", "12.580386497425396`"}], 
        RowBox[{"-", "9.645730431556848`"}], 
        RowBox[{"-", "4.799124346601706`"}], "5.154127857667067`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Expression A+B-F-G+E-3 equals ", 
   MatrixForm[{{2.961892639256165, 5.911459098625052, 10.863843301564584`, 
    17.807005730977423`}, {-0.24114453132191738`, 4.699042877847664, 
    7.589588959424255, 
    14.580649073119222`}, {-5.4429079720407145`, -2.522378460941824, 
    1.4731358373570407`, 
    9.452541496443427}, {-12.580386497425396`, -9.645730431556848, \
-4.799124346601706, 5.154127857667067}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}, {
   3.887269875803479*^9, 3.8872699210128937`*^9}, 3.887270105424593*^9},
 CellLabel->
  "During evaluation of \
In[923]:=",ExpressionUUID->"727924c2-b614-4717-935d-ad2d5011cb26"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Task 2.",
  FontWeight->"Bold"],
 " Create matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["Z", "TI"], TraditionalForm], "errors" -> {}, "input" -> "Z", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c5e35b56-87dd-4ef7-92ff-f7ad468a271f"],
 " elements of which are calculated according to relation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["Z", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], ",", 
            StyleBox["j", "TI"]}]], "\[LongEqual]", 
         SubsuperscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"], "2"], "-", 
         SubsuperscriptBox[
          StyleBox["y", "TI"], 
          StyleBox["j", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "Z_{i,j}=x_i^2-y_j^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "85adc4ba-c8d2-49b4-a654-fc0b630b3b6e"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[LongEqual]", 
         RowBox[{"{", 
           RowBox[{"-3", ",", "0", ",", "1", ",", "2", ",", "5"}], "}"}], ",", 
         StyleBox["y", "TI"], "\[LongEqual]", 
         RowBox[{"{", 
           RowBox[{"-5", ",", "0", ",", "-4", ",", "1", ",", "3"}], "}"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "x=\\{-3,0,1,2,5\\},y=\\{-5,0,-4,1,3\\}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d184123c-447f-4cab-b3b2-eac4f46e97a0"],
 ". Add to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["Z", "TI"], TraditionalForm], "errors" -> {}, "input" -> "Z", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "247c10db-eab8-4a5c-acd7-b640d50e794b"],
 " a column containing ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
       TraditionalForm], "errors" -> {}, "input" -> "\\{1,2,3,4,5\\}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2911cd0d-281a-465c-9044-5236eb33ad70"],
 ". Then, between columns 1 and 2 insert another column containing ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["1", TraditionalForm], "errors" -> {}, "input" -> "1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2ab6279f-b6f3-412e-9e77-0e33198e3140"],
 "\[CloseCurlyQuote]s. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886948024652896*^9, 3.886948057633003*^9}, {
  3.88694809430224*^9, 3.886948157314681*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"16e12a01-6188-4023-afeb-e1b07d19e1a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2", ",", "5"}], "}"}]}], 
  ";", 
  RowBox[{"y", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "0", ",", 
     RowBox[{"-", "4"}], ",", "1", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ")"}], "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Initial matrix Z is \>\"", ",", " ", 
   RowBox[{"Z", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8869482391109657`*^9, 3.886948363195558*^9}},
 CellLabel->
  "In[937]:=",ExpressionUUID->"b1765562-4c35-44ec-8f00-d02b4deb4dd4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial matrix Z is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "16"}], "9", 
        RowBox[{"-", "7"}], "8", "0"},
       {
        RowBox[{"-", "25"}], "0", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}]},
       {
        RowBox[{"-", "24"}], "1", 
        RowBox[{"-", "15"}], "0", 
        RowBox[{"-", "8"}]},
       {
        RowBox[{"-", "21"}], "4", 
        RowBox[{"-", "12"}], "3", 
        RowBox[{"-", "5"}]},
       {"0", "25", "9", "24", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Initial matrix Z is ", 
   MatrixForm[{{-16, 9, -7, 8, 0}, {-25, 0, -16, -1, -9}, {-24, 1, -15, 
    0, -8}, {-21, 4, -12, 3, -5}, {0, 25, 9, 24, 16}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886948359775201*^9, 3.886948363518854*^9}, 
   3.8869484490761337`*^9, 3.887269942717906*^9, 3.887270108638835*^9},
 CellLabel->
  "During evaluation of \
In[937]:=",ExpressionUUID->"480bc65d-8338-4e26-91c1-b6d2e786ffa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"joinedZ", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"Z", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], "}"}], 
      "]"}], ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After adding columns {1,2,3,4,5} to Z we get \>\"", ",", 
   RowBox[{"joinedZ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886948389324901*^9, 3.8869485053110323`*^9}},
 CellLabel->
  "In[940]:=",ExpressionUUID->"cbae4902-9350-42ca-853c-f308a564c392"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After adding columns {1,2,3,4,5} to Z we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "16"}], "9", 
        RowBox[{"-", "7"}], "8", "0", "1"},
       {
        RowBox[{"-", "25"}], "0", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}], "2"},
       {
        RowBox[{"-", "24"}], "1", 
        RowBox[{"-", "15"}], "0", 
        RowBox[{"-", "8"}], "3"},
       {
        RowBox[{"-", "21"}], "4", 
        RowBox[{"-", "12"}], "3", 
        RowBox[{"-", "5"}], "4"},
       {"0", "25", "9", "24", "16", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After adding columns {1,2,3,4,5} to Z we get ", 
   MatrixForm[{{-16, 9, -7, 8, 0, 1}, {-25, 0, -16, -1, -9, 2}, {-24, 1, -15, 
    0, -8, 3}, {-21, 4, -12, 3, -5, 4}, {0, 25, 9, 24, 16, 5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886948429781375*^9, 3.886948505700862*^9}, 
   3.887269944002635*^9, 3.887270110384322*^9},
 CellLabel->
  "During evaluation of \
In[940]:=",ExpressionUUID->"9b2326b3-8723-40a2-bde6-c50fc1506619"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"joinedWithOnesZ", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"joinedZ", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", "5"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"joinedZ", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "6"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<After adding column {1,1,1,1,1} between first and second solumns we \
get \>\"", ",", " ", 
   RowBox[{"joinedWithOnesZ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886948513939643*^9, 3.8869486009972*^9}},
 CellLabel->
  "In[942]:=",ExpressionUUID->"2da998c5-f59b-4bc7-b3db-8c22eb790bf3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After adding column {1,1,1,1,1} between first and second \
solumns we get \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "16"}], "1", 
        RowBox[{"-", "7"}], "8", "0", "1"},
       {
        RowBox[{"-", "25"}], "1", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}], "2"},
       {
        RowBox[{"-", "24"}], "1", 
        RowBox[{"-", "15"}], "0", 
        RowBox[{"-", "8"}], "3"},
       {
        RowBox[{"-", "21"}], "1", 
        RowBox[{"-", "12"}], "3", 
        RowBox[{"-", "5"}], "4"},
       {"0", "1", "9", "24", "16", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "After adding column {1,1,1,1,1} between first and second solumns we get ", 
   
   MatrixForm[{{-16, 1, -7, 8, 0, 1}, {-25, 1, -16, -1, -9, 2}, {-24, 1, -15, 
    0, -8, 3}, {-21, 1, -12, 3, -5, 4}, {0, 1, 9, 24, 16, 5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886948585384864*^9, 3.886948601615122*^9}, 
   3.887269945468128*^9, 3.887270111619061*^9},
 CellLabel->
  "During evaluation of \
In[942]:=",ExpressionUUID->"2762ed5b-e7ce-4579-ae40-23d10580b573"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["5. Solving equations and systems of equations", "Section",
 CellChangeTimes->{{3.886948673954214*^9, 
  3.886948697410881*^9}},ExpressionUUID->"3150ffd2-75d2-4fc5-839f-\
9c17d0580ad3"],

Cell[CellGroupData[{

Cell["5.1. Solving equations", "Subsection",
 CellChangeTimes->{{3.886948683230987*^9, 
  3.886948705997819*^9}},ExpressionUUID->"b930bdd9-3f7f-4f3f-ba2c-\
e4f1aa1d1294"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                StyleBox["x", "TI"], "2"], "/", 
               SuperscriptBox[
                StyleBox["a", "TI"], "2"]}]], "-", 
            StyleBox["x", "TI"], "/", 
            StyleBox["a", "TI"]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                StyleBox["x", "TI"], "2"], "/", 
               SuperscriptBox[
                StyleBox["a", "TI"], "2"]}]], "+", 
            StyleBox["x", "TI"], "/", 
            StyleBox["a", "TI"]}]], "\[LongEqual]", 
         FractionBox["1", "4"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\frac{\\sqrt{1+x^2/a^2}-x/a}{\\sqrt{1+x^2/a^2}+x/a}=\\frac{1}{4}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "98c9a458-c0ec-464e-b018-68ac4491a04b"],
 " w/ respect to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e5e20537-2324-46ca-9fb9-9aa226362c4c"],
 ". "
}], "Text",
 CellChangeTimes->{{3.886948719310954*^9, 3.886948726246007*^9}, {
  3.886948787975449*^9, 
  3.8869487913526087`*^9}},ExpressionUUID->"4ede7cdb-264f-4f2b-9647-\
270daa494a74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         SuperscriptBox["a", "2"]]}], "]"}], "-", 
      FractionBox["x", "a"]}], 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         SuperscriptBox["a", "2"]]}], "]"}], "+", 
      FractionBox["x", "a"]}]], "==", 
    FractionBox["1", "4"]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886948797858025*^9, 3.886948860009736*^9}},
 CellLabel->
  "In[944]:=",ExpressionUUID->"2190133e-dcc7-43c6-bd68-174dd330fbe9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "a"}], "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.886948844564666*^9, 3.886948860451639*^9}, 
   3.887270114692041*^9},
 CellLabel->
  "Out[945]=",ExpressionUUID->"f21b9a6e-835f-4596-b45f-2a5b1b8773d2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["5.2. Solving system of linear equations", "Subsection",
 CellChangeTimes->{{3.886959541093034*^9, 
  3.886959547715036*^9}},ExpressionUUID->"e63473c4-a89e-4b58-a4bd-\
c23856cccb00"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Solve system of linear equations ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         StyleBox["x", "TI"], "\[LongEqual]", 
         StyleBox["b", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "Ax=b", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "725cfa74-2fef-45b3-bd12-1369343efc15"],
 " given my matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-3", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "A=\\begin{pmatrix} \
1&2&-3&4&-1\\\\2&-1&3&-4&2\\\\3&1&-1&2&-1\\\\4&3&4&2&2\\\\1&-1&-1&2&-3\\end{\
pmatrix}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "87dc1a3c-9ee3-41b4-b632-879032cc654a"],
 " and vector ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["b", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["8", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-3", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "b=\\begin{pmatrix} -1\\\\8\\\\3\\\\-2\\\\-3\\end{pmatrix}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5b0786c9-1f06-4ba5-bfa6-d9bd8b5d7ba0"],
 ".\n"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886959696078499*^9, 3.886959759707322*^9}, {
  3.886959875397159*^9, 3.886959877974086*^9}, {3.886959910881341*^9, 
  3.886959924800009*^9}, {3.886962663780005*^9, 3.886962665010455*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"abce9887-4150-4d8a-8bce-9a5007715dd9"],

Cell[CellGroupData[{

Cell["5.2.1. Inverse matrix method", "Subsubsection",
 CellChangeTimes->{{3.886959948300321*^9, 
  3.8869599537213297`*^9}},ExpressionUUID->"52885431-1f1d-4b69-9275-\
95e7f19aea09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", "b"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x = \>\"", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886959956693712*^9, 3.886960010907481*^9}},
 CellLabel->
  "In[946]:=",ExpressionUUID->"78cd0672-10f0-487a-a249-659dd1507fdc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}],
  SequenceForm["x = ", {2, 0, -2, -2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886960011752186*^9, 3.887270117074086*^9},
 CellLabel->
  "During evaluation of \
In[946]:=",ExpressionUUID->"8f003c93-4fc3-40a6-99d0-acd7d139974b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.2. Using Solve function", "Subsubsection",
 CellChangeTimes->{{3.886960043502861*^9, 
  3.886960054424472*^9}},ExpressionUUID->"16720fd5-a602-417e-bd2e-\
542d77807571"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x1", "+", 
      RowBox[{"2", "x2"}], "-", 
      RowBox[{"3", "x3"}], "+", 
      RowBox[{"4", "x4"}], "-", "x5"}], "==", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x1"}], "-", "x2", "+", 
      RowBox[{"3", "x3"}], "-", 
      RowBox[{"4", "x4"}], "+", 
      RowBox[{"2", "x5"}]}], "==", "8"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "x1"}], "+", "x2", "-", "x3", "+", 
      RowBox[{"2", "x4"}], "-", "x5"}], "==", "3"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "x1"}], "+", 
      RowBox[{"3", "x2"}], "+", 
      RowBox[{"4", "x3"}], "+", 
      RowBox[{"2", "x4"}], "+", 
      RowBox[{"2", "x5"}]}], "==", 
     RowBox[{"-", "2"}]}], "&&", 
    RowBox[{
     RowBox[{"x1", "-", "x2", "-", "x3", "+", 
      RowBox[{"2", "x4"}], "-", 
      RowBox[{"3", "x5"}]}], "==", 
     RowBox[{"-", "3"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.88696005754172*^9, 3.886960208524148*^9}},
 CellLabel->
  "In[951]:=",ExpressionUUID->"fea13180-37e1-497d-a684-f0f9ae2bfcb3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", "2"}], ",", 
    RowBox[{"x2", "\[Rule]", "0"}], ",", 
    RowBox[{"x3", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"x4", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"x5", "\[Rule]", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.886960151189015*^9, 3.88696020910892*^9, 
  3.887270118952829*^9},
 CellLabel->
  "Out[951]=",ExpressionUUID->"e1ce75b2-be8c-4a65-bc69-2e7e08757312"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.3. Using LinearSolve function", "Subsubsection",
 CellChangeTimes->{{3.886960227047261*^9, 
  3.886960234466166*^9}},ExpressionUUID->"7f06f54f-fb38-46b7-8d73-\
50ae5d07732b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x = \>\"", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869602412593813`*^9, 3.8869602699189987`*^9}},
 CellLabel->
  "In[952]:=",ExpressionUUID->"7d3561b6-121e-401d-958d-58c9556de92b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}],
  SequenceForm["x = ", {2, 0, -2, -2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886960267563847*^9, 3.886960270445183*^9}, 
   3.887270122984968*^9},
 CellLabel->
  "During evaluation of \
In[952]:=",ExpressionUUID->"5cd665a3-ab92-4e46-901b-8fc5be234d63"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.4. Using Cramer\[CloseCurlyQuote]s method", "Subsubsection",
 CellChangeTimes->{{3.886960279973373*^9, 
  3.886960289487318*^9}},ExpressionUUID->"515ccf5f-7589-4777-a44f-\
170882e44281"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A3", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"4", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A4", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"5", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A5", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Det", "[", "A1", "]"}], ",", 
      RowBox[{"Det", "[", "A2", "]"}], ",", 
      RowBox[{"Det", "[", "A3", "]"}], ",", 
      RowBox[{"Det", "[", "A4", "]"}], ",", 
      RowBox[{"Det", "[", "A5", "]"}]}], "}"}], "/", 
    RowBox[{"Det", "[", "A", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x = \>\"", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886960341254387*^9, 3.8869604571968107`*^9}},
 CellLabel->
  "In[957]:=",ExpressionUUID->"0e27a091-9f75-4b18-988e-aa6fec68091c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}],
  SequenceForm["x = ", {2, 0, -2, -2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886960446800357*^9, 3.886960458087509*^9}, 
   3.887270124559623*^9},
 CellLabel->
  "During evaluation of \
In[957]:=",ExpressionUUID->"b5ffb633-9250-4e80-8979-be085161ccc2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.5. Using RowReduce method", "Subsubsection",
 CellChangeTimes->{{3.886960467904324*^9, 
  3.886960472011578*^9}},ExpressionUUID->"b633fbc2-02bf-4d50-a6c3-\
897f678ce3fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowReduce", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"A", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", "2"}], "]"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.886960516735553*^9, 3.886960588195342*^9}},
 CellLabel->
  "In[967]:=",ExpressionUUID->"cc47acfd-7e89-4d94-b2f3-3ecc957e92d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "2"},
     {"0", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", 
      RowBox[{"-", "2"}]},
     {"0", "0", "0", "1", "0", 
      RowBox[{"-", "2"}]},
     {"0", "0", "0", "0", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.886960563983725*^9, 3.886960588473365*^9}, 
   3.887270126380814*^9},
 CellLabel->
  "Out[970]//MatrixForm=",ExpressionUUID->"7bc6320c-3b05-4ee9-868b-\
55907f44a400"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["5.3. Solving non-linear equations", "Subsection",
 CellChangeTimes->{{3.886960629109853*^9, 
  3.886960639122243*^9}},ExpressionUUID->"a0657b09-35df-4359-adb3-\
c0cbd9e5a59a"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Solve system of non-linear equations ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["x", "TI"], "3"], "+", 
         SuperscriptBox[
          StyleBox["y", "TI"], "3"], "\[LongEqual]", "35"}], TraditionalForm],
      "errors" -> {}, "input" -> "x^3+y^3=35", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "183607ae-bdee-490e-86b9-35585dc0a56e"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], "+", 
             StyleBox["y", "TI"]}], ")"}], "\[LongEqual]", "30"}], 
       TraditionalForm], "errors" -> {}, "input" -> "xy(x+y)=30", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "293cfb1a-d6ad-40cf-adfe-e2c3eb019d50"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886960678845511*^9, 3.886960709597929*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5d09796a-55df-4c5e-8239-801fa68bd298"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "+", 
      SuperscriptBox["y", "3"]}], "==", "35"}], "&&", 
    RowBox[{
     RowBox[{"x", " ", "y", 
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}]}], " ", "==", " ", "30"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886960721623098*^9, 3.886960752636393*^9}},
 CellLabel->
  "In[971]:=",ExpressionUUID->"3a00ccb8-be56-45b4-a0a8-f10735330c8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "2"}], ",", 
     RowBox[{"y", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "3"}], ",", 
     RowBox[{"y", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.886960732710792*^9, 3.8869607529430037`*^9}, 
   3.887270129026248*^9},
 CellLabel->
  "Out[972]=",ExpressionUUID->"acaa7546-1127-4c8e-bb78-ecc076f53789"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["6. Functions and their plots", "Section",
 CellChangeTimes->{{3.88696083561491*^9, 
  3.886960846711356*^9}},ExpressionUUID->"0dff84e4-2fde-4f36-9f29-\
dfaf4d4ad9b9"],

Cell[CellGroupData[{

Cell["6.1. Plotting function by a points list", "Subsection",
 CellChangeTimes->{{3.886960852899634*^9, 
  3.886960867069808*^9}},ExpressionUUID->"2ab91690-6710-4ce0-ae9f-\
701e255c241e"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Plot function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", 
         RadicalBox[
          RowBox[{
            StyleBox["x", "TI"], "(", 
            RowBox[{
              StyleBox["x", "TI"], "+", "2"}], ")"}], "3"]}], 
       TraditionalForm], "errors" -> {}, "input" -> "y=\\sqrt[3]{x(x+2)}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "30ef81f7-a1cc-40c8-9412-4d699f13f80c"],
 " and its table of values. Plot ListPlot based on this table."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886960961320891*^9, 3.886961034995372*^9}, {
  3.886961419825473*^9, 3.886961425626286*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"bef2eada-bd3a-4bd3-8003-52959bd15458"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], "=", 
   RowBox[{"CubeRoot", "[", 
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "6"}], ",", "4"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8869610515456676`*^9, 3.886961115604908*^9}, {
  3.886961174372685*^9, 3.88696126339777*^9}, {3.8869612948440647`*^9, 
  3.886961294923634*^9}, {3.8869629633020763`*^9, 3.886962964401374*^9}},
 CellLabel->
  "In[973]:=",ExpressionUUID->"c205c11b-73db-4bcc-8479-516afded70ae"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
TXfiqQ==
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1:eJwl1WW0VWUUBdBHd3fz6G6QkG5QUcQgRSxSxMDEQAEFAwNBRUWx6FQM7O7u
7u5u5xr+mG+t/QGXc87dZ7zCaXPHHl2koKBgtx/Jvfz4Rl7PdIbRlaIUozgl
KEkpSlOGspSjPBWoSCUqU4W9fe63ci0zGE43qrKPP/tO3sBMRtCdQ3JN3Kqf
yniqMcbZ9/JGZjGS3ERlHtKX0oOp5qLcpp/GhHyOuQHP6yupzr7mH+RNzGax
uRVv6aOYq1fhYf1q2Z9l+nLZhW18kn8vR3AHe5gPlcVYzy7zlXJPdrLAvEy2
Zwvv5/7lMG5nYq5ZNuQFfY0cxCr9Utmdz/Ua7Kf/KG9mDkvMrXlbH80xelUe
0c+nJ9PMxfN/6acziQXmRryoX0FNxpp/krfkGWc/mOesGo/qF9CLw8wlcu/6
GUymFvs7+1muy3PMHnCss+o8pl9Ibw43l+RO/Uym5LrMjXkpz47ajDP/Itfn
vrI7HOesBo/rF9GHI8yluEs/K/etd+CD7FWuUS/kZf0qLtN78IVehwP0X+UG
Vum9maefK9vwTt4ROYQx+vGyJht5wnyNHJDdY7n5YtmV7Xya70qOzP1mJ8xH
ytJsYHeuSfbN7rMwz1l2ZCsfZvflcKbmeckmvKJfJwezWl+RPeRLvS4H6r/J
jfkOOM/clnfzDnCCXosnc7305ShzGe7Wz85O53mam/Jq3gfqcZD5d7kp30d2
kvnOavOUfgn9mG4uyz36OdlD6nOwsz/k5jzL7B0nOqvD09l5+jPDXI579UXZ
Oxaam/FanjsNGG/+U27JfWUPOclZXZ7J980AZprLc5++OPuod+Kj7GTuWW/O
6/q1XK735Cu9IRP0v+TWvDN6H+brS2U7NvOeea0cyjj9ZFmPTTybz5UD2cWK
PCvZjR18lndPjsou5++ZZ8kK3K+vlv1Ykt2Xnfk4+5/nq7fgDX0NjZho/ltu
y/PNnnOKs/o8l/tjELPNFXkgO5/9pDGTnP0jt+d5ZqcYTCGT/dm/ckfuMTvB
EJrQlGY0pwUtaUVr2tCWdrSnAx3pRGem+Nz8ctqZa82uMJQ5zirxYHY5u5qd
MLfkzbwLrNR78bW+To4u8v/vui7m/wA9EMgU
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$285891#1"]& ]},
    VertexColors->CompressedData["
1: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
hoG2Nr4rk4Y/O3WxnxsbB2SaUO/l0W0vfx5GX6NYzN2o2AGZ4sbNc3tYcKHV
5OD2EipI111u0whrh6sJXX+ahFiQOJxVZzaHemDpSn0rzN8UP71NDPO3B/1M
MMb8e/RIn96eFqjq4lLRNO+Dh0+tTxmupsGx5g6VHahbT2esoPQltQFFz8xo
UJ0J7MtOBv8EU2Cc463NAry/Sept+RLEYXzT98rXiNuYs31KGOavqHm/tgBx
6z/1vHGRFeLg8H66+j4DXCSKbvdtZP113nss6k3X4J59Ez794My8PslsFTmP
eQQqNkt6h+P+kptycKC1Qa5L8g3nzj64cNm1Zm5PC8z8sHlJ+dILp6/W3hLV
oAEn+coI5nnP/OaRNZjHff3vHDOsl2NQN13Erh345PJlli9jgc7JraviuJCf
OTm03A92QHTxy6gJRxZc360euyaFClcubT6ci3mUr5iJbph/z8/5m7ZgngZa
ykQYm4B8/+jGXcOd4Ok73XiBowOK5dLT52IIEKj02b6fGz8nZP+aSNc+8FBu
XLoA8VlGPolzwDwC73hetWBdbbHPc9NxXna/T2WZYbxF2ENyAuMxSVdHnuYT
YKB22FGQ2Q4TdlwLV8T2gAllKL78DgFL30RUj9l3APdp4dW3ArrhWJSbbDfe
M3r57/DNmCdwjzV1Pd5TVT5b9IVnG1zTclu+o54JUwKiMuO6BNzXLONWwPOU
uWrzed/U8d7XyBLPS8aqjgkgb8rNJky/sGbCTk4LB97Lf+fnv8V5zHtdBcaH
oalUNXfixxBcoAr3bJpuhthxRXn3FDZQ764Sz6Kx4c75kfwnczRo59hvkhfa
Dx2t54JSdQdBq3p1EQP9gMSGMdHRnh5I8ite41tBwut4uaiUYvQPU/847D6I
+3P2/YQSiwHH6poKIqaZECbi9DgvmgqCspP5xp/o4E37yRkiQYKttD7XwDgF
BpK4dR+iruj5kb41EXXFxNNmV0inQIjrrsM/UM98bbVXuI56xjml+eY+1C3X
dWhh9xAfyDwgpY59KXhsyh2O8dulH7yqMe579KSrIsZfts7cts+mAG2LAvsK
6pnf3DN8F1HPNFGthXzwcw2ljloV4ecWOVZVluPnUl7mlm5Jxn06/fPkwwk6
VCcrfl+6loTsTxu06r0IuCRyVMHOsg3OTnywEYtEf1nHq6D6oAdiWgIb2deQ
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
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 4}, {-0.9999998025472135, 2.884499058854636}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8869611162605677`*^9, {3.886961175127833*^9, 3.8869612640254917`*^9}, 
   3.8869612962912207`*^9, 3.886962964885284*^9, 3.8870183401074657`*^9, 
   3.887270132250937*^9},
 CellLabel->
  "Out[975]=",ExpressionUUID->"96b85199-7a25-4c64-9f08-1b7453ae5fcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"N", "[", 
        RowBox[{"y", "[", "x", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "4", ",", "0.5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"points", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8869612722105494`*^9, 3.8869613354624147`*^9}, {
  3.8870183457197447`*^9, 3.8870183479163446`*^9}},
 CellLabel->
  "In[976]:=",ExpressionUUID->"8c643499-d3f3-4537-811e-8bc883f5a544"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "6.`"}], "2.8844991406148166`"},
    {
     RowBox[{"-", "5.5`"}], "2.6800542054826813`"},
    {
     RowBox[{"-", "5.`"}], "2.46621207433047`"},
    {
     RowBox[{"-", "4.5`"}], "2.2407023732785825`"},
    {
     RowBox[{"-", "4.`"}], "2.`"},
    {
     RowBox[{"-", "3.5`"}], "1.7380133224432248`"},
    {
     RowBox[{"-", "3.`"}], "1.4422495703074083`"},
    {
     RowBox[{"-", "2.5`"}], "1.077217345015942`"},
    {
     RowBox[{"-", "2.`"}], "0.`"},
    {
     RowBox[{"-", "1.5`"}], 
     RowBox[{"-", "0.9085602964160698`"}]},
    {
     RowBox[{"-", "1.`"}], 
     RowBox[{"-", "1.`"}]},
    {
     RowBox[{"-", "0.5`"}], 
     RowBox[{"-", "0.9085602964160698`"}]},
    {"0.`", "0.`"},
    {"0.5`", "1.077217345015942`"},
    {"1.`", "1.4422495703074083`"},
    {"1.5`", "1.7380133224432248`"},
    {"2.`", "2.`"},
    {"2.5`", "2.2407023732785825`"},
    {"3.`", "2.46621207433047`"},
    {"3.5`", "2.6800542054826813`"},
    {"4.`", "2.8844991406148166`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88696130708689*^9, 3.8869613357745323`*^9}, 
   3.887018348343519*^9, 3.887270134940919*^9},
 CellLabel->
  "Out[977]//TableForm=",ExpressionUUID->"e710e17f-b3ce-4c1a-a84a-\
bba2d168ccdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"points", ",", 
    RowBox[{"Joined", "->", "True"}], ",", 
    RowBox[{"Mesh", "->", "Full"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Red", ",", "Dashed"}], 
      "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.886961343559403*^9, 3.886961382542801*^9}, {
  3.886962968310669*^9, 3.886962986824192*^9}, {3.887018331903459*^9, 
  3.887018354631936*^9}},
 CellLabel->
  "In[978]:=",ExpressionUUID->"0186d185-5572-4501-8818-461f9903c58b"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQDQESB77ZCXmWCLM7QPhiB7ILE5wOFLBC+SIHYv8n
pp7dxQzlCx1YmrEq9usbRihf4ADUICif58DJun18z8/9tofwOaDmf4fyWQ74
F1g4eth8hPIZYPqh4Mf++kUfud4Kvd0P4X9Aox+gyaODB/ao5n+wR7X/hz2q
+2DuhtEsDqj+43BA9T+PA2r4CDight9oeKLSo+GJCgYuPAFfzuy2
    "], {{{}, {}, 
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], CapForm["Butt"], 
       LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
        37, 38, 39, 40, 41, 42}]}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], CapForm["Butt"], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
        56, 57, 58, 59, 60, 61, 62, 63}]}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.9, 0.36, 0.054], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.365248, 0.427802, 0.758297], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.945109, 0.593901, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.645957, 0.253192, 0.685109], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.285821, 0.56, 0.450773], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.7, 0.336, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.491486, 0.345109, 0.8], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.71788, 0.568653, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.70743, 0.224, 0.542415], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.287228, 0.490217, 0.664674], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
       
       CapForm["Butt"], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6., 4.}, {-1., 2.8844991406148166`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.886961383487464*^9, {3.886962969795075*^9, 3.886962987295138*^9}, {
   3.8870183518445272`*^9, 3.887018354966878*^9}, 3.887270136840992*^9},
 CellLabel->
  "Out[978]=",ExpressionUUID->"acbf6f74-7286-4f28-955d-3393a562c776"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.886961396366028*^9, 3.88696139862179*^9}},
 CellLabel->
  "In[979]:=",ExpressionUUID->"f2c3749a-fdfe-4e6e-8c00-6fcd1eb3376b"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
TXfiqQ==
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
        "Butt"], LineBox[CompressedData["
1:eJwl1WW0VWUUBdBHd3fz6G6QkG5QUcQgRSxSxMDEQAEFAwNBRUWx6FQM7O7u
7u5u5xr+mG+t/QGXc87dZ7zCaXPHHl2koKBgtx/Jvfz4Rl7PdIbRlaIUozgl
KEkpSlOGspSjPBWoSCUqU4W9fe63ci0zGE43qrKPP/tO3sBMRtCdQ3JN3Kqf
yniqMcbZ9/JGZjGS3ERlHtKX0oOp5qLcpp/GhHyOuQHP6yupzr7mH+RNzGax
uRVv6aOYq1fhYf1q2Z9l+nLZhW18kn8vR3AHe5gPlcVYzy7zlXJPdrLAvEy2
Zwvv5/7lMG5nYq5ZNuQFfY0cxCr9Utmdz/Ua7Kf/KG9mDkvMrXlbH80xelUe
0c+nJ9PMxfN/6acziQXmRryoX0FNxpp/krfkGWc/mOesGo/qF9CLw8wlcu/6
GUymFvs7+1muy3PMHnCss+o8pl9Ibw43l+RO/Uym5LrMjXkpz47ajDP/Itfn
vrI7HOesBo/rF9GHI8yluEs/K/etd+CD7FWuUS/kZf0qLtN78IVehwP0X+UG
Vum9maefK9vwTt4ROYQx+vGyJht5wnyNHJDdY7n5YtmV7Xya70qOzP1mJ8xH
ytJsYHeuSfbN7rMwz1l2ZCsfZvflcKbmeckmvKJfJwezWl+RPeRLvS4H6r/J
jfkOOM/clnfzDnCCXosnc7305ShzGe7Wz85O53mam/Jq3gfqcZD5d7kp30d2
kvnOavOUfgn9mG4uyz36OdlD6nOwsz/k5jzL7B0nOqvD09l5+jPDXI579UXZ
Oxaam/FanjsNGG/+U27JfWUPOclZXZ7J980AZprLc5++OPuod+Kj7GTuWW/O
6/q1XK735Cu9IRP0v+TWvDN6H+brS2U7NvOeea0cyjj9ZFmPTTybz5UD2cWK
PCvZjR18lndPjsou5++ZZ8kK3K+vlv1Ykt2Xnfk4+5/nq7fgDX0NjZho/ltu
y/PNnnOKs/o8l/tjELPNFXkgO5/9pDGTnP0jt+d5ZqcYTCGT/dm/ckfuMTvB
EJrQlGY0pwUtaUVr2tCWdrSnAx3pRGem+Nz8ctqZa82uMJQ5zirxYHY5u5qd
MLfkzbwLrNR78bW+To4u8v/vui7m/wA9EMgU
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$285891#1"]& ]},
     VertexColors->CompressedData["
1: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
hoG2Nr4rk4Y/O3WxnxsbB2SaUO/l0W0vfx5GX6NYzN2o2AGZ4sbNc3tYcKHV
5OD2EipI111u0whrh6sJXX+ahFiQOJxVZzaHemDpSn0rzN8UP71NDPO3B/1M
MMb8e/RIn96eFqjq4lLRNO+Dh0+tTxmupsGx5g6VHahbT2esoPQltQFFz8xo
UJ0J7MtOBv8EU2Cc463NAry/Sept+RLEYXzT98rXiNuYs31KGOavqHm/tgBx
6z/1vHGRFeLg8H66+j4DXCSKbvdtZP113nss6k3X4J59Ez794My8PslsFTmP
eQQqNkt6h+P+kptycKC1Qa5L8g3nzj64cNm1Zm5PC8z8sHlJ+dILp6/W3hLV
oAEn+coI5nnP/OaRNZjHff3vHDOsl2NQN13Erh345PJlli9jgc7JraviuJCf
OTm03A92QHTxy6gJRxZc360euyaFClcubT6ci3mUr5iJbph/z8/5m7ZgngZa
ykQYm4B8/+jGXcOd4Ok73XiBowOK5dLT52IIEKj02b6fGz8nZP+aSNc+8FBu
XLoA8VlGPolzwDwC73hetWBdbbHPc9NxXna/T2WZYbxF2ENyAuMxSVdHnuYT
YKB22FGQ2Q4TdlwLV8T2gAllKL78DgFL30RUj9l3APdp4dW3ArrhWJSbbDfe
M3r57/DNmCdwjzV1Pd5TVT5b9IVnG1zTclu+o54JUwKiMuO6BNzXLONWwPOU
uWrzed/U8d7XyBLPS8aqjgkgb8rNJky/sGbCTk4LB97Lf+fnv8V5zHtdBcaH
oalUNXfixxBcoAr3bJpuhthxRXn3FDZQ764Sz6Kx4c75kfwnczRo59hvkhfa
Dx2t54JSdQdBq3p1EQP9gMSGMdHRnh5I8ite41tBwut4uaiUYvQPU/847D6I
+3P2/YQSiwHH6poKIqaZECbi9DgvmgqCspP5xp/o4E37yRkiQYKttD7XwDgF
BpK4dR+iruj5kb41EXXFxNNmV0inQIjrrsM/UM98bbVXuI56xjml+eY+1C3X
dWhh9xAfyDwgpY59KXhsyh2O8dulH7yqMe579KSrIsZfts7cts+mAG2LAvsK
6pnf3DN8F1HPNFGthXzwcw2ljloV4ecWOVZVluPnUl7mlm5Jxn06/fPkwwk6
VCcrfl+6loTsTxu06r0IuCRyVMHOsg3OTnywEYtEf1nHq6D6oAdiWgIb2deQ
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
      "]], {}}, {{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCwB2IQDQESB77ZCXmWCLM7QPhiB7ILE5wOFLBC+SIHYv8n
pp7dxQzlCx1YmrEq9usbRihf4ADUICif58DJun18z8/9tofwOaDmf4fyWQ74
F1g4eth8hPIZYPqh4Mf++kUfud4Kvd0P4X9Aox+gyaODB/ao5n+wR7X/hz2q
+2DuhtEsDqj+43BA9T+PA2r4CDight9oeKLSo+GJCgYuPAFfzuy2
     "], {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], CapForm["Butt"], 
        LineBox[{22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
         37, 38, 39, 40, 41, 42}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], CapForm["Butt"], 
        PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 
         56, 57, 58, 59, 60, 61, 62, 63}]}, {}}}], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 4}, {-0.9999998025472135, 2.884499058854636}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.886961399047863*^9, {3.886962979695449*^9, 3.886962989637064*^9}, 
   3.887018357189653*^9, 3.887270138642961*^9},
 CellLabel->
  "Out[979]=",ExpressionUUID->"0fb5fc16-0f91-46c0-b355-14694ea44c07"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6.2. Building polynomial plot", "Subsection",
 CellChangeTimes->{{3.886961454443787*^9, 
  3.886961463356419*^9}},ExpressionUUID->"c94bf70d-b5dd-48f6-90b7-\
c832cc3fac74"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Plot polynomial ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", "-5", "+", "3", 
         SuperscriptBox[
          StyleBox["x", "TI"], "2"], "+", "2", 
         SuperscriptBox[
          StyleBox["x", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "y=-5+3x^2+2x^3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d17b8ca6-1ec3-4327-abbb-4842202ad387"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886961472034359*^9, 3.8869615144388857`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4482cbbd-b021-4a68-a7e4-aa979f3f780b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", 
     SuperscriptBox["x", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886961592100997*^9, 3.886961654150113*^9}, {
  3.88696295038577*^9, 3.886962952420269*^9}},
 CellLabel->
  "In[980]:=",ExpressionUUID->"12f91193-037c-41a6-8fa1-ba8d352aa8b5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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

    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1:eJwl1GWUVWUYBeChU7p76JYG6QZbx0TFwC5QMUhRAYNUwEAlBAHBTlDA7law
u8UWAxTr2csfz7x7v+eugXu+c6ZwzLiiscUKCgpu9SNzTz9+NW/n3HQ6UZwS
lKQUe/ncb+YdnJdOZ0qzt2u/m3dyfjpdKMM+ru0w7+KCdLoyxn43npbnplOW
fe12mnczIZ1uHG9fiWfkeemUYz+7P8x7mJhOd06wr8yz8vx0yrO/3Z/mvUxK
pwcn2lfhOfnKdCpwgN0u8z4mp+c+2TXmbXkZPTlJr8rz8lXpTNFb8bG8hooc
qP9l3p/rXKJ34Mtcy72Vm/COvJxenKxX4wV5AZfKnfkm15gqt+YT+RpzELfI
c8ye/CQvMUfmnstF5t/mUvOBfF+zD1Pl6WZHVvCVfp05hLUU5XzNQpbzrr7I
HMAabtJnmd25mR/0G8zhrGMP/RSzOi/mu5j9WChfZnbh23yGC+U2fCqvzTMi
9+JnuRIHyf+Y6/PZ9Dxfdk15T15Bb07Va/BS/q/pVOZgu3/NDUxLpw+n2dfk
ZfnqdKpwSF4WHjQuSqcvValGdWpQk1ocmveLh+SL0+nH6Xa1eCVnlU5tDrMr
zsY8E+n05wy72rwqX5tOHQ63K8GmnFl63he9Ge/LKxnAmXodXstZcrncle9y
Ld9dbstn8jrm5ZzYLtdllFySzXmuzb7MkGeYu/O1vNgcyih5otk8zwIf5B6a
A/M85pnQZ5s9WMWP+o3miGL//z0aqOePU12W8bq+0OzPahbrV5jdWMn3+vXm
MMbmXMx2fJ57ZQ7O75Xnm735Ra7HEXIpHpZnhtyJbbnGJLkFH8qrGMQ4vR5b
8m+m51z19nwh30Z9jtRL80je03Qm6y35SF7NYM7S67M170g6DTjKrgyP5p1I
Zwhn2zXgjdyzdBoy2q4sj+Vs0xnKOXYNeVNekk4jjrYrx+O5l+kMY7xdI96S
l6bTmGPsyvOEPCud4TThWPsKPJlzTWcEhRxnX5Gn5DnpjKQpzWhOC1rSita0
oS3taE8HOube+j3/AViwvHw=
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$287686#1"]& ]},
    VertexColors->CompressedData["
1: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
kreX21L/80sxA///95n/+/92/h+3i2qk
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-8.999999020408223, 13.709216992799938`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886961622219467*^9, 3.886961654487405*^9}, 
   3.886962953672648*^9, 3.887270140756728*^9},
 CellLabel->
  "Out[982]=",ExpressionUUID->"ca01ccb3-572c-46f0-94f7-02c2a6665f3b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6.3. Build arbitrary explicitly defined function", "Subsection",
 CellChangeTimes->{{3.886961683740201*^9, 
  3.886961693962922*^9}},ExpressionUUID->"57aa3e37-ded0-42a9-aa97-\
c66a14de562a"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[LongEqual]", "2", 
         StyleBox["x", "TI"], "+", 
         SuperscriptBox[
          StyleBox["x", "TI"], "2"], "-", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], "+", "1"}], ")"}], "ln", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], "+", "2"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y(x)=2x+x^2-(x+1)\\ln(x+2)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "aa06a269-89e4-4c70-a514-6b86bb4f6495"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8869616999165373`*^9, 3.8869617046802483`*^9}, {
  3.8869617422571173`*^9, 3.8869617571357737`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5f629ddb-f37a-48c3-bff8-be709b418ca7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}], 
     RowBox[{"Log", "[", 
      RowBox[{"x", "+", "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886961760968286*^9, 3.8869617804636173`*^9}, {
  3.886961840550911*^9, 3.886961848882023*^9}, {3.8869619027606153`*^9, 
  3.8869619700069838`*^9}, {3.8869620197964983`*^9, 3.886962055232664*^9}, {
  3.886962946888434*^9, 3.886962956149392*^9}},
 CellLabel->
  "In[983]:=",ExpressionUUID->"107a72f0-6aac-4705-ad6d-1ef34786098e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
/fp2oYcB/l5FI2JnI5uInPe7fHpRWRP5H/hFPT0=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1:eJwl1HV4l1UYBuCNVLq7RiMtHVIKtsJQwYYZYA6wABUBg1BQwS6UblDs7u5u
sLu7uZ/LP+49z3t+17bvO+dsRSWlxScXFhQU3OxLI1bygvlK2Y9N7GI+SpZj
KXeZL5U92MAs87myDW/r1+Z72Ek/QP4i17JQ78YUfYZswWv6SEr1GjymL2CO
3oH39TzfMF8+klcxjmnmxryoD+JovTx367PpyIHmX+U6TmEUk6zV5PE8D2XY
1fyxvJrxDOYYaxW4J+9GJw4y/ybXcyrFlGU365/IayhhCMdaq8i9+nl0Zoz5
d7mB0xhNOYZb/zT7ln1mKBOs7cB9+vl0Yaz5D7mR07O3TLZWiyf0iynPCPNn
8rrsS/aOidZ25H79ArpysPlPuYkzsl9MsVabJ/VLqMDu5s/l9dkXppub8FL2
juP0SjyQc6Mbh5j/kpuZyjnmIl7PPuY89Do8lbvE3NwXtuoV2UP/Qt6QveRM
c1Nezn5zvF6ZB/VFsidzs9eyLe/o3TlU/zv3O/ujd2eaPlO25I2cuxzAmJyr
rMtynjZfLvuwSJ8nO7KWbdkPOZhbclbmPeWX8ka5RF4ku7COCeazZDNW8Uru
suzPZoabT5BVWMZD5sWyFxuZl3sg27GGd3O+clDh/3+7O5sPk//Im/JMOb+s
s57p5lmyFat5M/dVDmRs7qOsxwqeMV8h+7JYny878UHOQw7JXdL3kl/lfVmg
d2WifrZszqu5i5yoV+Vh/TLZm/m5h7I97+k9OFz/V27JeTPb3Jq3cldz5/X6
PJufQyX2Nn+dd849zF3lJGvVeES/kJ4cYf5P3ppzyP3MnbfWgOdyzlRmH/M3
cmnuWO4h+QdZnUdzpvTiSHP+Md2W9809owr7WvtWLst55k7Qm3HWC7ldn5Gz
oir7WftOLs8+ZU/pw3jrZbgjfzvZG6qxv7Xv5Yq8Z96fvlRnpM9+kCvzzHkX
+lGDUT77Ua6iNM9Jf2pS7LOf5Gom5ZkYQC1qU4e61KM+DWhIIxrThKY0ozkt
KKIlrWhNG9rSjvaM9jt/lmuYnPdiICXWy3KnPjPnxlRzQ57PvcyZ6p35UF8i
h7KFDubtwvrAkg==
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$288162#1"]& ]},
    VertexColors->CompressedData["
1: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
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-10.06350193532953, 8.562247665704987}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.886961780757794*^9, 3.8869618493679457`*^9, {3.8869619033452377`*^9, 
   3.886961912788475*^9}, {3.886961943175354*^9, 3.8869619703983917`*^9}, {
   3.886962044746202*^9, 3.886962055584353*^9}, {3.886962947495141*^9, 
   3.8869629564944153`*^9}, 3.887270142724844*^9},
 CellLabel->"Out[985]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQl0FFeWpsORmZKwyy5X1VRV19JdWV3dNT2n50xP9VLdXSAplNpSeyKw
2SHZBRgbsxsbCPbdMpux2YJdNiBkNstoIUCAsY2xDHgD7Hp9enq2npqZnuV0
T8/0zJt774sXEZkKSZmR6Sr5HHTO/5QZGfl//7vvRURmKDJVM3F+w9TZE+fP
mDwxXD534pyGGZPnhcuemQuLAg8pirpDUR7aG1aCcJsrinfzsqJka8GfURvS
p02bZkyfPl0K7yvj6LFAfOrUqXifltGa9EAO3hohnh5uaGhwW+BTlPEeTw9g
O9bjgaB4mJ4of0aL9aS5iY+paJ+03sPi159Sm4urMVhdmzJlCi7Ap8tlioVG
Ow6iZUFqA3jfthzroLm1rjJS+KMvl7Etf/u+6HNQMnE53h6XInZUIlb02FnG
rBIrj4jV/0Q8JBNRUQKJyyjVGMcCLakyQVyk4k3KrKK36GFAJqd7qrOMyWXj
PdYb1ydjtDPksiYyqSwKPSNhKMnMro2rDnZtXMNkh5uc3B0uq+ZySYB6dWe8
h3O891SyY1RuqxP/3BkJfJhGJ0eMUYJFTqIFRa11UPZzc7ENOSszWch6XDTI
wzlol2KER0yvmeJVigkeyCn9dtu9O1ByxFYrN0l3t/EReyRqnUjJz5Wbm9Mx
Z3TosaFUBbGy/yrQ872qEPdATk5cj6hWFcR+NUcOPv7WrS2fBtRxs5PEe8vp
3q7lM3rNOdHDeXxiGJR7L/lIQmS5u5W7ZyThsokeoSZkpbSTnBljO4vdSUjW
TUYm36+JvH/h9NTeOyX13vQMmTDjAx7B+wiZ4Jw0iu5dM+3BVHzEAiTMc9cO
2Z7X1nr28QF/nF3zCA98UnT3Qbe3XXOftDHJmRN2+om7ZuyOKQ/CamIXaTsY
k1hr6rYLau+QPY8+NtR19EneNXt1sV/aGI9lFoPJ43yPzuYmTA7FOeS7jkF5
uAwt7V0k/LjHnBKqun3Mt7soRjY3YccCPwldEd0Lyk1SviQZnxpaJMx173/c
BCIm7AN6vJ5z70XkMUnOAN2iul76yJ0MPjSqp6N8hvvVktw34eMTeoLcTxvv
OLofokJZu4Yv5aVyNhb8Pi2g8cPmWTHhaGkIb+fRWokvCr/hsezxFNcbSMsG
euaBni/bmekFWMg1A5Mef/jXkOGrWLcH+bKfmebaQw/m4m86y1cx30CYi3GP
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
56ST/0dOwTF//DjMDMiPmcHCTpuTnJa3oM6Vq/yNc+VwnIHWOHOuHIML2EM9
k2NCO5XXt+2nldw6yOBONhg/LrYUzIpJAxhTxYxQfkiJIaVUfhoSB9np8+Xm
mTfL42fOR8MtrdF/6pkX72TvC6b+wJopLTC1YdsxT50txUL2lTLAz5zHx86e
L2fnzpfrp89HtbNno//oipp0BajX1031+rVJvUb9QycqDijOSlOOtShfDofy
YTpbZ0lRlZ97MwpDDa1xvpXiKn/fM6/Xl8H38m1THKP9jPIFDuu6jrfo3h9R
G3puy5Y5xj5j3NtNx4diNkwG+wrIpGIoZRA/+2YUU9k6j2qN/urs2aq3T5yo
Nw4cmKD8Cs3yPGua1ldR9VrTP3ZqitNNP322DKefyBhwZ4TwkBA6Dxn5m5Za
W6MMZLS+FY3Db+Xv0psDvX4xVK95f24ZQFbcREwRDFqRLuBOBw9gphCHdPyt
tyoYyGh7q5KS/ueeSfv6qvr0N6y/lJUVSXHaYbgAJhPB8iAUBSNdQF2oYG0X
IGRbpdbeGv1bV0Zr4/f6rvmEXW9aGcVfzfLCrbhJ4DCK4eQkykb5VAwHIw/x
eJuldojaAVE7RFTl3/fMmvA9Uq7vrLe/lSutrJpVT8imY06rbpQtgJEgYDsG
a6vgHUKss61Cb78AAdujyt+4AopDbUgeXuUhl4Kl9UWIESeUhtsBzC6skop5
VIwDRq5AMCM72yph2cX2Snaxo1LvvFCp/LUr2PcFI+Ga17QClVoGdiDAUZAA
8fOQzzvbKzEByYQkZkelcamjUjPbo8wVJq3XcuIqxxwEx9vaojgvqNedpErq
MoyQiciOSn5JiF2GIsAyQFcrn/tlVzmdjgPLvEiVBqCKvACCYC8AKH65s5J3
dVYxkH4ZAt3zi6y1Bt6E2QiDaJrtFchSkaUiKoAcOEheAdrVi1XGVbNKu9Je
/alf4FCrjwA0rOIpBFIRpCJH5QACv2sXqxgofs2sVD72yxvm8OIm1LTrItY0
AaUiCbr4tlnFQPq1zurwdTN62y/ySYk0ozg47CoU0AXK5dfMKoSBqvl11KVq
451LVfHr0NEP/VLFv3sIxrs6K3GQEIVSkaQiRuXvXKoGt3cvVbN3L1Xp75rV
ygd+aeLfeQSxTvqVzkpmdccBqciBor53uZq9d7nKeL+rClaO3fALlP9KBYBY
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
c6bCqg==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"9f3968de-36eb-447e-acba-5bde09367887"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6.4. Drawing Parametric Plots", "Subsection",
 CellChangeTimes->{{3.886962539458325*^9, 
  3.886962553302968*^9}},ExpressionUUID->"1b514d27-16f2-4fd0-a948-\
8d60ab504ad7"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Build function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", "3", 
         SuperscriptBox["cos", "3"], 
         StyleBox["t", "TI"], ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", "2", 
         SuperscriptBox["sin", "3"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "x(t)=3\\cos^3 t,y(t)=2\\sin^3 t", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2ea5a83a-0bd6-452a-8276-4ea39fac889b"],
 ". Build table of values on interval ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"0", ",", "2", "\[Pi]"}], "]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "[0,2\\pi]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c69fa63c-a43a-4109-95ac-716b34f61a3b"],
 " and corresponding list plot. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886962559931553*^9, 3.886962579693067*^9}, {
  3.8869626188366127`*^9, 3.886962621099779*^9}, {3.886962717401464*^9, 
  3.886962756874774*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"40bb42af-ff82-40b5-97e7-fd961771883f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], "=", 
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Cos", "[", "t", "]"}], ")"}], "3"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], "=", 
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Sin", "[", "t", "]"}], ")"}], "3"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Blue"}], "}"}]}], ",", 
    
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.886962781090074*^9, 3.8869628564675093`*^9}, {
  3.886962942192412*^9, 3.886962942369005*^9}},
 CellLabel->
  "In[986]:=",ExpressionUUID->"12af2d7e-1448-4123-859a-ac1feb87d44e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
v8vG5A/7/kf7H7M0qrk=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.007], Opacity[1], 
       LineBox[CompressedData["
1:eJwl13e8l/MbgPEjUhpS0ZZSaWrRjmhbbUp776FdaEo0adCw2kbRMBraQ3vv
pb0TUqSS3/v++eNy39f1PEed832ez3mVvXmXWp3vSkhI6Hp3QkLMjxMlJJyy
vMwrm6XMgVpr8yfXs5gteONw158z3+ctXbtjVsIX+rP6u/Y89sftPez77U+4
b6v9QfTmf/Gcrnfg2/gH/AFely/hpWFN+MR/TturYD1vhX+1yvhSy4sntW38
IfThN/iH8L9L+FQ7o1XFBt4axbBdT4e++t98Au7BZ9rZ+P6wkbdBcezQ0+N1
/SafiMSYop3Tnscm3hYlsFPPgDf0W3wS7sVU7bz2AjbzdiiJXXpGvKnf5pOR
BNO0C9qL2MLboxR265nQT/+Hf4SkmK5d1F7CVt4BpbFHz4z++p34vHEfZmiX
tGrYxjuiDPbqWTBA/zc+ByTDTO2yVh3beSeUxT79YQyMhwmfGskxS/uF18AO
3jnhvw+miv6Vlg9PSft5Vgzid+EzLbX76mk/8jJIoX3Or9hrYifvEn+c+6rq
s7X8eFo7wB/B4HiOkMs9Hfl2+xTX0/BX+VJeyT7SXjaeU/vr9qP2WvZJ9pTu
/8L8VXtFqxXPpzlI2+Xaw/aW9ibm+ngWzDG8k/ma64nM53h9c47r5c1hvJ1Z
gBc0e/Lm5oH42Zof8i5mOV9/0J4Ndflb8fMyh/C77Y/ZO9l32Ke6Ny2vz5fF
ffFu8Df4z/b7Xf/S/pu9NnbzrK630jbwrvHR8Of51/H+4hntEM+OIfweTNNS
4Svtd14He3i3eId8/Qv6N/F9xXmgHeaP4m2eGNPjXcds7WqcOdjLu6M8jug5
MFS/FzPiWcAc7Y/4DLCP90AFHNVz4h09CWbG54uvtWu8LvbznqiIn/VceFdP
ilnxc8M32nVeDwd4L1TCMf0xDNPvw+fag5ir/clfxUHeG5VxXM+N4XoyfKE9
hHnaX7w+DvE+qIITcV5ihJ4cX2rpMF+7wRvgMO+Lqjip58XIeCfwlZYeC7S/
eUMc4a/HGeXzeFGfqxWKc007xfNhFE+J2VoGfKvd5I1wlL8RZ5avf0mfpxWO
Z1s7zfNjdDxTyO2eznynfU78bHgDvjzeRRTjb/Jj9oyuf2e/ZW8c77Vrg+P5
1B+xt7ZvjPPRPjbOwzgH7dXsDcz5rlUwh/P2ZpH4vsxevIV5MM4acwJ/LZ5F
X3/GXgD1+HvxdzLf5m3MVDyP2YU3NXfFWWuOi3cgPjd7Q/sKvbJ9lL2cvbi9
n/24PZP7vrfftjfBMZ7N9TbaJt4vzmZenS/gRePP0M7yx/E+fwDfxOfuvkba
ynj3kFn7gf9jb4rjvH+c3e6roX8bZ1ac99o5XhBjeGrM1bJgoXaHN8MJPgDV
cF4vhLF6GsyLswyLtH95c5zkA1EdF/TCGKenxfw4P7A4UcL/f1m30E5ZB6EG
LmpFMF5/EAviM8YS7S601E7zwaiJS1pRfKA/hG/j54gftURopZ3hb6EWLmtP
4EM9Hb7TsmNpnI1orZ3lQ1Abv2hPYoKeHt9rj2KZdk88D9o5/jbq4IpWDBP1
DPhBy4HlWmK01c7zoXgZv2rFMSmecyzUcmKFdm+c99oF/g6S+fxqat/FGR1n
mvYbL4HJ8Uwhb/z+4Lvti+Id5435qjhXkUtbyZPEu8AvxvfvnrZ8M3+XJ4/f
V/x7XtE+Ir6neJftve2H7DXtE+P3i/t/N0viVe0j18qZQ+N7NTPzfGZX3szc
E8+dOZ53NhfHOWI24Q3N1a5XMUfzDmZ5XsLsH5+9eYLXNifH+eprV5lJ4169
bPyus1+Kz8jezr5FH8ZT8Nr8h3gPUYT34Yfj7Hb9qr0UPuZZkN/1bnyvfYnr
GXlTvibOkji/tNX8PnTkl/lwpHRfHW1h/L3jnNf+4KXxCX8YP2p5sEZLhk7a
L3wE6uOaVgaf6lmxVMuLtVry+LlpV/hINMB1rSw+0x/BMi0f1mkp0EX7lY9C
Q/ypPYUpejYs1/LjJy1lnIHab3w0GuEv7WlM1bNjhVYA67X70VX7nb+HxrgR
5x2m6Y9ipfY4Nmip0E27yt9HE/ytPYPpeg6s0gpio/YAumt/8DFoipvas5ih
58RqrRA2aanRQ7vGx6IZbmnlMTOef6zRCmOzlgY9tet8HO73+b2sLdJKxnmm
3eYVMIs/hrVaJvc109bGOxLPk7aFp0Uv/me89+5pz7fy8TwVf4Uv5qXiTOd9
+RF7C9f/sVfE53GOu/aOPbe9gL27fZ+9mv0D+zr3Z7Y3tzcy17lWNX5XxfNo
Voq/vzkgzkDzJK8T72ei//79VtTX/w+vMZ42
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$288627#1"]& ]},
    VertexColors->CompressedData["
1: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
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2.9999989482166787`, 3.}, {-1.999999155687347, 
   1.9999992696470201`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8869628457888517`*^9, 3.88696285709862*^9}, 
   3.886962942830781*^9, 3.886963087652239*^9, 3.8872701446222563`*^9},
 CellLabel->
  "Out[989]=",ExpressionUUID->"bcd8255b-4f94-42f1-9902-30c905948fac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npoints", "=", 
   RowBox[{"N", "[", "points", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"npoints", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.886963013833933*^9, 3.886963077515991*^9}},
 CellLabel->
  "In[990]:=",ExpressionUUID->"1b81519f-371a-468b-857b-0ae09527e1be"],

Cell[BoxData[
 TagBox[GridBox[{
    {"3.`", "0.`"},
    {"2.3657415224242127`", "0.11208538229199129`"},
    {"1.0606601717798212`", "0.7071067811865475`"},
    {"0.16812807343798694`", "1.577161014949475`"},
    {"0.`", "2.`"},
    {
     RowBox[{"-", "0.16812807343798694`"}], "1.577161014949475`"},
    {
     RowBox[{"-", "1.0606601717798212`"}], "0.7071067811865475`"},
    {
     RowBox[{"-", "2.3657415224242127`"}], "0.11208538229199129`"},
    {
     RowBox[{"-", "3.`"}], "0.`"},
    {
     RowBox[{"-", "2.3657415224242127`"}], 
     RowBox[{"-", "0.11208538229199129`"}]},
    {
     RowBox[{"-", "1.0606601717798212`"}], 
     RowBox[{"-", "0.7071067811865475`"}]},
    {
     RowBox[{"-", "0.16812807343798694`"}], 
     RowBox[{"-", "1.577161014949475`"}]},
    {"0.`", 
     RowBox[{"-", "2.`"}]},
    {"0.16812807343798694`", 
     RowBox[{"-", "1.577161014949475`"}]},
    {"1.0606601717798212`", 
     RowBox[{"-", "0.7071067811865475`"}]},
    {"2.3657415224242127`", 
     RowBox[{"-", "0.11208538229199129`"}]},
    {"3.`", "0.`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88696307798419*^9, 3.886963089966919*^9}, 
   3.8872701467400293`*^9},
 CellLabel->
  "Out[992]//TableForm=",ExpressionUUID->"553df2d6-7ff1-43c0-9248-\
194ca793afc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"npoints", ",", 
    RowBox[{"Joined", "->", "True"}], ",", 
    RowBox[{"Mesh", "->", "Full"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Red", ",", "Dashed"}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.886963099162229*^9, 3.886963124182041*^9}},
 CellLabel->
  "In[993]:=",ExpressionUUID->"6ca216c5-5bef-47ae-acc9-0662f9aeb4ce"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEcDjBW5HmdJ5xvmRwsD/uuXrBxj/3NnPtnyn58
sD9jXZ82b8Ez++ygqgaL1qP2ivutDXhtftozoAIHqPx+mDxU/36Yfqj5B2Dm
Q+0/gGY/TH4/mv79aObvR7P/AJr79qO5fz+a//aj+380PEbDA194AABmaTi4

    "], {{{}, {}, 
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], 
       LineBox[{18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
        33, 34}]}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
        51}]}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3., 3.}, {-2., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8869631251730547`*^9, 3.8872701509871387`*^9},
 CellLabel->
  "Out[993]=",ExpressionUUID->"5b65447b-971a-47e0-83e1-4c7e9748c391"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.886963130257209*^9, 3.886963132529776*^9}},
 CellLabel->
  "In[994]:=",ExpressionUUID->"420fba9f-449d-4c25-a9d5-398a5549c7bf"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
v8vG5A/7/kf7H7M0qrk=
     "], {{}, {}, 
      TagBox[
       {RGBColor[0, 0, 1], Thickness[0.007], Opacity[1], 
        LineBox[CompressedData["
1:eJwl13e8l/MbgPEjUhpS0ZZSaWrRjmhbbUp776FdaEo0adCw2kbRMBraQ3vv
pb0TUqSS3/v++eNy39f1PEed832ez3mVvXmXWp3vSkhI6Hp3QkLMjxMlJJyy
vMwrm6XMgVpr8yfXs5gteONw158z3+ctXbtjVsIX+rP6u/Y89sftPez77U+4
b6v9QfTmf/Gcrnfg2/gH/AFely/hpWFN+MR/TturYD1vhX+1yvhSy4sntW38
IfThN/iH8L9L+FQ7o1XFBt4axbBdT4e++t98Au7BZ9rZ+P6wkbdBcezQ0+N1
/SafiMSYop3Tnscm3hYlsFPPgDf0W3wS7sVU7bz2AjbzdiiJXXpGvKnf5pOR
BNO0C9qL2MLboxR265nQT/+Hf4SkmK5d1F7CVt4BpbFHz4z++p34vHEfZmiX
tGrYxjuiDPbqWTBA/zc+ByTDTO2yVh3beSeUxT79YQyMhwmfGskxS/uF18AO
3jnhvw+miv6Vlg9PSft5Vgzid+EzLbX76mk/8jJIoX3Or9hrYifvEn+c+6rq
s7X8eFo7wB/B4HiOkMs9Hfl2+xTX0/BX+VJeyT7SXjaeU/vr9qP2WvZJ9pTu
/8L8VXtFqxXPpzlI2+Xaw/aW9ibm+ngWzDG8k/ma64nM53h9c47r5c1hvJ1Z
gBc0e/Lm5oH42Zof8i5mOV9/0J4Ndflb8fMyh/C77Y/ZO9l32Ke6Ny2vz5fF
ffFu8Df4z/b7Xf/S/pu9NnbzrK630jbwrvHR8Of51/H+4hntEM+OIfweTNNS
4Svtd14He3i3eId8/Qv6N/F9xXmgHeaP4m2eGNPjXcds7WqcOdjLu6M8jug5
MFS/FzPiWcAc7Y/4DLCP90AFHNVz4h09CWbG54uvtWu8LvbznqiIn/VceFdP
ilnxc8M32nVeDwd4L1TCMf0xDNPvw+fag5ir/clfxUHeG5VxXM+N4XoyfKE9
hHnaX7w+DvE+qIITcV5ihJ4cX2rpMF+7wRvgMO+Lqjip58XIeCfwlZYeC7S/
eUMc4a/HGeXzeFGfqxWKc007xfNhFE+J2VoGfKvd5I1wlL8RZ5avf0mfpxWO
Z1s7zfNjdDxTyO2eznynfU78bHgDvjzeRRTjb/Jj9oyuf2e/ZW8c77Vrg+P5
1B+xt7ZvjPPRPjbOwzgH7dXsDcz5rlUwh/P2ZpH4vsxevIV5MM4acwJ/LZ5F
X3/GXgD1+HvxdzLf5m3MVDyP2YU3NXfFWWuOi3cgPjd7Q/sKvbJ9lL2cvbi9
n/24PZP7vrfftjfBMZ7N9TbaJt4vzmZenS/gRePP0M7yx/E+fwDfxOfuvkba
ynj3kFn7gf9jb4rjvH+c3e6roX8bZ1ac99o5XhBjeGrM1bJgoXaHN8MJPgDV
cF4vhLF6GsyLswyLtH95c5zkA1EdF/TCGKenxfw4P7A4UcL/f1m30E5ZB6EG
LmpFMF5/EAviM8YS7S601E7zwaiJS1pRfKA/hG/j54gftURopZ3hb6EWLmtP
4EM9Hb7TsmNpnI1orZ3lQ1Abv2hPYoKeHt9rj2KZdk88D9o5/jbq4IpWDBP1
DPhBy4HlWmK01c7zoXgZv2rFMSmecyzUcmKFdm+c99oF/g6S+fxqat/FGR1n
mvYbL4HJ8Uwhb/z+4Lvti+Id5435qjhXkUtbyZPEu8AvxvfvnrZ8M3+XJ4/f
V/x7XtE+Ir6neJftve2H7DXtE+P3i/t/N0viVe0j18qZQ+N7NTPzfGZX3szc
E8+dOZ53NhfHOWI24Q3N1a5XMUfzDmZ5XsLsH5+9eYLXNifH+eprV5lJ4169
bPyus1+Kz8jezr5FH8ZT8Nr8h3gPUYT34Yfj7Hb9qr0UPuZZkN/1bnyvfYnr
GXlTvibOkji/tNX8PnTkl/lwpHRfHW1h/L3jnNf+4KXxCX8YP2p5sEZLhk7a
L3wE6uOaVgaf6lmxVMuLtVry+LlpV/hINMB1rSw+0x/BMi0f1mkp0EX7lY9C
Q/ypPYUpejYs1/LjJy1lnIHab3w0GuEv7WlM1bNjhVYA67X70VX7nb+HxrgR
5x2m6Y9ipfY4Nmip0E27yt9HE/ytPYPpeg6s0gpio/YAumt/8DFoipvas5ih
58RqrRA2aanRQ7vGx6IZbmnlMTOef6zRCmOzlgY9tet8HO73+b2sLdJKxnmm
3eYVMIs/hrVaJvc109bGOxLPk7aFp0Uv/me89+5pz7fy8TwVf4Uv5qXiTOd9
+RF7C9f/sVfE53GOu/aOPbe9gL27fZ+9mv0D+zr3Z7Y3tzcy17lWNX5XxfNo
Voq/vzkgzkDzJK8T72ei//79VtTX/w+vMZ42
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$288627#1"]& ]},
     VertexColors->CompressedData["
1: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
      "]], {}}, {{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEcDjBW5HmdJ5xvmRwsD/uuXrBxj/3NnPtnyn58
sD9jXZ82b8Ez++ygqgaL1qP2ivutDXhtftozoAIHqPx+mDxU/36Yfqj5B2Dm
Q+0/gGY/TH4/mv79aObvR7P/AJr79qO5fz+a//aj+380PEbDA194AABmaTi4

     "], {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        LineBox[{18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
         33, 34}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
         51}]}, {}}}], {{}, {}}}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2.9999989482166787`, 3.}, {-1.999999155687347, 
   1.9999992696470201`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8869631329454412`*^9, 3.887270152706024*^9},
 CellLabel->"Out[994]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
fN/ZwBCzHP+mzSzcHCSPO+j/AvumEvY=\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"7fb2ccca-9961-41cc-b969-960acb3aded4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6.5. Drawing parametric plots", "Subsection",
 CellChangeTimes->{{3.8869631876821117`*^9, 
  3.88696319321341*^9}},ExpressionUUID->"175a2a99-4772-4b1a-b432-\
7ad9e28d0606"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Build plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["5", "2"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["t", "TI"], "-", "sin", 
             StyleBox["t", "TI"]}], ")"}], ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["5", "2"], 
         RowBox[{"(", 
           RowBox[{"1", "-", "cos", 
             StyleBox["t", "TI"]}], ")"}]}], TraditionalForm], "errors" -> {},
      "input" -> "x(t)=\\frac{5}{2}(t-\\sin t),y(t)=\\frac{5}{2}(1-\\cos t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4717b0aa-b40a-4b1a-b6ac-8948287d4e0d"],
 " for interval ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[Element]", 
         RowBox[{"[", 
           RowBox[{
             FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "]"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "t \\in [\\frac{\\pi}{2},\\pi]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f45eadb0-f377-483c-8769-c3a5e8658fe1"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886963198957695*^9, 3.8869632138777523`*^9}, {
  3.886963248526696*^9, 3.886963267090506*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"17fbbd24-e29c-4048-ab78-61f73cc93d02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], "=", 
   RowBox[{
    FractionBox["5", "2"], 
    RowBox[{"(", 
     RowBox[{"t", "-", 
      RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], "=", 
   RowBox[{
    FractionBox["5", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.886963284033928*^9, 3.88696336804541*^9}},
 CellLabel->
  "In[995]:=",ExpressionUUID->"3354aa83-94f2-413c-a3c8-ed6e98c4b001"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1], 
       LineBox[{1, 130, 106, 86, 70, 58, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
        29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 131, 
        107, 87, 71, 59, 52, 45, 132, 108, 88, 72, 60, 53, 137, 113, 93, 77, 
        65, 46, 133, 109, 89, 73, 61, 54, 138, 114, 94, 78, 66, 47, 134, 110, 
        90, 74, 62, 55, 139, 115, 95, 79, 67, 48, 135, 111, 91, 75, 63, 142, 
        118, 98, 82, 56, 140, 116, 96, 80, 68, 144, 120, 100, 84, 49, 136, 
        112, 92, 76, 146, 122, 102, 64, 143, 119, 99, 83, 148, 124, 104, 57, 
        141, 117, 97, 150, 126, 81, 147, 123, 103, 152, 128, 69, 145, 121, 
        154, 101, 151, 127, 156, 85, 149, 125, 155, 105, 153, 129, 157, 50},
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$290395#1"]& ]},
    VertexColors->CompressedData["
1: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
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{1.4269908169872414`, 2.4999999999999996`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{1.4269908169872414`, 7.853981633974483}, {2.4999999999999996`, 
   5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886963336125927*^9, 3.886963376992052*^9}, 
   3.887270155651743*^9},
 CellLabel->
  "Out[998]=",ExpressionUUID->"3068ae1d-5e68-4493-9948-fc768bcc9412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      FractionBox["\[Pi]", "2"], ",", 
      FractionBox[
       RowBox[{"7", "\[Pi]"}], "2"]}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.886963372484934*^9, 3.886963391427318*^9}},
 CellLabel->
  "In[999]:=",ExpressionUUID->"36c29a41-a99e-4712-bcd6-37f008332fc7"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
rgd8BKpM8fXfI7t5hNZwvxzt0p5AYIL/AbYgtec=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1], 
       LineBox[CompressedData["
1:eJwl1nfciFUYxvHXKySZEdmbbJpo0JY0tJfdVtopmjSsVFRoUTbZSkNFKhTt
QlG0NUWFor7Xpz9+7vv6HS/neZ5zbur06tf1qiIFBQVrCgsKUpurj2r2w3y5
Dw4AXdDCL2P4qlggX4QDURQtrY3lq2GhfDEOwh5oZW0cXx3PyZfgYHTjl3Mn
4mv5YRRDa/4xrgaely/FIejOr+A64xv5ERRHG/5xriYWyZfhUPTgV3In4Vv5
UZTI8/BPcLXwgnw5BnLfypeiEG25ntzb+i74Th6DIdxW+QaUxZ55B9yT+tp4
UR4l79LfjivkW+Xv9JehKMbLe2G4vp31Xvp39Cdjlr4KvufHqXvgHn6sPFS/
TX9j3qO+NsrpJ6llsQoPyq+pTfAJSuY7qE/xr6t11BlqJbyLl6yPVnfzK9Q7
8k7UevgQfa3flv3wb6qXq/PU6tmbfoJaCiP0r6iN0d7P9M5+uFMwW78ffuAf
U4vhXn6cPEz/h/4mlMfkPBMe0u+Vc6Ifr6+Ll3NG5H/1d+JK+fb8uXnPKIbD
cma51fpTsTl/J0rlDPETuHpYLF+Fw3OO8y640/Cj/Dj2zhnin+bq59nkfjgi
Z5t/j+uKn+QnUBpt+We4BnhVvhpHogzaWZvIN8z3ka9BB5RFe2uT+EZYIl+L
jiiHw6xN5htjqXwdjkL57N3aFH7/fFv5ehyNCtmntal8EyyTb8Ax2Cd7sjaN
b4o35BtxLCpmT9am883yveWbcFzuLP8+dzp+lp9EpeyTn8E1x1tyfxyfO8t/
wJ2BX+SnsG/2zs/kWmC5fDNOyJ3NeePOxK/yeFTO8/DPci1zPuVbcAe3We6L
4uiUO8x9pD8Lv8kTUCXPzM/iWmGlPAB3cj/m/KBE5g93Bfex/mxsyRmQi+M+
+Wl5uP5PfX9UwBS5PEZlVub96WfrW2Omft/Mjsyowv+H512ZDWp9DKTuUn/K
O1MzgOerNfKOsWf+TnXvzAXcn/Ok7p89orOf75v7ne+nnqPOUavmXOL3nEm1
ROYfhuTuqA1zPq2NUP/ibs58zUzAPvqpagWM1lfNd9fP0bfBO5mfchEMkm+V
B+l/1vdDycxZ7kruU/252CpPxP3cdvkWVES1nBFurv4ArMqMwWDuF/nq3H10
yR3l1ujPwzZ5EqrnzPDzuAOxOnMAJ+eO8mu58/GHPBk10Imfzx2Ed3OGcEru
KL+OuwB/ylNQEyfyC7iD8V7ODE5FLXS2tpA/BO/nW+I01MZJ1p7jD8UHeUfo
ijroYu15vi0+zPPidNTN3q0t4tvhI/lunIF62ae1F/j2+Fi+B2eifvZk7cXM
PXwi34uzMl/4z7gL8Zc8FQ2yz8x87nB8Kt+HszNz+M+5btguT0PD7J1/mTsC
a+QhOCdziF/PdccOeToa5Xn4xdyRWCsPxbmZTfwGrgd2yjPQOM/Iv8J1wDp5
WJ6d+1W+BqXy7TO/uC/0PfG3PBMjuR3yAFTKHMx74V7Vd8Rn8hi5EIPl4Xl3
+t/012KBvmbumf4ZtTRG5uxkJuq/1PfCXH01/JO5l/uZu42h1harjTJ7Mqes
P6DuzGzLPVcXqXUzCzMT5Gm5a/n3CQ/LS9SmuTNokm+nvsYvU49Sn1Ur59tY
G6sWxd38S2oDjMg3V7dw12GhvlaeRT9RLYMHcr4zy/Ub9b2xKzNZLolh8iz5
Qf3fuduojKY5G9wS/dFYn7ucM5MZI1+PMjljmfvcJn0f7JZno1nOCr+UOwYb
8s3QLXOf/4q7CP/Kc9A8Z4V/nTsWX+R9onvmPv81dzHyH9W5Sgucxy+Tj8OX
eQb0QEucb+0N/nhslB9CT7TCBdbe5E/AJnkUeqE1LrT2Ft8JX8mj0RsD+G+4
S1AE8/Jn5lzob0MVTJcr4hH9UrVZ4f//t27j9/4HUT9f2w==
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$290831#1"]& ]},
    VertexColors->CompressedData["
1:eJyle3lYje3bdYMoork0GEpIkqmQoVVEJE1CkqlEhmhCGRJSSWVKhUaKpIkM
SZqUktSe2s3Dntq7vTMkSULftX/H9/7zvsdzPN/wz/Mcx5Lrus/rWuc617q7
6bofc/KUkpCQaCb/kSb/X30qUkfvaD2+DzzQU3vXiGP6lD2bD7BBeb73zc7a
eqgmZGy8T29E1MiQXpkdG8UXLhrfQwNkz0za3sVtxPLp8RvOz2fjcxn93cni
BmyIz9ZcNtSI87Y2NuaT2LCLytjer0uBxNc3ctMmMOGSmrt/jpCF312r7q/d
QwHtdnG2mnYTdr3bOX3dy25IL08NbrpFwdSZhwevpjTDyOn40FSlTrRplAbv
olHQ+fZ5efDWVoxpiptIWdOKXTeW9bxbQ0VQ6isPTnkb8hzXN65d3ITNSqOd
STQqDJFX3tXVDqX5QrXWNgYezuxxmHmYhg2B5R6ryborrpnNqNpBQ5Jb3Z8U
eQb+3JH1P3WwCyYOjmsXjKdiPUs6/JkbExrHDh/8692Ns7lSVv1nKTj11/mN
5NNmaGhNZrAMWMh6nLle1N2AL6LcTZuetCKe2jASVsNCfvCdSa4/6mEjtcTo
YGcHdhjPk7+Wy8ayNZrcnIwGTGqyH9+6thuq+VRlHx8O4uRKprzSoaB1knXl
RkcWFKonz3w7jot18hU6+7ZS0P57mit1ORt17qJY7hUutq9/H1sSQUHJ5q2+
PBYbMm945d5CLl66SLlVZVPg9/jdtQn7OKg9lfVSyYQHH5mEpMYaClb/qj0h
eMFBaeHIlu/uPNDe+T8uaKXA/VODVQCHg9SfXh8NzvDgbZmaaselgOFV8Xf/
MAc3EmYO34zgYeW1rrnjeykwXn7T/ulfDrIaAxtvXOFBPyD7oLGQgvLVnvaK
oxzQtXcoVBF8a/DEYRuCj9+jdcd6DBdWlou+ucTwIPxLqTnRR8G0oeq1d9W5
2DK4MvRAPA/L1g/maHynYMyTo/ZJq7mYK39LcXYOD2apCjMOjqVi24OKAVYM
F+u/fRU10Xj4eNJyqcEsKgItk2bM+MXFjd3UgeZxPTjnzF/40YkKA8lj9RF3
eTjwuD/77rYenOzJuDpyi4oTDc39Znt6oHrVNrWhsAdjGV3CVj4VLoHN3Vp2
fFgO+i7eZcyH0+NozS4bGii79ZWkLwowXmtM8dhqPrwGjaUDPtAw4F5Xd47a
iwevRk9vPiJA9I9pb3K30nGgM/TNn3NCNNstv7hmtQBF1OUWy6vo6B4TsNVN
SYRB/o2N5gN82I26P3Y0ZuBUavjP+CwRkieepn9L4WP/nsM7JycxwOujSZcx
RKjvN/79PLIHSS2BeW9eMxDYq3vZy1CEnZnXhR92ceE60BY6zpIBv8WHg8uO
CqFzcIfynl8s2FakLW5+RYdUzT0j3OuFzmMGnf+oE8pWgV3X39JwhcVV2lwn
wDOJmz5T5FqgdUwp8eYmKhJuuI279omPV8kHRe+N6Pg5vGr16msNoNyNdJ68
g4+5w807U9Pr0etOt9G99vFfcaP/jQv/D3/+v+P5+f2hdnfq8SX9g87NukbI
3TGwidnBRr6RS0adVANc7NdEfG5rxKR9C+tfgA1zs+8V6840ILz+y1DNp0Yk
9tpQXKaxUW9aMPjobwPO51c/+CbBhP/5Xtm7v1nwUV3YX2NFQem0C7yyzUws
MFlCXRfLwv6Sm4dfnaLA2a3Wtbe1CR5rOz8YV3VB4seVTa0FFPSsdDZbFNSC
JYcD3ocbtyMycIPnsiHSl6VZ2xMN2qClFTktMqAZeSFRV2yvUFGR9u2bmmM7
dtoYGeuNY2IdV9Zj1zQaPnd5fYoM6gBbdlj09jYd15cYTTKi0SAhPHutIL0T
GoZC22xnKvjueQs1zRrB3cLrK1PuxoWD6V+k31LQZz3+HCO6CYLDG/JPfOyG
zdi3XVmmFJxf6lQ7+LwFdT25vKWniF41WX2o9GxA2Adpx29b2jF90pQ/4eS8
omeplE90bEBrxL4JHmuIDh7Q4kSrcGBcE6j08FsDlrZ523Ko3Rjj7bUwu5SD
5QufzRItp4DDPaxm/5GFxSHDDp83cVGo5/1I15eCJQUaIxti2ej+/MkrtISL
D7Eph+QSKZA5Vl62dA4HbvZJyTXKPDSvr948q5iCc7vUm6JucLDufGzfXjse
Xm6Y8Kyd6P65G4IF6RQOLm9Ir7noy4NV4cfZFt0UpPVIzl7az4HGsKbOt4s8
pDZUWazjE/1MmWtq9YcDv3kleW8jeXhOzQnsInr10nLGSA/Rq+mHC+7lE11i
N6pWmRFdYs3YoXNYgovb93p8faJ4sI5jb24juN+adX+sJ3DhdgSv6q8TndHe
2b7nCwWyhlJvegy42FW/WtYvlTyP5AeD5yMU5K24/XjWPi6Y85e3vnrDQ5Pl
2KpdqlR0HSzxrC/louKuo5uMiIdiA4/Tl5ZToTr/PSvbiodJHaOfc4168JCp
JqL7UmGSX5pj8JOHsBMBlL2XeuB+YcG1y8VULFtg9j6C2oPLK0NP1X/twV8k
fhmjQUOaouEPCTYfkmufLDl+kujGz1z1YxE0DHID39L0e5HiYdD2R12AUaVt
F+sn0VGxPOig11Ih/OerSxYeFMD0yU+H8mt0TN5bsXROtRBLboW+vKktwCSL
SQk5P+m4O31mxXs3EQKlDo41r+Vj9letH837GFAtv71ri2QfDp1Sc63z4WNE
8ejKj2TOnpT7U6ITIoKAGbY5+ASZO1W83spgokuntpmV1wlhnOHCnz2Pg4i5
x5Wu/aFjuPin+y1lIXY+udMRS3g7xXU43e8kHTyBhMa5Jb0QHPXpW8how6Oo
7xELx9EI3zcrBe8QYNOOsOfzlJgQ+WWIHMgcZHxb6Dt6mY+f6Rxv0xgKQvaV
X51uUv8/9OS/64/Rv+jPv+nV+pNzz72+WI9T0teqLd83YrbDQY0be9l4sDt9
79ieeqySZvYVNDXC5Undpb3WpB82BS8N2dmAWT2Xldf0NmKMUdHYqNlsRGj8
TDLqaEAk2yN97O9G/Gqv3B0uw8arRJ1ndqSP3fP85lMUmeC95WQ2dbFwzVv+
spc3BR3b/la6nGrCbk3WvYebupGb2+/yLp2CMItzV1sntGCMHj//z/QOLPA7
MnCGRfQg7Ns1vcpWfH12z/aJQwvaP0kcuHKACobCOdkQuXZIvyj7bpTERLrV
x00aw1RUju0v4Rt1QK7p8Q7P5QzM11SZrBpDw4Gkn9MWb+tErPO4WfPeU/Fx
YvfxnvsMRNwbG6Zf04XFqgnTd/RQYKdzNazhBxNDBw1nLknuxo4FJSE+2ymo
fJAfeN20BdJvcz5OcGKhOZXLjL/XgCx2J1MlvA0ME+EtSVL/123nw/z0G7A+
f7OJf2wnUu1DDRTZbBwSTDv/ua4B41bXKPhHd6NW63f/twQONuK98xwjogN7
Iw7rXWchrCxyMnsuFz+7i6UN9lEQW1BCVzzIBmc+LUbhAenLz6qnX96gIFoU
N91oHAf6bzPmXhrlYmNGo1TDMwocd3w8nnaGg7q53wW/LHnIHO9YoldPwUaT
+yEFlRz0DPVYVhziwcKgbGJOBwUbqu+snyriYNb1uP7gEB5yq9zzB3kUUBNZ
j16McBAaQC1lX+YhPlKv7DLRpZq6NV+6iC7pDsk9yCa6xIqearGM6M/0VBmv
C8RH9aZ88v1DcCd7xZOnCE5r1QnfRHzhtiHng01XiV+KavhU+ImC0TMrTHum
ckHfnZ0RQvyOl9VJlytkDl0+ffiDjRMXy3a/PN3zjOiS1cw3X+SpeFC+nm9C
6p90uPDprk4eqo0e3O2YT3jQMf5ezxQe9nw6EHxJswcRWp/18/dSYfEkKeFo
DQ8uWkXvPnj34NjmVurjTCrk5Ma8CYrvgYu1ofMURg+SF99f0fqXCtmoy94H
4vgQbUkVTnYifcbOXDHkRcOT31tTLtME+Lv/acHmz3z4paaYxPTRsCyGaXZX
VYgY3Xj2vTMCxKfNS0sgOiBZdfO08X0hij6+uag3XwDVLY2CrE46Vmts8KpY
IsJT11d/ezv5uGWWPmbHBgbU039fy20UwTQ2qiYsgg96QVG2eTEDXNpCqzji
rxaJpDbrSPbg+Nu9sruIv5L4o5D1cESIdrWcJUvfceA16rZ5+zSSB8a+e59i
IYRLe5cy04OFVfqPPJIS6FiiObt88ZFenPz9vVCwqgNDrTadap40TA+PVIm9
KUD9kPaFvsgmvNQoitpF7stl3dv97q/5mKV0b15jK+mTymSNhu7/qUv/tz7q
335+VC/pUoAiBUacQL0RGSZ+mrCVTw+wMDx+y4SDTkRP9BcNXH3BhJHgwMNX
s1hIXfG4x4ToqKOuFzN3ZTNMuo/v2NvXiYGgnymTiL/g3HC7E8BvwYLZkw/J
LW/D3phDo8enkDk2VBhldLwNt/VVgxQZTfBtarotkUeF7rYXj64ntCPxTLWT
nW8jfMYUyx5YS8M7qwitJ1Ud4J4ODjb4RYNen5/KZh86QtJWbn88rgvpY67o
LSE85FpWzlElPm/os2X/G4tu3DprtmJxKgW/A2jmM9aTPkof2mqtT/pOdtYU
agUFarxyr88ZHChV31uzfTsP3w+OjRrfRPr0hPbrllYOXpzKum5zkviNsr4C
fzYFA/OD5USDBF9RveFuGA/G1yKbNggo+Hw0g2NK+vGKlM4xW9J37+Zdv6VC
7rFJJum9iOBRmXVSBQR3XLWiagXBF+Zu3Ppdkgv9JZ1Vi6J5WF9WL3lOREHg
py9O2xS5OBcv1WEXy4NOucP4M/0U7HG+4FJhwoX29q8L7R7wIB83WpguQUWO
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
n/nwvwAMmHKr
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0., 29.98893571891069}, {0., 4.9999976388499325`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886963375206011*^9, 3.886963392280621*^9}, 
   3.887270157764577*^9},
 CellLabel->
  "Out[999]=",ExpressionUUID->"ac375d63-b768-4e3a-b6f0-4335cf1cd357"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6.6. Build unexplicitly defined functions", "Subsection",
 CellChangeTimes->{{3.886963466865542*^9, 3.886963476489389*^9}, {
  3.887018237349969*^9, 
  3.88701824238803*^9}},ExpressionUUID->"2030b2f4-7c18-4274-b1e6-\
9ccf9f89ad9c"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Build curve ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"2", 
         StyleBox["x", "TI"], 
         StyleBox["y", "TI"], "+", "2", 
         StyleBox["x", "TI"], "+", "2", 
         StyleBox["y", "TI"], "-", "3", "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "2xy+2x+2y-3=0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05317ae8-99a0-4986-a227-0e08507e39f1"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.88696348061489*^9, 3.886963488618598*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"f5e761c8-e865-4122-98de-4648180e16b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y", ",", "F"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"2", "x", " ", "y"}], "+", 
    RowBox[{"2", "x"}], "+", 
    RowBox[{"2", "y"}], "-", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "==", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ContourStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.88696352577282*^9, 3.8869636013001347`*^9}},
 CellLabel->
  "In[1000]:=",ExpressionUUID->"46d52602-3962-4968-8abe-ea658849dd04"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64},
         VertexColors->Automatic], 
        LineBox[{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
         80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
         97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
         111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
          125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
         138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
          152, 153, 154, 155, 156, 157, 158, 159, 160},
         VertexColors->Automatic]},
       RowBox[{
         RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}], "+", 
           RowBox[{"2", " ", 
             TagBox["y", HoldForm]}], "+", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm], " ", 
             TagBox["y", HoldForm]}]}], "\[Equal]", "0"}]],
      Annotation[#, -3 + 2 HoldForm[$CellContext`x] + 
        2 HoldForm[$CellContext`y] + 
        2 HoldForm[$CellContext`x] HoldForm[$CellContext`y] == 0, 
       "Tooltip"]& ]},
    VertexColors->CompressedData["
1:eJxTTMoPSmViYGBYAMTMQOxU1SWjlHfO/uvnZUqix67aF6hcSAhOf2Q/Kj4q
Pio+Kj4qPio+Kj4qPio+Kj4qPio+Kj4qPpzEARG/CNg=
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886963574565426*^9, 3.886963601976123*^9}, 
   3.887270160450581*^9},
 CellLabel->"Out[1002]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Lfp/UBEwNA==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"87dee456-621e-4b5a-b56e-ebf46253a6ba"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["7. Geometric objects", "Section",
 CellChangeTimes->{{3.887079582259982*^9, 3.887079584415255*^9}, {
  3.8870796263306828`*^9, 
  3.8870796399814863`*^9}},ExpressionUUID->"b3f1b79d-30ea-4180-880f-\
a2bb1c60c03e"],

Cell[CellGroupData[{

Cell["7.1. Building a plane based on three points", "Subsection",
 CellChangeTimes->{{3.88707964616717*^9, 3.887079646742528*^9}, {
  3.887259745678894*^9, 
  3.887259750608429*^9}},ExpressionUUID->"681d2c77-389b-4499-b709-\
0db3fe041fa5"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Write down an equation of plane intersecting points ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{"-3", ",", "-5", ",", "6"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{"2", ",", "1", ",", "-4"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "3"], 
         RowBox[{"(", 
           RowBox[{"0", ",", "-3", ",", "-1"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A_1(-3,-5,6),A_2(2,1,-4),A_3(0,-3,-1)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b8c87d1a-b8ef-4f41-ae62-bee418101bbc"],
 ". Display this plane and three points. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.887259755930173*^9, 3.8872597845203667`*^9}, {
  3.887259853638391*^9, 3.887259864263998*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"bcfc14b2-364a-4f75-81ef-804242df2100"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A1", ",", "A2", ",", "A3", ",", "x", ",", "y", ",", "z"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "5"}], ",", "6"}], "}"}]}], ";", 
  RowBox[{"A2", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", 
     RowBox[{"-", "4"}]}], "}"}]}], ";", 
  RowBox[{"A3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A1", ",", "A2", ",", "A3"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(3\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red"}], "]"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", "=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq", "=", 
   RowBox[{"Det", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "-", "A1"}], ",", 
      RowBox[{"A2", "-", "A1"}], ",", 
      RowBox[{"A3", "-", "A1"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Plane equation is \>\"", ",", 
   RowBox[{"Eq", " ", "==", " ", "0"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887259901324202*^9, 3.887260005077083*^9}, {
  3.887261525095016*^9, 3.887261528071398*^9}, {3.887270164478713*^9, 
  3.88727022144907*^9}},
 CellLabel->
  "In[1014]:=",ExpressionUUID->"22afbbda-359f-45a8-ad71-6d14ed11f9ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Plane equation is \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"7", "-", 
     RowBox[{"22", " ", "x"}], "+", 
     RowBox[{"5", " ", "y"}], "-", 
     RowBox[{"8", " ", "z"}]}], "\[Equal]", "0"}]}],
  SequenceForm[
  "Plane equation is ", 
   7 - 22 $CellContext`x + 5 $CellContext`y - 8 $CellContext`z == 0],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.887260007199094*^9, 3.887261528618099*^9, {3.8872702014136066`*^9, 
   3.887270222001643*^9}},
 CellLabel->
  "During evaluation of \
In[1014]:=",ExpressionUUID->"36277ff6-1067-47a6-b71c-efcb86777b5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ContourPlot3D", "[", 
    RowBox[{
     RowBox[{"Eq", "==", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "7"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "7"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "5"}], ",", "7"}], "}"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", "Blue"}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p2", ",", "p1", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AspectRatio", "->", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887260027159955*^9, 3.887260052647902*^9}, {
  3.887260083945655*^9, 3.887260175729062*^9}, {3.887260238275083*^9, 
  3.887260276554723*^9}},
 CellLabel->
  "In[1020]:=",ExpressionUUID->"c5088cb5-fb40-4624-b1a0-589e7ea38dac"],

Cell[BoxData[
 Graphics3DBox[{{GraphicsComplex3DBox[CompressedData["
1:eJxtvXVY1c3zPn7obiRVQFFRBEGxUDnHAJFS0ccOVAwMQDCwMbBQRAywBQwE
RcRCjHNERAQbEWkEREK6+/f+fh7uWT3P7/xzruu+5pqdnZ2d3dfuzozBcg/n
laIcDsdMisMR+9+/z9H+j47vr+b6pu1beezUR/7a1X12BolxBKUaxlXDCksI
X+++ad998Qa+7X2z8jFBddxPwZezRhoUcEHfUrdGXn3/b8JB7zN0rNLNvUWE
K/depH1AvICvbz7X2KQwn3DBgbMukW+TCOcYbb14fOs2vjA95Ik7t3idz8Ni
fsHYcaEi3e+5U+qcVt9Ua+Amx+blXRWt4Sr/o60wbWIW18nhZs18OQ4POPiA
/mq04Rab0C+Eg/7TdDvFe7NKucnHDSUWhv7gBoq4KHSUV5MeQA9c562d3uSc
Wv48kT7v4yaVEw79KL94vL3hRw21Cz6Hpbea+PcrIxz91br97ciq2HqSB/Qh
xQ/sPV5VEQ76GaHTWyOXNxIftFvw88uGXmItRA/cdoigdmNbPdFvWjxv1aol
HXzgoLdY9mxnfk4D4S1j55SvevCb+Gtl2+fOv99KfC4Hc0aniksKIvQ+zkyc
1UF8gMfYrHS4tjeHxhHyBwaUKeVwP5PeqF+fEh0ur2gnO/n8pqhWTFJeoFw5
9MOvwibCwb9A3faltHgXyQN628ORIfM6ukkeo0YnQWqtLOEHYmVtvlzqYPQ9
/QX/rKFtN5uqRQT6/FKfz7uSSH7facuuPed84nIe3W5OVHrKBw57+7Rxb0CQ
IJ34gF4wZFLbwuZ7hAvbZ0Prl9mucvVEz/FNtOR0DORDP8SH26J0wfoz4eBT
Y+PsuWHAJ8I5viZvy2ZXMVwjWd9ap5LoI2rmd31ybuJu17tpUiAvSfYWk+ej
MLl/K/dG3Y21qxTlCS+9tnPw6S8NhGO8oDfwKX3LG3jvUTnh57vFLzXOlCV6
rb5+TqIJP2lc0C+jtoT1JcsriA/wkIMp1w6/LCRcWG/fLM5YDDQTI7zg0WKd
fqJ1RI92S9Nqdx5KayNceF4oTn0fdYjP5p2P1ubaWu9O6i/oef079t551c4t
W542q0lKhdGXdV/q8momnPSjontS73QXN3Pl9qTubjWi983oe8dzchvhRN9j
n+AT0Pj2lejSbsJB79RqkrUjt5kf8bI4MndmDckJvcUpfT6+WLSUcOgH/QX+
KUzlhs3qDOKf7mpx4udrZepvy+ndK032FtD8Av8YhSqXUYbdpE/MR/ABLt3s
ay9tLkU42v3VEvttiqcY4X1VzE0Wt0oRH07/wICZSen8Zzfm7krtFBOgXdgz
cI5gxd3D9/cTbvHCbWz3dw7RFzR7O6w4lMPXv3nX92hL+3/mC3COUkXF4/A8
rrIf78TBA0XEH/QuYb7Nh7pSuMBpHKt3ts1VjCV6jKPnivfvKznfueAPel7t
xubklnjChde7nJL60KXu9f9Zd0C/4HWJdMriVr4g3eiaqsxrkh/9tR2QH/01
tJjoMY7g0xVlnnBpmpiA7NnKvS1EOoF/9EZU+zqOMutXsmFbbkUot2zb3PiZ
3TKE8y7OC90j+4EPHPJDn+DDWR673/FxJeFKW85M9t4vS/RmviOnj/ZNI/6Q
Z8aYe/7dL/NIzyRnw0HT+IRGWi+E/TZw3cFnT+7aKEP491cX9gbqtRB9QfaM
Np3Ol1zISfwljRSkp2aR/ML9gpyctAaXPWty+TFbjn34kfiT6KF/XvmBs9xV
VYTDfgIr/X7KHyggPqDXX7b7ztoBZYSD3if+qJ2cVy31i+ZXT7+w7rQPSe4d
HyNBeI3dvZ1fytMYfeH1CUNPtRA99OAbcWv+rkkNhINeuXeYQXZRB+GiO1fM
uSymItCSfWnm+KCb1i/gmL+gT9y6SElOR41w0D/waZx9ayyjhz+xre898kSs
IqPfN+rN79pC4h9o73ms3u83zS8zteuzVSU6uM+qu0QnydWQ3hbNvmYccruV
cOvD7+O/qkoTva/HcHelnyU0X4T5gL+T0dWjSsEcHnCMY+950pNUjOuIfu1V
0TmhX9j4KhcNGbXhYDXxf/dk5M+XYuK8mvmGjiHW5bQuAwcf0LsPdO/+Mpfh
oA80HL/prJY0D+sFcNJ/z/oCvGd9IH1eXeSzrOhxEeGepxqmG0/5QfyF9bD+
ivGp95xOkhN2C3+upbD7jraYMg/+Gf4cOOYL6K/OmRkvN1+WcNALZusN+6it
yIM/AT2nXOtqmzijd+7vdu3FYQnC4a+wf4Cc8FfgQ/rv4QP6ffP2W9uGSPLg
f0APPcD/QE7g8P/AwR9+A/whJ/wDcOgH6wLWd/CBfwY+O6AjdNRcEcJXVb4b
cDqByYN+mWafjh4+Qon4g77VeZ/c3iFqTD896xTkh5ygB75Gf/GCkqHt3Blr
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
A5Nd9ZyP/X0+rCt0j6BL8xrv7qAH4Din+vt8Upf39z5cjXAvMUWRhrwauscv
iHcfw7dv5wP3PWPtvf77LXof+EmjoDHiOHv/eTuDd+moYQEfOOzKx8xv29NX
VYRL3tuhdFHvF717AY7v9JOzT25MvNdE7WK+XBsc+P2YUynhmKdNCWMS53XU
83e2Gx9Sa24m+lWZW6+W/uwm3HXo/f0p+d0kP/joaZYqVUqwd5uQp2FmltKW
2exdK/ig3WPyL8cGnhcTAL+iuGAdf04ZvVcEDv28l3jTX2OzlOBg/TSFEUrs
vWKiTEGdb6wM4a+vT1zw/lwLvVf8fT7wxs3Nr4nPlOnP1Vrm/OICh55lF4yc
LrHsM+FjTHZHfXWtoveHwG+sdd55uPMzvSMCDv0fq+eqlrxJpf7CDvvuGDBi
4ssawi8uGP/51XEZnrDeYP91eUUjB72v5AJHf6cO6RdS7ZLDhf5BH+ZtW7Bn
aRqNb+DVyMuq3mI8Yf2DPkMj/mjwyhbCYedbJPN3PSwqJHxD/9OujqfYOz3o
me77GhuNjP9pJBx8Rjn2FYz/0UH9qorc0c5tYu8SISf04565I8KwXyIXfBwm
H4hIPqLEE54vP42Pvp0q307v60CPfj3mD7t0/JcE2cO2HNVuqQIJOocHH3qn
57jwfEhdAMkPefQE1gpXh4kKHgQNs468/pmvkTVL6+JdEfouAI59Tot8/VTT
gljCbTYP2ti1sIbe0QHHPufryPwMjXk/yH6AR/9uX58U+JMPHPytLku6zRpa
R3hK5eEdUW7N9C4O/QIfkxNnbpbt7iI89v7oIxVruuidG/jYGtZIvN4qQfte
4NgXrbl4TTTndyvhmtvW3CgQVaL9MPoVqfNdN2KWHH1nAce+y7m6zeXN3Qq+
x5M0U3WxX+z89tjMPS/Uy7nA6T3YmFSToopvpDfQn3VUumK4NJP4bFb7tGhu
nJRA2K4wr0tOqQyR2y9C/grz1CfGTrT3GAnyM6A/s/TrlXdD5Qg/bVUk+nl4
Fu3nYSe9h66xvspNp/s+4ODTsuB6Ud/tqoTD/8yXunv5RaAy4bDDkcGTB97y
VBCgXxh3f5FfJ05FNZB+Gqdbvjo/poPu1yAn+qUgukLhUpMi8R+4RXZsJb+C
vgugT9BXKTz7tMW6hvjDfoau/yj33bSDcNBL7jpxb0aGCA986D3MkbtafS4p
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
kTN+z/jPEmOVaV+H/fydz4u6Ftn0In+IfenF/ZmzDder0bw+NLvvqD39y7jC
/gH721TnuEFfZuoSn9QhY/6ZtLKW7neAgz5M4t1juxAV8id7uFmKl9a10P0O
cMjz6OD5sS8XahGfYK0By4+tFKXvStCjX8ttzDXaTHQIR7uzp3Q3z1rN6L9E
GzXOEavg/0fOVM3DdTPi6V0Z6LF/MM8NlAwPYvsfwtOOTzB2YfIrznngd8rk
G1d4HX/WtXVa4dhMug/C+GIeCayPdLRlytG4y9w5IkgewO53gNN7sEu+oYvN
pGmegs/Cp4rq8SbsvBHzqzZb935isQTZ8+hfRtqZv3TIfuj8sMefcENXro48
LE647KETS3aPVad5gf7iu3Jg0zZlsS5mD/juu/12qLu6DNNP/FknC1s1di8D
+hBNntptDrt/AQ7+BiZFhyaN1BT6ftcVjK05JXU+QYnsHN9HO7MStwQXsX1g
+JRDZ268VaV2e2+5pOyw4zd3dnCZdnd3Plc4/hd48fEzY8L6vOG/NtteuWp7
EeHCccTRqQ3Huru7ucUlumozR5dyZ/S7Kyk6NItw4Tj6JRZy3hzOJ76kwatE
t6Rivu5es9Iru6oJh78dk7onOTWuivig3TV645PV79QTTvlDeu6dgUeembVd
qYLhCSGPb3V313PHPS9407S2g381b67et8WNhKPdtc+bNvyjXUY42h29/fu8
904dxB/2sL1sdE71phySH/RHHvp3vohuJT6glxjQ7vOsu5Nw4TwS4L8s2qgq
s0VWUDi5RLf3k3ukf+jzxeGGYfKx6YRTnG+PnsFf50pUOc/jC1f6adqSKznv
CQefh+IBIWtck0h+8Pni6HLiOfcpHzi9G1QJsjmV2sB99X985Oheo/nCUo/8
B4Vcx26tuO5uCTqfOaSaOSB9TgXh4H/m3e7Kvo5NhGMctQp2Zu5+30Y4xiVb
yjj4+oZOalc4rwLo9SsurZfPKOfb9Jc/JbW+mdtHO+p9d7cyyam4WHrro2ft
hKPd3VXjMxMbfxF/yC937/yMk/Y1hAvHswBf/mDgkB/RLL8B+G8Lu/DIxpvl
VYCc8U59TNTHSglOP0pO37ylgMaF+PfQg/+WNEmNpdvE6N5ZnPP/fjX8k1Wy
7W+mVnG9Oc9avKd/Jlw4/0DN8AlF3d3t/DELr+deD8zjViyWX1F2PIdw0O92
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
o++27HvUL6z7kXvWnRAfwfKYgf//B5kB4V0=
     "], {{
       {RGBColor[0, 0, 1], Opacity[0.5], EdgeForm[None], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
757YHDv+F2z3kSQ=
             "]], Polygon3DBox[CompressedData["
1:eJxF3AXYLlX1BfD5vvd959KgdHeJSCkoJS0hCAgoSJdII2XQIKJSIoh0Sxl0
h0hIqCAKqHQIIqWUpP7X7+7j83+eO3fOnn1m3okTe6+1zjf3tntsuPt413VP
Drsu/7rf5L/psv/tWNe9NOq6B1L+R7aXst2fbdXxsh1fLeVHs82Y8kez/TXl
UbvO7Tn/Eyks3XfdTLEfj+/LKR+Ya+4a368HXXdr7MdiHxbfCak7+4Sueyj7
j7tW6vwrvr/E95HY98b+eHx/zjZt7Cdivx7/I/FPEnvWbE+lfEf8U3qO+P8R
/32jus89cnyU69+T/Zzx/zH+V9xL7uP3sZdOnd3juy/bHJ4v/lfjXyvbtClf
n3o35H4/HfvF+NdI/eljz5X628d/fOyfpPxBtl3jnzP1D4n/Pzn+hdj/Sp3P
xvfbbA+lvET2T8S/Z653VOqc6Hdzf7/LfsHUnz/b74e1Kf8tdbZO/SdS/8SU
T3M89X+d/WTxP5xjX4z/U9lyuPtT7A1S/tao7s99zhfH3rG/EHuDbPukfF3u
c8uUV8w2Z+o8mG2RnL+wd+R9p863cq2TvLcJdY5zt862b8qbZ1s55Rtynbni
vzP73WOflnPOyjl3xd4j9qmxz4h9qOuNVZ2DU14u21v5rbezLZ/yV7KtFN+F
Oe/K3P8K2b4Z3/mxr0p5VtfTPrJtk/JXsz2T8mPZdkr5npy/fH5r1/zWYEL9
ht9yXwu05z86/pPjnyf2XrHXjf8X8d+Y6z+d45/wvVLnx7FvyfEd4j8h9inx
fSz1l43/6RybJv5d4n9O28v2Ne8y259TXjb1v6otj8p2/JTU/0vsb7t2fHPn
93dqv79etq+l/H6Ofz31t0j9n6T+wjn2kG+RbZGUf5nj64/VN7ws5Xu9r1xv
N/0u17s8xzaN74gc+2GOvZDz/p7teW0o2z7xv5v9uvHvHf9fc/5BKR+f8mw5
/7/ZH+b5PUN8c+lDKX8p552U+1nGFvuVnLNDyivF/5/Y347/nNiv5fjSfjP3
sEKu9XC2T3bVRrXVLVJ/qva+r079X+mX2nqOvZ3C4d5Pyr+Nf8Hcz93ZfzP2
6bnumfpP/GumvF/Kk8Z/VfxfjH/DbFenPE+O75nyj1Pn9GF9R9/zLzm2TOxv
5PyvpvylHHst9oTYP0z5Uzn3yNzPAbF3i//22L+K/UzKy8X/mWzPpvxUzlkl
5T3iPzP+n6f+4zn+6Rx/pq9xdHFjZn53p9h3x54l9oup81bq7pxto5SvyPnX
xL9ctvGxen/npfxo6n/a98qxN1N3LPYtKd+X6908rHt275Om/t6p/17s3WKP
G8RjP5RzljS+eMaUb/ee4noh/i3a/Uwfe5j9ZrEfTp394vt+7BnyPi+KfX/O
XTz25vHfmr1LD7LfOPad2d/TxuJNYt9lzIy9qPsynmf/VHvXO8Z+O/d5mfE+
F7kmxx7INq/2EXur+E+Jfyz+XWN/Z1jjnPHuT22MfDb2XLEfjL3YsMbvmfW/
HP9Kzr+tzTfmnU1jH5b7P3Cs5hhzzdS5/jbx/yL1L0ydx2MfHN/ZsS+OvZX6
KR/nO+X5v28+iv+8HFso19ss9mdjX5TzLve9s/987F2yzT2sNrFCrr9iV21l
69RfJfvZ45s111s+56wR+2c57wrl+DfJtb9h3I7/jNi/0N5ybMn4L069T8b+
euxjU+eH8Z9qLszxR+KfP8f2jn1K/D9N+ej4v+f6sReO/5jY3439QOrfHXvj
2AvG/knsXxg/je/tfR+Z8jnxXxX7/fgXm1DtXvu/O/7r4j97VN/Pd/yr8XBY
c/vC2a8fe+b4L8+zX5BjJ6f8u/Z+T8z2bsp3jld/PjTbXeaE1LlirK7p2rNm
uzrn3xz73JSvH6v+/qtst7b7cn935NzrhzUuuJ7rXhv7/FHV1Qgez/0cGfvr
YzUGfGdUm7JxYaEJ1V7ujP2x7DfUfnK9r8U+K9c7e1j9b1FdybxuPIh/EP+W
8X93WO3bWGBMeHxY/WfR+JfN9mVzWeqtbKxtY4Lv6HsulW3vlJ/IsZXif8P8
0Fc/0B/EBEvGd6bvMFbXPCvlC3LNu1JeJL6NUv+RYY03n8p+29gvazc5/9Ec
+2SO/WlYY91S2W8T/+o5f9LYM4ub8vx/zf7J2Etnv138//Ae9O/81mFt/Ngn
1zxGP0v9R2J/I/YPYs8Ue8PY28U+OPY0sV8fVv/Sz17I+Z/JtnXsqWLvn/L2
ns/7z7ZDyu9l+3z8GxmzUmdKz5Hyu/GvnvKyOecrsScY91P+c+pPHfu/8a8d
/1utvvP+Ef9GuZ/549sp9WaJvVjsp+P/INsq2na2D+JfK/Vfif9f2W8Z31jq
/1fbzfZG/Csbe+K/P/Z68R0S+yN5vleGFb+J4/aM/9XYX479lrbpt3OfB8T+
VrYFUp432zdS3kFMPKg4UDxoEF0v535zVO1Nu7s51/t3ju0c98z6Teybst8u
/h+l/qnmRvNb/Ot7Bzm2rZh0rK7hWvuPKj4Rp8yb+30p52yQuq/n2HujGt+M
R2tn2y7lZ3KN2XWX7NdN3etzbHKxo7myrzasLa+TbXsTs/k6/o3ifz3+TcVs
+mp+b8b83hvG3VSbPPa34j84+wnxfzHn7B/fijl2dOw/5vjtKf9oUG1hIWNE
yuvkeluk7rdSd4pc78Ps9/Xu3HN8h4xqvDPuLRz/STlnan0t5xyeY2+mvEnq
H5v9hdpp6h+f8iUpL5jfuyD1FzcexD469b/rmrHPMc/0NU4aL38a+5z4P5tj
P479hLwg5aNS//vG//gXiP352NPFniV1p8z9nBL7ktgzZls35SmynZ77OTv2
qWL7XGfylDcyDmpLOTZz7OmzrZ/yCdpI6xuH6aM5dmHOPznHTkj57fGaX8wz
nxlWe19grMZ0Y7truNYxuc7Pcn9vps77sdfI/u+xj4//zLGaQ8wlxxl/c82f
i2Vz/yvE/neuf2TOvzj1/+k6xt7UuVIfi/1T7zbbSymvKUaP75vxTZ7zj8ix
aeKbMttMOfZQ7OOM76nzM+PRoL7NFvmNKQYVTxiu78h/L+Za84wq/5KHnSE+
jn+J2JNkv2vsZ91D6i6vn8R+N9ddI/6Xxiq+nEV7Mn7pYsM6zr9Ki6H+mfqL
ie+MKcOqOFV2sxkDBpXjyHXeF0Pn+j/N/dyd81bK8T3ke321L+1spZQvFc+n
vIqxPfY0+mtXY8yaYqvYO8Z+L/bnYv8z23r6R/b7pf6Ljo1VLri78T/7deOf
wbwmVzYfGW/aePfOsMaOdbI/IP7LRpVLrqqfxP5I6q8lHm9j3BXaTMqrpfyN
+D9o4+1rObbisPKnPWPv7h0Yf1P/FON3fEel/gzikdhrxHe02FQbjv2RXGcQ
exD72NhLxP+dvu7b/ffyXP3HebGnib2Z8Sv7vWLP3VXOfXHO/8NYjYUHeb+p
f3x8s4vncmy12JfEniP25rE/Oqrrue73U380qvrO+27sOQZ1/VEbz94d1tj2
+ewPjP9v2a8d/8v5zXdG9Zyed/rU+ZL5Juf/wHgDnxjWc3m+6WJvMqy8Wu4y
c/abxp4k1zgx9rSxh/J739Xz5bxDY08yqPnrnTafTZf6F8X+XI4f435j3+r9
xHdc7E/m+I9iL2Jsz7GlYh8ee97Y2wwrL5GffEz+H/sTOf8J8Wbsj+b82WPf
FHuh2JNrD/p77JliT2v+bfmxHHHnYcUd4o+Fxd/uTzzQVc78tZTnH6/vf122
+dTJ+b9LeamWz04rvugqv91pWDmp3HTz1Ds5v7dImw/Xbzma4/zLxN4x9pyp
f2/sjX331P9N7CXi2y6+E/pqd37ffWyZYx8fr/d1W7ZFU54+9S9Nec6UJ0n9
GYc115uz9x3WnM92/Py+8B+5rxz4k3K7QeXBjk3vfY8K14JvLWMujf9x7c18
rz2M6v14T6dr78PKjeWgew0rR2Y7fmH882rfsVcXB/Z1/VXGC1s6ra88TD42
S/a75NiO8ubYs44XZmGeMF9Mkm3DlFfM+e/Hf5BYEF6U/euxPx/f11P/d/Gv
nfI+KZ/d17xr/pVjfynlVePv27VWbfn6f73/2Kv1hZ+cG3vl8cIQtFPtde7Y
W2hv+nlXMcDGw8o3d2Fnf3hf46bxc7LsNzDmDCqf3a3lF6fFnqPFZ/I7eYi5
a2H5gpjBwJ3yzvEfEf/+sT/MoW1iHziseOMT8e8Ve8383ncHFRtsGvuAYc25
5t7v5/ilfcXYcl85sNh7g/hnT3m21L3MWD6q/Ece9Mu+cha5y4s5/0HfJ/uf
xL4u517mfvXf2K9ox319B99j2/gPGlaM4n7c1yXwjOx3Giu8SPz2drbtU/8k
42P83xkU1gV0PWpY9+X+xNTfS3nBYcUO18S+fFjzuvl96xZzi5/M/19t8QJc
Ej5pToYhXhN7irHKMWGqW+b+Vo19QOy1+8Lrhq1trNVXvvrp2PvHnq0vfGSz
Fo/PpX3EXl6saQ6CT8T+3FjFoGLRWweFp/xwvPAxeNpW4pHYc7Z46Z1c73vG
ZPFI6s8V/9zZjhPbjir+EQf9vK/v6Ht+LfUPNecPCl/bscXk58ReYawwSfHc
Ljn/y7G/E3uOvnBD+CGMTQ6zW/wbxz5c/B3/HuJN7cV8Yf5N/fNj3xD7l6l/
0qhsx//QVwzne/guf4p9bexJUveC2PfGftD8Ef/m4htjY+wTvI9sfx0UnnBM
yvPGd2fqf29Uceq5se+I/YzxLPb5se+J/Xv9zf1mu989ZDsq5QtafPpneYLx
INsjg4p3N9b/4rsr5189qlzpvNi/6WteMj+J8TcU65in3GuL+T8e+8jYU7YY
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
7XvJEeWK/n7M3i1ehdPAa/w9Bpog2iB6p83b+GydlfVW5lN4I6wIZnRIm7/h
JPCSR1o8i189p6v4Vn+GUViDbC2y8R/WiDM4rrVv+NyuLV6mAaEFeb6rfJCG
yDxjvrFWSX5HO0QPaG2c+J12yN8Q8reExNu0Q4d2Fc/QMNEyWQO/VYs/4EDw
oIdaf5PjW8NtLbfxFjdhzQj+W7xO60KPuESbH+EPNFR7tvkGzgPvObjNrzAs
miPaI5oq2ioaJlomGihaKBopWilznrmPPs5aKZoG2gYanXXa/Am3g9/5Wxbm
V3m//P/EFk/SYj3W8APxKK3HU13lg/JDXOHTXf1tBBoKWgr4ifndfEg/gE85
vI3H2p989/wWX9AD0GzJp2k8aD1gdOIHOb/cn/5ypRZf4vqsgZ+ixae4Pmtu
8e3WDFk7RNNB2yFehQfRlImH5ePe/znt+cTvuGF/Y8TfGoFv0Lau3BU+Lx+C
X9EowpPE37i873aFZ8GPrCuxvsTaUPkOLvDCrtbaw5No/egVaevNf/CY+bqa
D+WgctEdusKi3T/dIv2itVDwGdpZ+n9rPeEhdIj0iPgW+Att71xd4Unyd9z3
BV3lW/Ra9Ov+pg9+ikaYVpgmF94Db9Gen23t7+T2/DS+1t7CW4wH77X+gA+z
zsZ6G2tTrQkVX4mHrRWFN9Hu0ufCn/4PucW6Eg==
             "]], Polygon3DBox[CompressedData["
1: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
             "]], Polygon3DBox[CompressedData["
1:eJwt1GtojmEcx/EbY+U8YkZky7ApW7NyJi+cGjklkzCrNYcyzZBEOedUTnOY
4wtjmbUZkaIkCmsSQ4wpp+IFc06IzxUvvruu//f/u/7Pvfu+nycxt2Dq4qZR
FGWiBQb706ZZFPWKiaLTGuV40TyKhvMVfCJfzP1sEkVf7Cfy+6xleiO5OSiQ
b8Wnyu0ysxhX0J0fza+U3yT/nSu0lnG3rUfkS1Bgxn7rMbk/zmRZE/QXys/F
R3U7ZwbK3Fc/QB16y7bl8/Sz5cdyo5HMd+Gmy2ejnflx2CDTTT7cgG9yX1HC
VXELnakMe6zXX4enYY7eTPsOzi+TT9I/Fa4FjXysz2nQu4Ub4br5HL6TOgFb
5Mu5WCTwLf/f+xH8Vq7IZ8yTy8UO/e1YyqXolZrXVi5HfqP+dr47v1YmSz0E
acjj/8iukFuKWP2p6kbZj3oD7N9x6Xpp4f6F58GvcfZiuHa9S1y9fAr/SCbV
2l49SO+mfWsc4g+gMzdD/qt+Nj/YjIFYwS/HQy4Nq2VXYTi3ICZcWBR94Otk
k5V98EZvtjmz/Z+F6iWox1B+vjOZenfsS505y4+Te8rVxvx7f69av5k5zPqS
GIF7Mq3V3505Za3hGrh96t0oRqWZZXq/UWROPn7zk9Tv5Q+GZ6/uisuy1Xx/
15+lt9P+jHlj9CYgX7YbqsyoQE/5OTK/ZPvhgvq43GG9Uc7d5d6F+2HfBJ/0
GvGWG6ZXHr6PPivRfq+zDWYPxRdHGjGeK5SNlUmWORbur/PjMQ6bZTviRHi/
Ea8/S/5HuDfWVK4vHslmqJ/z6VggF8+dxmfX8CC8s+ZUy1aGdz88K/mf/Gv9
c+rz4TssfxSvuB5627gc9RRMxiIz3iPd2Wd6XcIs1KifOFPBnQzvn/0e+cfW
DHOu8VXq6vDsccSMpPD7wy9RF+K6bG/3Ic75DH4Aas2+iWl6fwEoPJwu
             "]]},
           Annotation[#, "Charting`Private`Tag$293441#1"]& ]],
         Lighting->Automatic]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0j9IlVEcxvFj1tAUFo0JolwtKBC7mCQtDkqCg0ihDnlVhIgSDK3N65JB
oINZg7q4NKSFCKZlyjX8F0UUEf4hCMGSpGhxE/FzoOHh+z3P777nPe/73rzm
9to7WSGEcfl+NITLuKW4gsljIfzByiMhlPG/vBR38bdU6C9a7/Bfsi23s0P4
giftlTRf5nW6FfwoN/g6nor3Mt/kKd0GNmEaj+u7cc36obN8xgeYcM1Ls0G+
pRvATezCZezEEfP3/D5fxXtxppvGGZmXHWf+pHsRf88ncEp+8iV9D//BR3ma
9/IqrIz342l9C1617uYpXsrLpJVXY4++jSf5dSzGu7oSvGldg33WXbyZp6ST
N+EjfQe/Fq+VepnwLA2Y6x30mjfySV0OnpBB/kTO8VvmT/lZ/hiLMD+eTd9v
ncf3cAz/4VDcy2ybD/NdfIazss/f4AfzAz7Hs5whE7+LbgFf+VZTknHmgviu
+QJP8Of8NB/D1/KOF+pn+Rn+FudkkZ/XZ/gSvxD35gn+Fb/JCr+kL8Ly///X
Q+fRYPA=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{482, 483, 1081, 1524, 486, 491, 1085, 488, 1083, 1525, 489,
          466, 1071, 1517, 467, 517, 1101, 516, 1100, 1536, 514, 515, 1104, 
         521}], Line3DBox[{548, 549, 1118, 544, 1545, 545, 1117, 546, 1546, 
         547, 1121, 541, 1115, 535, 1541, 533, 1111, 534, 1542, 539, 1132, 
         572, 1129, 573, 1556, 524, 1107, 523, 1106, 519, 1537, 518, 1103, 
         509, 1534, 506, 1095, 1094, 507, 661, 1615, 1179, 660, 1569, 655, 
         1176, 656, 1184, 671, 1573, 673, 674}], 
        Line3DBox[{550, 543, 1544, 542, 1116, 531, 1540, 525, 1108, 526, 1109,
          529, 1539, 530, 1112, 536, 1555, 577, 1133, 576, 1130, 574, 1554, 
         575, 1136, 522, 1105, 494, 1529, 495, 1086, 492, 1528, 493, 1097, 
         508, 1096, 1533, 504, 1093, 505, 1568, 657, 1177, 658, 1178, 659, 
         1571, 670, 1207, 709, 710}], 
        Line3DBox[{551, 552, 1547, 554, 1120, 532, 1110, 527, 1538, 528, 1114,
          540, 1543, 537, 1113, 538, 1131, 470, 1519, 468, 1073, 469, 1074, 
         471, 1520, 472, 1090, 1530, 498, 496, 1087, 497, 1091, 1531, 501, 
         502, 1092, 1532, 503, 1191, 686, 1208, 712, 1587, 713, 1209, 708, 
         1206, 706, 1586, 707, 719}], 
        Line3DBox[{557, 556, 1122, 555, 1548, 553, 1119, 484, 1523, 475, 1076,
          476, 1082, 487, 1527, 490, 1084, 1526, 462, 453, 1066, 454, 1067, 
         1514, 455, 456, 1088, 499, 1089, 1600, 500, 679, 1186, 1574, 680, 
         681, 1194, 1193, 672, 1572, 664, 1180, 662, 1570, 663, 1183, 667, 
         1182, 668, 711}], 
        Line3DBox[{558, 559, 1551, 567, 1126, 569, 1553, 485, 1080, 477, 1077,
          1522, 478, 457, 1068, 458, 1516, 461, 1070, 451, 1065, 1513, 452, 
         510, 1098, 511, 1187, 1575, 682, 683, 1188, 1576, 675, 676, 1196, 
         688, 1195, 1578, 685, 1190, 665, 1181, 666, 669}], 
        Line3DBox[{565, 1124, 564, 581, 1601, 1135, 580, 579}], 
        Line3DBox[{571, 1128, 570, 1127, 563, 562, 1549, 1123, 561, 560, 1550,
          1125, 566, 1134, 578, 582, 1557, 583}], 
        Line3DBox[{627, 626, 1166, 1609, 599, 595, 1143, 1603, 594, 596, 1147,
          606, 1159, 1607, 621, 1158, 620, 1157, 616, 1562, 615, 1154, 613, 
         612}], Line3DBox[{647, 1171, 646, 1169, 644, 645, 1566, 651}], 
        Line3DBox[{687, 1192, 678, 1185, 677, 684, 1577, 1189, 520, 513, 1535,
          1099, 512, 1102, 465, 464, 1518, 1072, 463, 460, 1515, 1069, 459, 
         1078, 479, 474, 1521, 1075, 473, 1079, 480, 481, 1552, 568}], 
        Line3DBox[{721, 720, 1213, 715, 717, 1211, 1588, 718, 1212, 697, 1581,
          689, 1197, 690, 1198, 693, 1579, 694, 1201, 701, 1583, 614, 1152, 
         590, 1141, 591, 1558, 592, 1142, 584, 1137, 587, 1560, 601, 1148, 
         604, 1606, 1146, 605, 1163, 632, 633, 1611, 1168, 638, 636, 1610, 
         1167, 637, 640}], 
        Line3DBox[{619, 618, 1156, 1155, 600, 597, 1604, 1144, 598, 1170, 642,
          643, 1614, 1175, 652, 653, 1567, 654}], 
        Line3DBox[{639, 1564, 631, 630, 1162, 1608, 625, 624, 1164, 634, 1173,
          1612, 649, 589, 1139, 1602, 1140, 586, 585, 1138, 588, 1559, 593, 
         1150, 610, 1149, 609, 1582, 700, 1202, 702, 1585, 704, 1204, 699, 
         1200, 696, 1580, 695, 1199, 698, 1210, 714, 716}], 
        Line3DBox[{641, 1565, 629, 628, 1165, 635, 1174, 1613, 650, 648, 1172,
          603, 1145, 1605, 602, 1160, 622, 1563, 623, 1161, 611, 1151, 608, 
         1561, 607, 1153, 617, 1584, 705, 1205, 703, 1203, 692, 691}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{852, 851, 1041, 1682, 1123, 855, 1685, 759, 1033, 1641, 
         1083, 750, 1635, 1078, 749, 1637, 752, 1031, 1634, 1077, 1761, 748, 
         1076, 1760, 747, 830, 1674, 831, 1114, 1784, 816, 1668, 815, 814, 
         1109, 1779, 819, 1121, 1790, 847, 846, 1746, 1001, 1212, 1840, 1021, 
         1210, 1020}], 
        Line3DBox[{863, 1127, 862, 1689, 854, 1681, 739, 1071, 735, 1626, 
         1028, 1623, 1069, 731, 730, 1622, 1068, 729, 1643, 1644, 1032, 1082, 
         725, 1619, 726, 1113, 1783, 827, 1673, 829, 826, 1112, 1782, 825, 
         1671, 824, 1115, 1785, 835, 834, 1197, 1834, 995, 1745, 1000, 1199, 
         1002, 1003}], 
        Line3DBox[{864, 808, 1104, 807, 1667, 1038, 1660, 1099, 793, 1663, 
         792, 1098, 728, 1621, 1027, 1620, 1067, 727, 736, 1630, 1631, 744, 
         1074, 1759, 745, 869, 1136, 1798, 878, 1692, 1044, 1129, 1792, 867, 
         874, 1152, 1809, 913, 1747, 1005, 1202, 1838, 1007, 1011, 1749, 1012,
          1205, 1013}], 
        Line3DBox[{865, 795, 796, 1661, 1100, 797, 1662, 1102, 799, 1664, 794,
          1026, 1616, 1065, 722, 1618, 1066, 724, 1617, 723, 1632, 741, 1073, 
         1758, 740, 1690, 866, 868, 1130, 1793, 870, 1132, 1795, 873, 875, 
         1748, 1063, 1201, 1837, 1006, 1750, 1064, 1204, 1010, 1751, 1009, 
         1203, 1008}], 
        Line3DBox[{877, 1045, 1797, 1135, 857, 858, 1691, 1134, 876, 1693, 
         879, 1694, 758, 1081, 754, 1638, 1079, 753, 1686, 859, 1687, 860, 
         1126, 1791, 848, 1679, 1040, 1122, 820, 1670, 821, 1120, 1789, 845, 
         1678, 844, 836, 1116, 1786, 837, 1676, 838, 1118, 1788, 843, 842, 
         1213, 1025}], 
        Line3DBox[{911, 912, 1810, 1153, 906, 1707, 905, 907, 1807, 1149, 887,
          1800, 1141, 1047, 1700, 805, 806, 1777, 1107, 809, 1775, 1105, 763, 
         1645, 762, 770, 1766, 1090, 1650, 769, 768, 1666, 771, 1088, 1647, 
         772, 1187, 1735, 1060, 781, 1655, 782, 1189, 1738, 983, 984}], 
        Line3DBox[{916, 915, 1154, 914, 1709, 910, 1808, 1151, 909, 1708, 908,
          1150, 894, 1701, 893, 1801, 1142, 811, 810, 1776, 1106, 801, 1665, 
         765, 1764, 1086, 764, 774, 1649, 1648, 766, 1087, 1646, 767, 773, 
         1089, 1765, 1034, 1734, 982, 1188, 1737, 975, 974, 1736, 976, 1185, 
         977}], Line3DBox[{918, 1156, 890, 1698, 888, 1158, 1051, 1711, 925, 
         1812, 1160, 901, 1704, 882, 883, 1140, 1696, 886, 1806, 1148, 903, 
         1706, 804, 787, 1769, 1095, 789, 1772, 1096, 784, 1657, 775, 1652, 
         778, 1092, 1656, 1036, 978, 1731, 979, 1194, 1741, 992, 1195, 1743, 
         986, 985, 994}], 
        Line3DBox[{919, 920, 1710, 921, 1157, 923, 1813, 1161, 1052, 1712, 
         922, 881, 1799, 1138, 880, 1695, 1137, 1046, 1703, 802, 800, 1774, 
         1103, 790, 1659, 791, 1773, 1097, 785, 1658, 779, 1091, 1653, 1035, 
         1654, 780, 980, 1186, 1732, 1059, 1733, 981, 1196, 993, 1742, 990, 
         1192, 1062}], 
        Line3DBox[{945, 1169, 946, 1718, 943, 944, 1826, 1175, 955, 1723, 942,
          1717, 937, 1166, 934, 1817, 1165, 935, 1715, 926, 927, 1814, 1162, 
         928, 1819, 1053, 1818, 1167, 938, 1725, 961, 1184, 1730, 971, 1831, 
         972, 1207, 1016, 1754, 1014, 1206, 1752, 1015, 1757, 1024, 968, 1182,
          969}], 
        Line3DBox[{947, 900, 1048, 1802, 1144, 899, 1721, 904, 1147, 897, 
         1702, 898, 1822, 1172, 953, 1722, 952, 1055, 1823, 1173, 931, 1816, 
         1163, 932, 1716, 941, 1057, 1829, 1179, 1726, 957, 1827, 958, 1177, 
         959, 1728, 963, 1208, 1753, 1017, 973, 1832, 1058, 1180, 1729, 966, 
         1181, 967}], 
        Line3DBox[{970, 1183, 965, 1830, 964, 1018, 1755, 1209, 1019, 1839, 
         962, 1727, 960, 1178, 956, 1724, 1176, 1056, 1828, 939, 1714, 940, 
         1168, 1820, 930, 1815, 929, 1164, 933, 1713, 936, 1174, 1825, 954, 
         1824, 896, 1143, 895, 1720, 951, 1719, 950, 1170, 1821, 949, 948, 
         1171, 1054}], 
        Line3DBox[{987, 1190, 1061, 1833, 991, 1740, 1193, 989, 988, 1739, 
         1191, 783, 1767, 777, 1651, 776, 1093, 1037, 1770, 1771, 788, 1094, 
         1768, 786, 803, 1146, 1804, 1050, 1805, 885, 1139, 884, 1705, 902, 
         1145, 1803, 1049, 1811, 924, 1159, 892, 1699, 891, 1697, 889, 1155, 
         917}], Line3DBox[{997, 996, 1004, 1836, 1200, 999, 1835, 1198, 998, 
         1744, 833, 823, 1781, 1111, 1039, 1672, 828, 1796, 1133, 871, 872, 
         1794, 1131, 743, 1629, 742, 760, 1763, 1084, 1642, 734, 1625, 1029, 
         1070, 732, 1624, 733, 1072, 1628, 737, 1627, 738, 1101, 798, 1688, 
         861, 1128, 1043}], 
        Line3DBox[{1022, 1023, 1211, 1756, 840, 841, 1787, 1117, 839, 1677, 
         813, 1778, 1108, 812, 822, 1780, 1110, 817, 1669, 818, 1675, 832, 
         1119, 755, 1639, 756, 1762, 1080, 757, 1640, 746, 1075, 1633, 1030, 
         1636, 751, 1085, 761, 1683, 856, 1125, 1684, 853, 1680, 850, 849, 
         1124, 1042}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1245, 1244, 1638, 1236, 1633, 1521, 1237, 1637, 1591, 1221,
          1622, 1447, 1516, 1625, 1217, 1618, 1445, 1620, 1514, 1220, 1666, 
         1258, 1257, 1646, 1456, 1653, 1531, 1262, 1652, 1651, 1263, 1400, 
         1568, 1827, 1399, 1724, 1501, 1730, 1503, 1573, 1415}], 
        Line3DBox[{1301, 1544, 1472, 1786, 1300, 1677, 1546, 1304, 1790, 1471,
          1785, 1299, 1426, 1744, 1579, 1427, 1837, 1432, 1747, 1582, 1489, 
         1807, 1359, 1360, 1708, 1361, 1712, 1563, 1492, 1812, 1811, 1349, 
         1702, 1347, 1603, 1348, 1720, 1390, 1723, 1393, 1567, 1398}], 
        Line3DBox[{1309, 1547, 1476, 1789, 1468, 1780, 1281, 1668, 1282, 1539,
          1286, 1782, 1293, 1672, 1542, 1295, 1795, 1481, 1792, 1327, 1346, 
         1700, 1558, 1488, 1801, 1484, 1695, 1485, 1696, 1602, 1341, 1705, 
         1353, 1722, 1391, 1613, 1825, 1497, 1817, 1493, 1367}], 
        Line3DBox[{1318, 1551, 1319, 1791, 1246, 1639, 1523, 1452, 1760, 1238,
          1218, 1619, 1219, 1629, 1519, 1450, 1758, 1228, 1759, 1234, 1235, 
         1645, 1529, 1255, 1764, 1256, 1659, 1534, 1459, 1769, 1768, 1268, 
         1597, 1716, 1383, 1611, 1820, 1498, 1819, 1376, 1564, 1377}], 
        Line3DBox[{1320, 1552, 1322, 1686, 1249, 1640, 1247, 1239, 1634, 1522,
          1240, 1643, 1251, 1642, 1526, 1216, 1617, 1589, 1231, 1630, 1451, 
         1650, 1530, 1259, 1648, 1261, 1658, 1267, 1657, 1594, 1533, 1770, 
         1269, 1726, 1403, 1569, 1828, 1402, 1725, 1401, 1378, 1499}], 
        Line3DBox[{1332, 1483, 1797, 1601, 1315, 1311, 1680, 1479, 1682, 1549,
          1313, 1689, 1324, 1688, 1275, 1273, 1661, 1536, 1274, 1667, 1463, 
         1738, 1577, 1420, 1736, 1421, 1742, 1599, 1422, 1743, 1578, 1833, 
         1408, 1729, 1406, 1570, 1830, 1407, 1409, 1757, 1444, 1512}], 
        Line3DBox[{1333, 1334, 1694, 1248, 1524, 1243, 1636, 1242, 1635, 1222,
          1623, 1515, 1223, 1624, 1590, 1214, 1616, 1513, 1215, 1621, 1446, 
         1647, 1457, 1765, 1600, 1592, 1264, 1654, 1458, 1656, 1532, 1767, 
         1266, 1728, 1404, 1727, 1405, 1410, 1571, 1831, 1411, 1504}], 
        Line3DBox[{1335, 1331, 1691, 1316, 1684, 1550, 1317, 1685, 1312, 1681,
          1226, 1517, 1225, 1627, 1449, 1662, 1272, 1660, 1535, 1265, 1655, 
         1593, 1506, 1737, 1576, 1418, 1733, 1505, 1741, 1740, 1412, 1572, 
         1832, 1413, 1414, 1755, 1438, 1752, 1436, 1586, 1437}], 
        Line3DBox[{1337, 1557, 1336, 1693, 1314, 1683, 1252, 1250, 1641, 1525,
          1224, 1626, 1448, 1628, 1518, 1227, 1664, 1276, 1663, 1271, 1461, 
         1735, 1575, 1419, 1734, 1417, 1732, 1574, 1416, 1731, 1598, 1739, 
         1507, 1753, 1511, 1587, 1839, 1441, 1754, 1440, 1439, 1510}], 
        Line3DBox[{1379, 1375, 1818, 1610, 1374, 1714, 1596, 1502, 1829, 1615,
          1270, 1771, 1772, 1460, 1773, 1254, 1528, 1253, 1649, 1260, 1766, 
         1233, 1520, 1631, 1232, 1632, 1230, 1229, 1763, 1455, 1527, 1644, 
         1241, 1761, 1453, 1762, 1454, 1553, 1687, 1323, 1321, 1480}], 
        Line3DBox[{1380, 1368, 1494, 1814, 1608, 1369, 1815, 1495, 1816, 1355,
          1804, 1606, 1706, 1354, 1277, 1774, 1462, 1537, 1665, 1278, 1775, 
         1464, 1798, 1328, 1554, 1326, 1690, 1325, 1794, 1294, 1783, 1470, 
         1543, 1674, 1298, 1675, 1291, 1290, 1548, 1679, 1310, 1478}], 
        Line3DBox[{1382, 1565, 1381, 1715, 1371, 1713, 1370, 1496, 1823, 1612,
          1356, 1805, 1806, 1351, 1560, 1703, 1338, 1279, 1776, 1465, 1777, 
         1466, 1556, 1692, 1329, 1793, 1482, 1796, 1330, 1555, 1297, 1673, 
         1296, 1784, 1284, 1538, 1669, 1283, 1670, 1287, 1289, 1477}], 
        Line3DBox[{1385, 1384, 1717, 1373, 1609, 1372, 1824, 1392, 1822, 1352,
          1803, 1605, 1704, 1340, 1339, 1799, 1486, 1559, 1701, 1342, 1800, 
         1487, 1809, 1490, 1583, 1748, 1434, 1292, 1781, 1469, 1541, 1671, 
         1285, 1779, 1280, 1778, 1467, 1540, 1288, 1678, 1308, 1475}], 
        Line3DBox[{1394, 1566, 1387, 1718, 1386, 1500, 1821, 1350, 1802, 1604,
          1344, 1697, 1698, 1343, 1710, 1365, 1364, 1562, 1709, 1363, 1810, 
         1491, 1584, 1749, 1435, 1751, 1425, 1424, 1836, 1430, 1580, 1745, 
         1429, 1840, 1443, 1588, 1756, 1442, 1307, 1788, 1306, 1473}], 
        Line3DBox[{1397, 1396, 1395, 1826, 1614, 1389, 1719, 1388, 1721, 1345,
          1699, 1595, 1607, 1711, 1366, 1813, 1362, 1808, 1358, 1561, 1707, 
         1357, 1433, 1838, 1509, 1585, 1750, 1428, 1835, 1423, 1834, 1508, 
         1581, 1746, 1431, 1305, 1787, 1303, 1545, 1676, 1302, 1474}]}}},
     VertexNormals->CompressedData["
1:eJztnDtOLEEMRVu8gJQtsIMnviERG4AdgJDIWANiGy96CUsgQSInZxmE/DJA
gqSlUnfPVJWv7RONdDTquWW7XC5X9WyfXZ1cbAzD8HdzGP58fZ7cHe+8XT4f
7T5t/b+5f3x43bq9/nf+dDTF93/4+8zvw+FwuBonj/XhB6J2LulR09k6/tX0
jO2vphMOh8PhcDgcrsm91I1edMI1+U7weMuyH1e1Z2v7q/m3lp7s/SVv/oLn
svPSdVOVq+SZVeuKaHE1ZYdo481aJ6jpt7LPS+d8q7p/WZqHvcSzF51zea/z
6Gh2Ux2Xmp4s3CoPU2fa8NOR/d9n8r0f/gaHd+DEoQb/ENNDnMDhcLgNP0CP
K74rpqcXV6sHlupR+35Uns0O6vV8KV9N5bHWfswWJ1bzbikfP3/f2bhar+/j
vl9tu5WeX2u8reddKR+q58mlvPa8IB/G5FNxEm1eqK4jcHgP/ts/iTavD43H
laWuUOP0A+FwOBweibOuwefwXud92epYL+NdqpN9ii+u5pfWetTG2zsPW6/7
Y/tP6fHqL2v9tX63tf6554nWOlXisHYfUmVc1tyLHbzozMbn+sV6/a1VP2SJ
w2zjjc7X9aOXOpz3mHLbTSVfRbEnHN6irlDRU4v3Oi9Qyyde7id7sUNrPevq
9PYenNV7EFZ2Lv1u6/cLatVLanGiUk9a87l2sPIj/Qq4Mic+++QfLzzqPggO
h+fhpTxGfovBS3701gfIck8mOvduZ+/61+VZ80Yrv/daZ2vdh7fy47j/Wfv+
7dzvW8e/2r1ctThR59TbOTn9Q7hS3lbTSZ2D37859+7gcJ26VE2nd157/7g0
T9Z6b7H3OmV9vygarz3fvfcHrP5f12pc646X/WwMjh9j8KX5HL/DlXnU/ciq
9b/6OaZ1neOVW58nWtXz3uME/fDI6xRxAofDVbn3fmPvPNzr/ypL5wvj55fq
3lXXU2u/fwJL5SGV
      "]], {}}, {{
     {RGBColor[1, 0, 0], PointSize[0.03], Point3DBox[{-3., -5., 6.}], 
      Point3DBox[{2., 1., -4.}], Point3DBox[{0., -3., -1.}]}, {}, {{Inset3DBox[
        FormBox[
         GraphicsBox[GraphicsGroupBox[{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
               Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
               Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
              Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
               Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
               Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
            {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
              Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
               Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
               Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
               Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
             StyleBox[
              RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(3\\)]\\)\"\>",
               BoxRotation->0.],
              StripOnInput->False,
              LineOpacity->1,
              FrontFaceOpacity->1,
              BackFaceOpacity->1,
              Opacity->1,
              FontOpacity->1], 
             Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}],
          AspectRatio->Full,
          ImageSize->{48, 51},
          
          PlotRange->
           NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
              2^Rational[-1, 2], 1 + 
              2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
            1.7071067811865475`}, {-0.29289321881345254`, 
            1.7071067811865475`}}]], StandardForm], {0., -3., -1.}, 
        Offset[{-3.3368706917296125, -2.1954660363577174}, {0, 0}]], 
       Inset3DBox[
        FormBox[
         GraphicsBox[GraphicsGroupBox[{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{-2.1213203435596424`, 2.121320343559643}, {0., 0.}], 
               Offset[{-5.65685424949238, 5.656854249492381}, {0., 0.}], 
               Offset[{-7.65685424949238, 5.656854249492381}, {0., 0.}], 
               Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}], 
               Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
              Offset[{-2.1213203435596424`, 2.121320343559643}, {0., 0.}], 
               Offset[{-5.65685424949238, 5.656854249492381}, {0., 0.}], 
               Offset[{-7.65685424949238, 5.656854249492381}, {0., 0.}], 
               Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}], 
               Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}]}]}, 
            {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
              Offset[{-9.656854249492381, 18.856854249492383`}, {0., 0.}], 
               Offset[{-9.656854249492378, -3.1431457505076184`}, {0., 0.}], 
               Offset[{-28.656854249492376`, -3.143145750507622}, {0., 0.}], 
               Offset[{-28.656854249492383`, 18.85685424949238}, {0., 0.}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
             StyleBox[
              RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)\"\>",
               BoxRotation->0.],
              StripOnInput->False,
              LineOpacity->1,
              FrontFaceOpacity->1,
              BackFaceOpacity->1,
              Opacity->1,
              FontOpacity->1], 
             Offset[{-19.15685424949238, 7.85685424949238}, {0., 0.}], NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}],
          AspectRatio->Full,
          ImageSize->{48, 51},
          
          PlotRange->
           NCache[{{-1 - 2^Rational[-1, 2], 1 - 2^Rational[-1, 2]}, {-1 + 
              2^Rational[-1, 2], 1 + 
              2^Rational[-1, 2]}}, {{-1.7071067811865475`, 
            0.29289321881345254`}, {-0.29289321881345254`, 
            1.7071067811865475`}}]], StandardForm], {2., 1., -4.}, 
        Offset[{3.3368706917296125, -2.1954660363577174}, {0, 0}]], Inset3DBox[
        FormBox[
         GraphicsBox[GraphicsGroupBox[{
            {GrayLevel[1], AbsoluteThickness[4], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
              Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
               Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
               Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
              Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
               Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
               Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
               Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
            {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
              Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
               Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
               Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
               Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
            {RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
             StyleBox[
              RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)\"\>",
               BoxRotation->0.],
              StripOnInput->False,
              LineOpacity->1,
              FrontFaceOpacity->1,
              BackFaceOpacity->1,
              Opacity->1,
              FontOpacity->1], 
             Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
             ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}],
          AspectRatio->Full,
          ImageSize->{48, 51},
          
          PlotRange->
           NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
              2^Rational[-1, 2], 1 + 
              2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
            1.7071067811865475`}, {-0.29289321881345254`, 
            1.7071067811865475`}}]], StandardForm], {-3., -5., 6.}, 
        Offset[{-3.3368706917296125, -2.1954660363577174}, {0, 0}]]}, {}}}, \
{}}},
  AspectRatio->Automatic,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{352.21434870551997`, 368.6515971953764},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.3685849182945715`, -2.6463559975773108`, 1.6042989919286352`},
  
  ViewVertical->{0.0746339847514587, -0.11677952843579383`, 
   0.9903495898209039}]], "Output",
 CellChangeTimes->{{3.887260159956443*^9, 3.887260171816573*^9}, 
   3.887260239160034*^9, {3.8872602705878487`*^9, 3.887260277322311*^9}, 
   3.8872615311002817`*^9, 3.887270228683776*^9},
 CellLabel->"Out[1021]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJykvQu4bVdRLjh777n23uf9TnLOScLhlUBIICGJBAJkAxJeYkgw5kRIODxy
IgEUIaCoyPZ1FZSr0r4Bz7m+jS12cwEbeRykUVo+/Gy9aIuv40e3oLl4tTX3
yvXRp1eNqhpVNcZfc63Y+/v23mvNteaY4/GPGlV/1ajx/Jfe+7V3veal977y
5S899qzXvfS1X/vKl7/+2I1f/7r5pdX/YRhWvnv++zPHhnH++tww4D/fMwwP
4sKnysvxIa961avefPLkyY/cfffdL5n//1/dVz5ZXm7oV/5Ufun1D8x//2h+
yw133XXXr7lbPlFerqFb6Ksr5ePVe+Yv/3f5aPC3v54/PyPvy7VZ+bt6anA/
z4iP+ed5TfxjZty2m+aXv2t+6cPz//TRB/onnZL3W+VJ5e/qCf+kzeknbZSP
Z/ok+tqfyv/h/f3jNuV9KfWZedF0bUcsmt7cOX9NjQlF32t9dlZb8rTponfz
x1T0qfnvRffcc88Pzz/67/MG0SPe15U+OyYl07Uz2oAnTz9lb/l4g0p/x7zk
v59f/p35/ze84hWveMr8V/vpP7qnvZEH7oS0Rdtz3fSD9vNdT5oXTg+gh/3G
/KNV7hj61rulA4f3uod9I9/mm0YPvAY/7IF5qXTtfC712vlb6rvyTmCto0/A
CE96E39+Qt7T/+HKcm1b1ib6kBpDvTegZ0rr6Fl/qq37X9wzHeII5MdKW/na
WRnE8nP5dN/KLbUq9HMeXzvy6le/+oP66PK9FepnUAnt3s2mEnVOP3q6EusP
phI8Dh8W4TT8z311jg0GZO1HrWIZm0u5OnQ/qs72JavDYmj1Trm9vPtVVx2e
W+v6aO2Rs756j5yuyiXgsWt8TaVeefce99g3cOWOyePOyH+qxvBw/gw9brgs
f1aQe/5ZPzlR3mP53s9oWa68Kujo51dceT82Ud5VeXkBEb68H7byvm3+eSjv
GlDeemxvefc/ufJ+kL+lQH53I0AKXL4MlMvrSJRVv+zKfTu3BpVL70UABURe
y9doqGjI/GNCd/jHvG36MbMlH7ONrwXZdJ97zPdMP2ZjycfIPAxA/yX3mO+a
fgwvsKu0XNDSsegxQbr7x3x7fMyHGxzdyLeT4L5WHyOPDjD/RVfkt+EitaXP
AUXutM64U4v8BVfkt0wX+RV5kWFy+yK/abrIm0CRu/hawPnPuyLfEIskrfRf
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\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"fa8e318d-220d-4318-966c-6242d01f4db6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "7.2. Parallelogram in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "39e16b13-6afc-4690-adf0-9dea5fcda4f1"]
}], "Subsection",
 CellChangeTimes->{{3.887260320918564*^9, 
  3.887260352723831*^9}},ExpressionUUID->"46ea5c3e-2b6a-4499-b121-\
8d7ac9e1cf4f"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " In ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["R", FontSlant -> "Plain"], "3"], TraditionalForm], 
     "errors" -> {}, "input" -> "\\mathbb{R}^3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "936d7f62-b8cd-4435-9793-8c70368e4f6e"],
 " three vertices of parallelogram ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{"6", ",", "2", ",", "-3"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{"6", ",", "3", ",", "-2"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "3"], 
         RowBox[{"(", 
           RowBox[{"7", ",", "3", ",", "-3"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A_1(6,2,-3),A_2(6,3,-2),A_3(7,3,-3)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "6d26c60c-04bf-4e3c-bdb4-61eee2b39ae4"],
 " are given. Find coordinate of the fourth vertex ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["A", "TI"], "4"], TraditionalForm], "errors" -> {}, "input" -> 
     "A_4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a68cbf27-aca4-48f8-9357-64caa64f8d88"],
 " which is opposite to the side ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["A", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "A_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "187b9b71-44f1-4bdb-afc7-65b5cbcf82c0"],
 ". Find area of this parallelogram. Display contours of this parallelogram \
and its vertices."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.887260357456397*^9, 3.887260457872904*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8bb674f6-5468-43d6-abd1-32627c675728"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";", 
  RowBox[{"A2", "=", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], ";", 
  RowBox[{"A3", "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1A2", "=", 
   RowBox[{"A2", "-", "A1"}]}], ";", 
  RowBox[{"A1A3", "=", 
   RowBox[{"A3", "-", "A1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A4", "=", 
   RowBox[{"A1", "+", 
    RowBox[{"(", 
     RowBox[{"A1A2", "+", "A1A3"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Coordinate of vertex \!\(\*SubscriptBox[\(A\), \(4\)]\) is \>\"", ",", 
   "A4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.887260486896134*^9, 3.8872605322241287`*^9}, 
   3.887270235838996*^9, {3.8872702738589067`*^9, 3.887270297799803*^9}},
 CellLabel->
  "In[1022]:=",ExpressionUUID->"21c49067-5f6f-4df3-b5b1-fbeb286cc665"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Coordinate of vertex \\!\\(\\*SubscriptBox[\\(A\\), \
\\(4\\)]\\) is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4", ",", 
     RowBox[{"-", "2"}]}], "}"}]}],
  SequenceForm[
  "Coordinate of vertex \!\(\*SubscriptBox[\(A\), \(4\)]\) is ", {7, 4, -2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.887260533134158*^9, 3.887261498775017*^9, 
  3.887270298142376*^9},
 CellLabel->
  "During evaluation of \
In[1022]:=",ExpressionUUID->"cad0161a-4db1-41ca-bcc5-ab0c5dc320bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2", ",", "A4", ",", "A3", ",", "A1"}], "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A1", ",", "A2", ",", "A3", ",", "A4"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(3\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(4\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red"}], "]"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.887260541460194*^9, 3.8872606294967546`*^9}, {
  3.8872614866044607`*^9, 3.887261491256946*^9}, {3.8872703020032043`*^9, 
  3.887270317598791*^9}},
 CellLabel->
  "In[1026]:=",ExpressionUUID->"93ebf482-f15d-4931-b2a1-9d7d96abae8a"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.01], 
    Line3DBox[{{6, 2, -3}, {6, 3, -2}, {7, 4, -2}, {7, 3, -3}, {6, 
     2, -3}}]}, {{
     {RGBColor[1, 0, 0], PointSize[0.03], Point3DBox[{6., 2., -3.}], 
      Point3DBox[{6., 3., -2.}], Point3DBox[{7., 3., -3.}], 
      Point3DBox[{7., 4., -2.}]}, {}, {{Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{-2.1213203435596424`, 2.121320343559643}, {0., 0.}], 
              Offset[{-5.65685424949238, 5.656854249492381}, {0., 0.}], 
              Offset[{-7.65685424949238, 5.656854249492381}, {0., 0.}], 
              Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}], 
              Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{-2.1213203435596424`, 2.121320343559643}, {0., 0.}], 
              Offset[{-5.65685424949238, 5.656854249492381}, {0., 0.}], 
              Offset[{-7.65685424949238, 5.656854249492381}, {0., 0.}], 
              Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}], 
              Offset[{-9.65685424949238, 5.656854249492381}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{-9.656854249492381, 18.856854249492383`}, {0., 0.}], 
              Offset[{-9.656854249492378, -3.1431457505076184`}, {0., 0.}], 
              Offset[{-28.656854249492376`, -3.143145750507622}, {0., 0.}], 
              Offset[{-28.656854249492383`, 18.85685424949238}, {0., 
               0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(4\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{-19.15685424949238, 7.85685424949238}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 - 2^Rational[-1, 2], 1 - 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-1.7071067811865475`, 
           0.29289321881345254`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {7., 4., -2.}, 
        Offset[{3.3368706917296107, -2.1954660363577174}, {0, 0}]], Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
              Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
              Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
              Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(3\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {7., 3., -3.}, 
        Offset[{-3.3368706917296107, -2.1954660363577174}, {0, 0}]], 
       Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
              Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
              Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
              Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {6., 3., -2.}, 
        Offset[{-3.3368706917296107, -2.1954660363577174}, {0, 0}]], 
       Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
              Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
              Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
              Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {6., 2., -3.}, 
        Offset[{-3.3368706917296107, -2.1954660363577174}, {0, 0}]]}, {}}}, \
{}}},
  ImageSize->{359.5814829357943, 306.4016324126025},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.765910021982434, -2.764714281890851, 0.8294074594376115},
  ViewVertical->{0.2736063894469817, -0.2006023691148144, 
   0.9406902960907539}]], "Output",
 CellChangeTimes->{{3.887260603181316*^9, 3.887260629911018*^9}, {
   3.887261491799123*^9, 3.887261500085187*^9}, 3.88727031827036*^9},
 CellLabel->"Out[1028]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXmYVdWV78mte2sERAYBRSlBRQuFlFqOKAdQVBRRsZRoEFABxXk2YuAo
OIcIMc4oKA5YOI9dabXQjsaOJBqtqEnamMRPn/ElbdLpNq/f+/rdd/fa4zp7
7eEU8Z9+4fvupe609u/3W3uvvfZw9pkx/+IzFpwz/+IzT5vfetiF888/48zT
Lmqddt6FtbfqvpYkpe/XHnu2JuXa39UksZ4msqekcduzzz578YIFC9ijd+HC
hS/XHs+J1+wz+O5x8F3+u33hz3r2WYf43tpFixax33bXHiX2Rol9kpTZa/ZS
/g+/P9awtRfGsKL2PWmH2WTvMUsV+FpDhyiKvWA/WSG+CoWBvZmG7fEa50xh
y8KZ1MFv5b8GeK4zy0lK8FxmJtjPWJlKlhlGcW1xVAbwIpg5VUQdL0L+FKl1
lFHEzsUZDdTFMUTwquIpbrpRXCvQZ19LGvJlmZSSYUQhDboQ+X0l2+FGISOj
OAEI+W8EUVyjh9NhRnHDYjm1EoU0ewo51ChksOYkW5bFaWfCfj9tf62obh3S
/lTDPq9DTa4WiHjsxsuRVTLRvy/LOoha+mSjnOYIHtDK4K+BHnVSw2rFj36F
+B2g31NZH+TR5mDD+td4dXBhZq8Z732V4SFaDKt98xCZ/J8CiA9Uhod69DiQ
G/6rDbbbiBvSKFevTpYDr7axrTMKYH1/bv3fCsA+RBcxU4al4boIqwnzTiD5
V4xC9iEl9n1e6VQ0OpwoYYRHon14Cb8vQGIGUcR2niL25kV8YnuBakrHEda3
99TKPbn138BzoaB9PFHSKP6e/Pli1eW189/8Cybh6n5O5mbYW6rIVo9EE7j1
94uTmEOUNNoj1x78Z+9iHq64djphfSdunWzJ47j1n0bxQL3NQqKknT2K8Twg
+Wf2FNPRnEPYH2vbV417V27/Nc3EGZsv5Ka7hRDwajdt2hJpF256EzzHdS+X
EkW0edThyiUvRqBfQpje3WN6DDf9QgH0y4gixusiZB1VAu3Ii3gGnoN9zArC
+gRMQKLR+VaSPO4ngCLe9byIXrOIdo9GO/AiumwCVL+zUltP5L+9bHlUE+a5
XPJgAQKriSI6eBFkO96Wf+U+zNHX79xKlLCPRyLeJyVrCpC4iyhiP7sIpRPP
l5M7bC9QtXQtYf0Abr1DWEYS8bwjuQWeC4XsdbwkGRvg1USPVDx1Sm7GPFxd
z8OE9YM91nnGl9xYnMcjREmpLslq1jxzTa7FPFxR40nC+mTMAzXrrbj1q6J4
oK7naaKkqR7F+vOfXcmeYrqebm4fDXcPtXVS9baF2788gsnLhGk+DlPtGg07
mrjpi+A5Lni/ShRxuEcdPkRMztPonV3PjwjT07Vpc94BTNdz04sLoH+TKIKP
9elWXeZFiNFuqOt5m1tHo8sZHm34DEQy308ABb1eooiZniL4wEykhd6uh5n8
BWH9WLtqsr//Lzc8uwD2Dwnrx9HY/4tbPx5/6utwfksYP542zgeWQrY46J8S
1k+whWHf/U9u/ch46J+zJ2gB3+A/yrdVPmBNpsGzfwowF5P/qEyfRGvxJf/e
FFw/XJ3Jvytz39TmzHb579zcQRppbO/xpTJ9ChZBtkc+rhaj7CDS/1Lm5tLE
/8zN7V0caZXXBTROnEcX8gX/BaSfMV0DmG4g7J+q7ZuTAn/k9sdFkUCdnBH+
cUmn0Uz+wH/Gxypxsdbo5HERC+giPudFjNZknD2FkXFh04u0abNNfsZNb18U
vZjzZB+oIs7kReSn8XiEEMk4VJj3ao8PWWvXkHfQ9lSVWkyr8Ylpr8Le2SAg
ym+I/q8urZnOao8qK6KOP/fUntOq6eutiKLPptX62Ci6pEsy27pkzafpobiq
hNDAIWSyeAWhHwHhXK2m2dh/i9RELi7Zeq1fP2lSP1epLUSp59Ga/8ZdKk8E
6o7/1fDhiqgoMrWK5DO4eAh6gV0kM/7rYJFI2/6uIpuIIi/SRZpB419QkUgX
npCAeVXkVvCXoSQq42JayV+hMmTFMstAtMqi7vbUXme1R1p7VWF/iffk95ww
LqVh/MKCoX4BMOqNcqX5fuy5knEhDJm5P8Z0VqvVDwh7l2sEZlt6PwbBtjwb
ZGX2iv4sKcFzXc/GjRu7akWyRzKyy1H4Ffw9cxCUvIdKRuNYXfIoXnK1s7Oz
2tXVxR61V7XnSu/mzZtrxX/88ceq+K2N4pG9JbT6vTEIasVlhvojCUADXIDq
XYC+TTvjHf4pn5yG/lD9qmwC6gkAGsGe6xigUgafponx710CEJ/yssLc2xag
bgSIaiY7EIBGsudGV8V9gwCU0S57CwFCwyQBKLUA5TxYFs+p+F7ts55OUbtr
fBLjq/1dVAa7qLxEULnapsJ0/ombSsWlbYMAJGIOhFker+pZuzeRyOJKH44b
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
/P2N/7/eSL72/wBAkRRX\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"c7a8343d-4a3d-4f4c-b438-8d490cff9408"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{"Norm", "[", 
    RowBox[{"Cross", "[", 
     RowBox[{"A1A2", ",", "A1A3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Area of this parallelogram is \>\"", ",", "S"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.887260639156513*^9, 3.887260654465623*^9}, {
  3.887270333716773*^9, 3.887270335669949*^9}},
 CellLabel->
  "In[1029]:=",ExpressionUUID->"d0a8e409-56fe-4fc0-9d2d-ecf689ffb2cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Area of this parallelogram is \"\>", "\[InvisibleSpace]", 
   SqrtBox["3"]}],
  SequenceForm["Area of this parallelogram is ", 3^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8872606548973703`*^9, 3.8872703361528482`*^9},
 CellLabel->
  "During evaluation of \
In[1029]:=",ExpressionUUID->"f080127f-2ffa-4108-858c-6a6bf14b8aee"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "7.3. Calculations in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "7327a6f1-8d9c-40e3-bfea-10f807ea6656"],
 " triangle"
}], "Subsection",
 CellChangeTimes->{{3.887260689797061*^9, 
  3.887260708269438*^9}},ExpressionUUID->"b0ae9ccb-101f-496d-b2d7-\
9a1910512b7a"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given a triangle with vertices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         RowBox[{"(", 
           RowBox[{"-4", ",", "-2", ",", "0"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "2"], 
         RowBox[{"(", 
           RowBox[{"-1", ",", "-2", ",", "4"}], ")"}], ",", 
         SubscriptBox[
          StyleBox["A", "TI"], "3"], 
         RowBox[{"(", 
           RowBox[{"3", ",", "-2", ",", "1"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A_1(-4,-2,0),A_2(-1,-2,4),A_3(3,-2,1)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f65d5134-03df-4103-a6b4-8adbb387c7e0"],
 " find length of height ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["h", "TI"], "\[LongEqual]", "\[DoubleVerticalBar]", 
         OverscriptBox[
          RowBox[{
            SubscriptBox[
             StyleBox["A", "TI"], "2"], 
            StyleBox["H", "TI"]}], "\[RightVector]"], 
         "\[DoubleVerticalBar]"}], TraditionalForm], "errors" -> {}, "input" -> 
     "h=\\|\\vec{A_2H}\\|", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c196e2c9-8763-4122-b597-22913b1f3c11"],
 " from vertex ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["A", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "A_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "dc1aeeed-12ca-4953-b9f2-6e8760c321f0"],
 " on side ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         SubscriptBox[
          StyleBox["A", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "A_1A_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ea53ff4f-586d-46ef-99a0-88ab4408485f"],
 ". Find length of median ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["m", "TI"], "\[LongEqual]", "\[DoubleVerticalBar]", 
         OverscriptBox[
          RowBox[{
            SubscriptBox[
             StyleBox["A", "TI"], "2"], 
            StyleBox["M", "TI"]}], "\[RightVector]"], 
         "\[DoubleVerticalBar]"}], TraditionalForm], "errors" -> {}, "input" -> 
     "m=\\|\\vec{A_2M}\\|", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e407803b-b497-4c37-a9ae-98d4cde83c46"],
 " from vertex ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["A", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "A_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e3f1c280-c035-4bf4-a0c1-b3398318bd4d"],
 " on side ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["A", "TI"], "1"], 
         SubscriptBox[
          StyleBox["A", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "A_1A_3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "68b712b0-c030-48c6-8d0d-7cecfa201de7"],
 ". Display triangle\[CloseCurlyQuote]s contour and its median."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.887260683068844*^9, 3.887260683623871*^9}, {
  3.887260716900782*^9, 3.887260826290506*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"3ef4f543-7093-4a3b-bcbb-09a145948ad8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A3", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
     RowBox[{"Opacity", "[", "0.8", "]"}], ",", "Black", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{"A1", ",", "A2", ",", "A3", ",", "A1"}], "}"}], "]"}]}], "}"}],
    "]"}]}]}], "Input",
 CellChangeTimes->{{3.8872608860153418`*^9, 3.8872609191053457`*^9}, {
  3.887261322085552*^9, 3.887261329018858*^9}, {3.8872613861665983`*^9, 
  3.8872613903108683`*^9}, {3.8872703783034763`*^9, 3.887270390085464*^9}},
 CellLabel->
  "In[1031]:=",ExpressionUUID->"1ac69b09-fbfa-480c-9cac-1468a7c5afb7"],

Cell[BoxData[
 Graphics3DBox[
  {GrayLevel[0], Thickness[0.02], Opacity[0.8], 
   Line3DBox[{{-4, -2, 0}, {-1, -2, 4}, {3, -2, 1}, {-4, -2, 0}}]}]], "Output",\

 CellChangeTimes->{
  3.8872609199758787`*^9, {3.887261325262491*^9, 3.887261329320423*^9}, {
   3.887261387694889*^9, 3.88726139061055*^9}, 3.887270390651692*^9},
 CellLabel->
  "Out[1034]=",ExpressionUUID->"84182986-3967-47be-8948-a6e0ee06a97b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1A2", "=", 
   RowBox[{"A2", "-", "A1"}]}], ";", 
  RowBox[{"A1A3", "=", 
   RowBox[{"A3", "-", "A1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"A1A2", ",", "A1A3"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Area of this triangle is \>\"", ",", "S"}], "]"}]}], "Input",
 CellChangeTimes->{{3.887260929453294*^9, 3.887260954707103*^9}, {
  3.887270394266199*^9, 3.8872704047522497`*^9}},
 CellLabel->
  "In[1035]:=",ExpressionUUID->"f89fdff6-cfbb-4701-a03a-bd6de4890d8a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Area of this triangle is \"\>", "\[InvisibleSpace]", 
   FractionBox["25", "2"]}],
  SequenceForm["Area of this triangle is ", 
   Rational[25, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.887260955122055*^9, 3.8872704071961308`*^9},
 CellLabel->
  "During evaluation of \
In[1035]:=",ExpressionUUID->"e78e67c9-3f82-4ebc-9b61-400f134f9405"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LengthA1A3", "=", 
   RowBox[{"Norm", "[", "A1A3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   FractionBox[
    RowBox[{"2", "S"}], "LengthA1A3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Length of height is \>\"", ",", " ", "h"}], "]"}]}], "Input",
 CellChangeTimes->{{3.887260976008155*^9, 3.887261039237378*^9}, {
  3.8872704091843147`*^9, 3.887270421877221*^9}},
 CellLabel->
  "In[1038]:=",ExpressionUUID->"8141fd62-17cb-493a-8bac-8a4166be2114"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of height is \"\>", "\[InvisibleSpace]", 
   FractionBox["5", 
    SqrtBox["2"]]}],
  SequenceForm["Length of height is ", 5 2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8872610400588923`*^9, 3.88727042262049*^9},
 CellLabel->
  "During evaluation of \
In[1038]:=",ExpressionUUID->"71226e3f-5531-4231-be09-d57c99586114"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A2A1", "=", 
   RowBox[{"A1", "-", "A2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2A3", "=", 
   RowBox[{"A3", "-", "A2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2M", "=", 
   FractionBox[
    RowBox[{"A2A1", "+", "A2A3"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthA2M", "=", 
   RowBox[{"Norm", "[", "A2M", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Length of median \!\(\*SubscriptBox[\(A\), \(2\)]\)M is \>\"", ",", 
   "LengthA2M"}], "]"}]}], "Input",
 CellChangeTimes->{{3.887261116461738*^9, 3.887261166037222*^9}, {
  3.887270426026486*^9, 3.887270452586385*^9}},
 CellLabel->
  "In[1041]:=",ExpressionUUID->"bb6a1d35-266c-4fac-b1f0-32c1b4878fe7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of median \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)M \
is \"\>", "\[InvisibleSpace]", 
   FractionBox["5", 
    SqrtBox["2"]]}],
  SequenceForm[
  "Length of median \!\(\*SubscriptBox[\(A\), \(2\)]\)M is ", 5 
   2^Rational[-1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.887261167034999*^9, 3.8872704531390953`*^9},
 CellLabel->
  "During evaluation of \
In[1041]:=",ExpressionUUID->"cd9fa5ac-3b2c-4b65-9d2e-fedc9e13c1cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"A2", "+", "A2M"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Coordinate of median is \>\"", ",", "M"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8872611811448107`*^9, 3.88726119119867*^9}, {
  3.8872704564727993`*^9, 3.8872704582637463`*^9}},
 CellLabel->
  "In[1046]:=",ExpressionUUID->"d66bf4f8-1488-444a-9fd3-4677a858db67"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Coordinate of median is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", "2"}], ",", 
     FractionBox["1", "2"]}], "}"}]}],
  SequenceForm["Coordinate of median is ", {
    Rational[-1, 2], -2, 
    Rational[1, 2]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.887261191509326*^9, 3.88727046147681*^9},
 CellLabel->
  "During evaluation of \
In[1046]:=",ExpressionUUID->"c478e4ae-d928-4f71-9a21-7ff94b2970be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.02", "]"}], ",", "Black", ",", "Dashed", 
      ",", 
      RowBox[{"Opacity", "[", "1.0", "]"}], ",", 
      RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{"A2", ",", "M"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"A1", ",", "A2", ",", "A3", ",", "M"}], "}"}], "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(3\)]\)\>\"", ",", "\"\<M\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red"}], "]"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8872611959232883`*^9, 3.8872613088686943`*^9}, {
  3.8872613464013357`*^9, 3.887261352093629*^9}, {3.887261405737729*^9, 
  3.887261437872031*^9}, {3.88726147320765*^9, 3.887261478131254*^9}, {
  3.8872704657566853`*^9, 3.887270478565816*^9}},
 CellLabel->
  "In[1048]:=",ExpressionUUID->"c69f224a-673a-420c-a657-8373767b13d9"],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0], Thickness[0.02], Opacity[0.8], 
    Line3DBox[{{-4, -2, 0}, {-1, -2, 4}, {3, -2, 1}, {-4, -2, 0}}]}, 
   {GrayLevel[0], Thickness[0.02], Opacity[1.], Dashing[{Small, Small}], 
    Arrowheads[0.1], 
    Arrow3DBox[
     NCache[{{-1, -2, 4}, {Rational[-1, 2], -2, Rational[1, 2]}}, {{-1, -2, 
       4}, {-0.5, -2, 0.5}}]]}, {{
     {RGBColor[1, 0, 0], PointSize[0.03], Point3DBox[{-4., -2., 0.}], 
      Point3DBox[{-1., -2., 4.}], Point3DBox[{3., -2., 1.}], 
      Point3DBox[{-0.5, -2., 0.5}]}, {}, {{Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{22.656854249492376`, 13.45685424949238}, {0., 0.}], 
              Offset[{22.656854249492383`, 0.4568542494923813}, {0., 0.}], 
              Offset[{9.656854249492381, 0.45685424949237774`}, {0., 0.}], 
              Offset[{9.656854249492378, 13.456854249492377`}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"M\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{16.15685424949238, 6.9568542494923795}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{42, 42},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {-0.5, -2., 0.5}, 
        Offset[{-3.336870691729612, -2.1954660363577165}, {0, 0}]], Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
              Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
              Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
              Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(3\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {3., -2., 1.}, 
        Offset[{-3.336870691729612, -2.1954660363577165}, {0, 0}]], Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
              Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
              Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
              Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {-1., -2., 4.}, 
        Offset[{-3.336870691729612, -2.1954660363577165}, {0, 0}]], Inset3DBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{28.656854249492376`, 18.85685424949238}, {0., 0.}], 
              Offset[{28.656854249492383`, -3.1431457505076192`}, {0., 0.}], 
              Offset[{9.656854249492381, -3.143145750507623}, {0., 0.}], 
              Offset[{9.656854249492378, 18.85685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             
             RotationBox["\<\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)\"\>",
              
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{19.15685424949238, 7.856854249492379}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{48, 51},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], {-4., -2., 0.}, 
        Offset[{-3.336870691729612, -2.1954660363577165}, {0, 0}]]}, {}}}, \
{}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]}]], "Output",
 CellChangeTimes->{{3.887261302214377*^9, 3.887261309313087*^9}, {
   3.887261353187018*^9, 3.887261378328904*^9}, {3.887261411526208*^9, 
   3.887261438237959*^9}, 3.887261478659762*^9, 3.887270481085*^9},
 CellLabel->"Out[1050]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2muvhRcdOMq4+wbuTVLgnsYd++f7ZOJeHuM2zt5m3E3lXhScv3Oyx48ZvZ0A
2CVOUnJZEwDXAOdiD3Mu4DqsGggGz2cakvMQoSZOrMVKs3XbAQY4cUo60Cox
/eUeDw902HZOmbk9f1uL88oRWVH/isw8w52nbzHacw68H1yNmwP/edu1rblF
LURZGHzjf0SAGTxmsmINOepDL64bwLldYS/Mr504bcOUYwbeDgK4MmoI/EAN
PJ5UrcoEvlsAHrvSaujn9hcPvv6Du533jfYl/gnv5hn48exddyot8FD3Nrzt
gV9JNfUk8G3hff80cLh2cCbw3ek++MrXIuBKCzRwNXwR8FYvAo7j+BwIcKHh
hlOvAehP+YUHloYtmoxTNTDiJNuTnAMcmolzhaYLOvW/D0B8gw3UuYEG3/4V
kGnJq7kphnxSaFx5qDK4bbzFZ8vo6KgXbETDn2+MSHtUw+9lwidfdTTl+cE/
ZVaIcGC22HSoAZy2DrRLdLgRDKwrujA0pHekGwsvIAUs+mOLFy9ep3jhTWJA
iVeLuQZNu5abV+J7aSZNPPUzw608r1NBMLGc4If3WSWe/PBO89my2mCXp8On
LWqKOo3vQM/HYVM9sq05WmCQsnM1KUdmkhLtco/HFpEW51MDrBRVzYsa/mm9
vRmbTuSFvUBwch03ri/9btGiRU8NmCF26N3zgyV6jngHZa8QejTPoGwHjTWe
FBydSVm0vT4elaZQMSqvRuSnem+jTJmPPFAIqaNiUWvJTXpkZkhqpOzYBmgO
8PPCDjvsAIw1DLIwd3mukYU6KghU9tkisFtN4MsyCaTQVjsV6sDOFh3/h9cw
xordVZsrFbMYx3d1WILjy+XOOsLcKyLu3sG7T/quC+Lgis9MReL4mL6eJA47
69IyU3KucVwmU9vZhLuixKEe3mrxphrl2LCq8QklKn5Bceu2RRf8DROvAnmp
AUuNMBfxvuv8IeT0S+Qs1qjidaATMslZZJPjtJHPplCmi5RDOz+KnNIWzXvY
ER63eYKcYm/JmZ2nhEo5y6UYm1fJ2GK4viBNEQi/OpOiimKAaXG8gjdV4+Ga
d5YURfiIMXCvIBvHP80xoUdV/DwzeJn8tHwCQdvIjLdO0EX2LjP0bSG8D9n4
f1ImmfN0MbHd72ri0GK9JlzbYpKJLsR9OrRSTWKTCAPyJpYtWwavwTQE3usT
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
ES6U2f3w0TcrhMTw90glkEaG4lLHixdTnJ58yMByjoGlkxS53rvrrrv6TjZ+
mPoaFhB/WpUY0iqOApEtc+m1TnT8F59LryYm5wbZnVEYKIuXve+k4hWQD/zk
Jz95nJ9Z756S3peyN1OyvxBkT3YBCnS4WJUyZh+ka8oPxgdV11BEBBAJ0XAk
b3r00UdB6IYhb8OQdzrdB+L58Q93H4zAP56zdUh1BoqxyxiVN34fMIDQ6mOr
L4SQcjeDjqxwstfScm+6++674abHV65cWTRBNpT7aVtupfu0dOVCU8o+3pqU
G12WWKFB9okNGzbA72IRXXNC4aep8P4ENZeVxkO2mMZcl9XoJiWoEfyIEOWO
83NiJZFOICByy+bNm/HTAoMpFOg3GVpKo4eLfSlLd7Mh0+VpmUAeIAl+F2NB
Jvg+/C7acK0GH+kbDbgK0oLUcBm/9KuMliVzximTJasmHpzjZX+zIXddyw2v
QbPiu+OW5DQavBWuQR2qPO5p2A6jcO2xDEjUu1xoSlm6G3Xb4Kcrh/cY5Lyp
ryEfKHsNxMOu9LNhaku6IR9P4A3Z+4Iqe2f8KoPqaay23NiC1pajy9Ho1KWu
JcdPHXh/JMjhxvCihtLW5QSTqXSBMmW2bjDE5gVp1f2nGj2LThBvOSjwPzea
wX+SYj+UoQSHkcjRQ6adXovHnHkX+B2GHrQ02Sgv9eKGbACvBXWjcVDkH2eI
TIlCLiqmbNr1k5NXsUwyNWN5Sadp8u6YxzvRtjwwTJMpFhE/YAqFfXemsG3d
yVEgNGc4V0Odrntb9i+Zqkpn+3MIrtTu+ETEmljOVgJ1iENpnaQ+zoIP/5zR
kLT26pKglAG6LkcAyUhJgO9kCEB51C5RSZkZbgjlp1qNM6K1Rlk9lOObwzSE
QvPy0aXX8WjpHnGaK4Sr3L2CEJsytYLCvjKAJrWiT6X485NS4ozq3k1TXrh2
f0abUFzNRcBU77421O/974r6nSeANGD992XUTzN89+wL1WE54Ua5cFb96K9/
cVi780PAj7O5vmYydf2vzOblJ3JyDoerDmFfPZn6PpfBIxXh8itU3+LhWnl5
ybo+k1HXG6mM1aEu72y+ZTJ1/c2wNiP/mFMLSm12Rajf12eZL6xLPPCnss3I
jSzElg+vj5drHa2uTxzYk+SRlKA4WZeLdV0W6vf+S7KuD2fURZ2ZF59LVF4y
meo+OKzZqMHdIqialvGh5moQTlZ0S2ab0TkUbtFS6f4bJ1PfTRk8UlKTW3FU
un9xui7wOXWU/IaMumiaw6NEqc3wwH7kGy3+XsNahdiU20y8tl2ki9o9k3eK
DfC2Rq2/VsY5lr08AzevMbzaxv26VNE7ZhRNCRluuUOpJm8EUMMtltsNzMaT
bCKNbAuvUWj9Oy8U6sdQLJSS/ofGy2mtxsXBVdG8qK6GECx6QQYPdIYgR2VL
FJ+TKnrbjKJpfdtFGV2xKPLZqXJnhnKTcQwadV0EUGkbB5fVqIPl8tJvFcP8
EBimU+VSwd/jqaJHM6j4e7r/fE0FQj9LwwjltnW5ZtD0K1Tu6wyteHWq3HoG
xeS38sECmmLu5GqEmCizWwotfoOKvFCz62h4lVGqiLwmif02lfp6TSwKyqkU
ygo/q4uU2D2ndOa52zaisFs7DX+fQSdNDt24oOITpxlFPpEBnE6FdsOo0ihM
rkJ79NuMgn5EBV1iqNApviCK1FWMKQ9SKZcapLFXo8z0f2aQRsEfdoBKCnOS
UerPMuD+lEq9wlAYTlxVdv+RjCIJjIs7KgZXhyK91X9wGJd0Lp6L+yltYa9e
2c0fhfsqB+lfU7FXGRpzvFHsAxnI6egwN4dRS3/HGUX+S0aR1J3cue9KkXhq
qCzwPw0jk3p88VZbi44xivx2Jp90AJCbHLtSUXNETMHb3m9lgP+/VGTf0KQj
jSK/nlGkMPmF2O3hNeoI3Xb46f5hpIrxyU3qlD4dbhQqHnVVSasYU53TrCZf
HNFTBvNLuUSQG1C8U5OJ5faMcv82t1xeRKb5R0nLDjWK/lwWx7yme72hYxjs
xjvFEzOHM0s+IR9IqFXsYF/iXbm46WQVngtpxeLlDWWg/zq3XF6HvMHm80Cj
6I9l8cnrhDcaesXLYsr6i+dtD2eWJjSFWJLyZVvPjLw9lwuahPFpoCUu+Awc
ZWdvzS2aF9duNtRrX6Pcm7I45uUtMWf3GsYL5FtkoTdMhmMi0q3pukk3dirr
oW3X5xLBC0i32RzvZRR9XW7RvNDDeQBK5VZqVcFPb8/imJdibtcFYKHWs4je
OhmOafDiY45LXOwWcETLgBlc8OIHdytXLP7fegLIFbnl8oLGRwJMr3Kc/KZs
7yWh3KT3ieXyOoV4KL3//3KjXJoyDJ3KY9G0A4LDECWWdzZKvzCXDV5MWG9o
XDiD/vzc0nhd4E5D1fjQYnXUxtm53HK8/+M2ActC0d4aj1PRlbNMLJoiDi59
VHkm2xvlnplLBYfxP2moWZeuKQt/ui7XnMBjuRyyFxnDnqqlRrmn5FLM4flP
2RTzqWjKwp9kU1GmmCZ68pEzXisWG+WekEsxR90/Y2gbH1CpBg9arRpmLTm8
vsHmwTqD8Mhcijmazls5lKrNN8o9PJcHWoFkL1Gr2lzNDX46LLdcjpB/3ih3
W6Pcg7L45VD4PTa/fKKPsuziEejDByTy1tzjqV3R+J1ZRtn75nJBbk9xr8aN
5YrDdLz93Su3XI6Gf8GmY7pR9O5ZNHM0XDzH2evaNKNQcXrAcI5piIufpYzf
wY0ZKMXOuQzcSaX9vcEs7xZQY8b2ueVyEPw+m9nRULS37dtlMctB8C8bGjZi
FCqOZx3OLG2E4kit5oI3hSnjPjeXC+ptPFcvRatbRtGzcovmQPjXDEXjNFll
3KdlccwhcJER4TXMel6JOBxiOMfUcBwP0Rzz+QFq1Igi62kiiAF+EG8r1je4
CN9r5hbHIXDKTGlJNXODBJRBmwsbsghPIoe7xUNn4ZYfVpLzXfpOsc3/A5OO
630=\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"5aecab0e-12ee-4ae3-aa59-cbf1190d51ca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "7.4. Line and plane in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "be61ccf8-5a13-4b1b-a21f-1e7bf16661e2"]
}], "Subsection",
 CellChangeTimes->{{3.887261549469442*^9, 
  3.8872615588185*^9}},ExpressionUUID->"c5a43b40-4df4-483f-b17c-6c5bdace6ea3"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Find intersection point of line ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["l", "TI"], ":", 
         FractionBox[
          RowBox[{
            StyleBox["x", "TI"], "+", "2"}], "-1"], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            StyleBox["y", "TI"], "-", "1"}], "1"], "\[LongEqual]", 
         FractionBox[
          RowBox[{
            StyleBox["z", "TI"], "+", "3"}], "2"]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "l:\\frac{x+2}{-1}=\\frac{y-1}{1}=\\frac{z+3}{2}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "57aa2567-a51d-4f5f-a6b5-d025c55f0979"],
 " and plane ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"\[Pi]", ":", 
         StyleBox["x", "TI"], "+", "2", 
         StyleBox["y", "TI"], "+", "3", 
         StyleBox["z", "TI"], "-", "2", "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "\\pi: x+2y+3z-2=0", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cd7decc5-5215-4b67-937f-0fa4fc795ded"],
 ". Display plane, line, and intersection point."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.88726157140987*^9, 3.887261610682838*^9}, {
  3.887261656971117*^9, 3.887261703493775*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"dc3d9f57-3740-43e6-89cc-b010bd2dea24"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y", ",", "z", ",", "t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "2"}], "-", "t"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], "=", 
   RowBox[{"1", "+", "t"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "[", "t_", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"2", "t"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "+", 
       RowBox[{"2", 
        RowBox[{"y", "[", "t", "]"}]}], "+", 
       RowBox[{"3", 
        RowBox[{"z", "[", "t", "]"}]}], "-", "2"}], " ", "==", " ", "0"}], 
     ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"t", "/.", 
    RowBox[{"sol", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Parameter t at which plane and line intersect is \>\"", ",", "t0"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.887261732232297*^9, 3.887261845361315*^9}, 
   3.887261879708352*^9, {3.887262214293644*^9, 3.887262225357398*^9}},
 CellLabel->
  "In[1051]:=",ExpressionUUID->"79038adf-c41c-4971-828c-754b0b8b27c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Parameter t at which plane and line intersect is \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["11", "7"]}],
  SequenceForm["Parameter t at which plane and line intersect is ", 
   Rational[11, 7]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.88726184602246*^9, 3.887261880048772*^9, {3.887262221895911*^9, 
   3.887262225683086*^9}, 3.8872705933895884`*^9},
 CellLabel->
  "During evaluation of \
In[1051]:=",ExpressionUUID->"24614e0a-8b46-49ff-a017-3f4a9b6ba324"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t0", "]"}], ",", 
     RowBox[{"y", "[", "t0", "]"}], ",", 
     RowBox[{"z", "[", "t0", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Intersection point has coordinates \>\"", ",", "G"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.887262365323004*^9, 3.887262390926107*^9}},
 CellLabel->
  "In[1058]:=",ExpressionUUID->"606d5b70-fad8-4b06-b58e-8930a7ae477b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Intersection point has coordinates \"\>", "\[InvisibleSpace]", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["25", "7"]}], ",", 
     FractionBox["18", "7"], ",", 
     FractionBox["1", "7"]}], "}"}]}],
  SequenceForm["Intersection point has coordinates ", {
    Rational[-25, 7], 
    Rational[18, 7], 
    Rational[1, 7]}],
  Editable->False]], "Print",
 CellChangeTimes->{3.887262391463559*^9, 3.8872705954921017`*^9},
 CellLabel->
  "During evaluation of \
In[1058]:=",ExpressionUUID->"337cc7eb-973c-451b-b4b3-f4b1c90bed37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pLine", "=", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"z", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "1.2", ",", "1.9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Dashed"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pPlane", "=", 
   RowBox[{"ContourPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{"2", "y"}], "+", 
       RowBox[{"3", "z"}], "-", "2"}], " ", "==", " ", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"ContourStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.8", "]"}], ",", 
        RowBox[{"Specularity", "[", 
         RowBox[{"White", ",", "30"}], "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pG", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "G", "}"}], "->", 
      RowBox[{"{", "\"\<Intersection\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red"}], "]"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"pLine", ",", "pPlane", ",", "pG", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887262400698449*^9, 3.88726282586789*^9}},
 CellLabel->
  "In[1060]:=",ExpressionUUID->"a9f8a9ba-8935-474e-b613-f6f5716ef854"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[0.01], Dashing[{Small, Small}], 
       Line3DBox[CompressedData["
1:eJwl0HtQjWkcwPFz6ZzXub5tLolFBiulC4UIzy+X7Si2I3Y3Nu2K2rTICKPc
2rLSuqxbsycrjlwS1Wy7CSnvT4utTEmlQ4p0it5hVu4Ju/uO3x/PfJ75zjPP
85tnaFR8WLRCJpPNkZZSWk5rtv6WmalBUg7Lv20e5utrFzybNrprD2qQlIPF
yyWvwNsuBMHaC0lSJ+VQ8eFLP/fRdmGjPsb2zW8aJOXgeujGjKEj7ELH8aDe
g7M0SMrh9u3yaN7ZLpy7pd2RbdUgKQdTWG7O4542IWLC3qQzORokpXtmrvM4
Xt4mnOzJWlB2VoOkHBrcHX37hrUJnu5hvViDNOdHpTkLVpZxkQ+EKv/xXhe7
NEjKoWjiF7s/S2oVri3rP+uUXoukAk4tSVy5Ydx9oXh6xvwX7lokFWC5cqa4
ytwilL4PtPkHaZFUgL9f647VO+8K5yLTg5ujtUgqYE+fuK8Dsu8In9hr/uhK
1SKpgK6aT+pfok1I/nzGvv+OaJFUgMxy8a5a1ii0h82PWn5Ji6QCKm6WNE10
aRAiph7IrW/SIqkAGFAaczWsTvCbXddx5rUWSQXg5LvZgRm1glx5xqmtjw5J
JbQeOXK6bEm10Gb5s9hpjA5JJfxu3zkqt6VSuGD7KuRoqA5J6XyvERmNumvC
U//uBusKHZJKcG3r/q4jpFyYlFh562C6DkklJBce3RWcWSYkRY37+3mODkkl
WBfnjP1CWSzUuN/0nnlFh6QSZJlxzrEt+YLzIS79VZsOSamLS7rXabME9J5s
6yfXI+kAsu535Qkr5rJN2dZDYwfpkZT6x00W87l0JCwvQI+kA6Dz/dBRjfns
9fmaLa7heiQdwDql4MWQXsVsUOO7o6o1eiQdANJebY6VlzH/Q38VmfbpkXQA
x7QES79Z5WxZ4MWp2wr0SDqAq2es7e/aq2z3L3MuDK3WIym9+6xw1ITjlcxJ
ds/N67EeSQcwK3Dg1ehqlhd6mB/HGZBUAfa0vzUn1LJJprcPM0cYkFSBNfVA
/OEFdaxlyNZxbwMNSKqg9kNg+P4hDazVxZBYuciApAq6s27u+bX5FrOV+uS/
2WBAUgWrqnX1SYKNtU/dGu5qMSCpAv9/pm9Xpdxh7ctWvzxZLPWPqsB0+LOg
+Li7rCdhD+dWb0BSBacYl5g8toWtsubxA54akFSBjKvqsT67x5rWLukVZzAi
qYbagoHTzT+0sgXuweuLRhmRVENF2NzyY3MesOq067cjTEYk1RA7NeLaw2lt
zMqFeK2LMSKpBocp4asLfe1se0xPT3qKEUk1zPCrt4X2aWcxK2ecf2c1IqmG
0QnDylu4Dhb+5aUn35cZkVRD6enn0exxB8uNHN9v5h0jkmowvfqj0K3qIXvq
OMsn+Y0RSTWsTzOlyEsfseDsHZfP9uaR5MDstEhfkNXJhmcEn/PtwyPJgWvu
/JKso53s3zRNfqHUSQ6esNmxu050ssIVaZb8vjySHGxfEXBleX4n6z8xNf6E
M48kB1jhstGjrJM9vJE0KGMgjyQHPlsaH59q7mQpH5YlrhnGI8mB45PQ68cG
iiyiyy3+udRJDlpTghL3DxHZePujpauG80hykOfCRqYOE5lYEW1ePoJHkgNT
kFdqlIfIzAcWj1w6kkeSg+RsfcDQAJEN9lhwa54HjyQHXeGVpw8vFFn3oP7X
b0qdlOZ/iuG7I0VW52jD0NE8khzs3HZevTlKZD+9np8X4skjyYFbUU7UojiR
PblsTp3uzSPJwXf8tgGfJonsWhGfeFnqpPQPJzdV6DaLzJpTs5L58Ehy8H7y
2nXvfhTZvF2zFwaM4ZHkwBK3tK4pXWSeyTrzBamTHMTKI5KrdolMnVA1c8JY
HkkO/CzzvEr2iqw1Oj3grNRJDmTeIc25GSIrCTeN8fXlkeSg9uq0nzMzRfY/
FztNyg==
        "]]},
      Annotation[#, "Charting`Private`Tag$299008#1"]& ]}, {}}, {
    GraphicsComplex3DBox[CompressedData["
1:eJxlXXdcze/7Pu1ssgkhQiGErM6JhIiWnYxEVBqUlZaGPVLKiNJARolIaCmS
0k5RKSuSyig0f+f7+Z3rud+vTv94vS7367rv537G+1nXc4ZvsjWykOTxeDGy
PJ6U8F91nxUz813kk9YseaayxZUnUHo8NV/xSz7fVOdsJx6P8IX9vBPbAvL4
sHfP/v3HwoUnKGib+G8or4DZrzrnL7VGi3DY////8wSaxw/rrosrYvbAN1SV
TOZbFvK/KNVuynclv+B5aD7Su6qN7LtOmbFmv3wxw2EPHuCRMiY19gniPDfi
PHu6tIuXC7idXdGNigW5LE7gmv766l512cy+VXneP39XCcGhRbXyi5ZlMXvg
xa0nKrtGZTD7pacl3t9qlxCMiZkYn9M9ndkDd9uS4+u3I43FCR74BQ578M8T
1Oc2u3RicaIegefNultxoI3yABx5Q720lPg0NbsST0d75P9j8Rebc6tK+FmK
T4b0bCce1Atw8KBewINyIc/AUS7kEzywR30Bb7ZXKDysJcHiBA6ejnkLbk3M
SHOVZHlGvQDPGWRvtepVCrMf8P3mwbI2SYHdmZn1E1sSmX39ff2TuQmEw/7H
Npe7Ze2SguBDhqtULpI9cMEP305Ra+NZvcMveDri4AEOnorVBfHTBscy/Llb
7fk0F/F45hXNvtjgKsXsEQ9wJS/VYufYKGbvN7fZsxtPWrBhxe2ZxzTCmT1w
wbJNM6dv9Wd+wQN74LDn2bWUuC6fweoX5UL7d2iNv13VTuVC/LAHjnpB/YIH
7R847FG/4EGcyD9wxIk8ANce2XXPVy0pFg/4t6+2sm5wEcfBj/oCDn7kv+eZ
4b7Kbp1Ze0a7Xfnv8DZlV8LRf4ErX7N/4e9C9pWFK2I12zuz/oV+B3s2Xon6
NezBj/4IHP33sUug+4NrbxgPcPR34BgH/JQX+hf+fcvKC7wjD/oj+jv8Ake/
Bq5fnvMkJIHKaxUzUkLftQuLB36Bo7yIs+FE/ZKN7YQjHuDIA/IGHjbeivI2
u2GV8sa2LqxcW26OaQ7kVTB74AK7q497nStn/IjTMuPPtV8LyxheaVqyYymH
B+UFD+zBj/ygPQB36qMec6uN8qO85NFYfTeyBw6/wDvWO9on2i3qi/V3UX+B
/eO0scu7tVP7h/2ZkxkbJBIJ975votuT15n1C+DgQf/F+Awe4Bj/YY9+jf4O
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
PP6xZ13vl3PW7/Ab0XdQSCJfRix+xXdm019w9uWAF8fv4j9pE+8XObeOPp2Z
TP0Ifnd05umn8Gk9Ar8OXY7mZXLWv4j/bcPNzFfasmL5ufOuX3umhDjekL3p
fTJn/QueJpfX7d0TCUc7We51s72qjcqLdhVesnHrH85+ArvvVPdH4x9nHQr7
OY++5KZx9hNgf3qwtfw/zroS9o6pLWV2ieQX/cjd5eyiYXxpsf44NbUwtCWV
eFh/v9Zw8IWnON4sc0Kymbv+FfHsCtyY08JZhyIe2a7zzudw1vuIf9KIkq15
nHUo7P/qSfThtVE+gT+f/sAmh7OuZ/emVFfuCeesNxGnp1T33sP5smJ5+BJx
OrSGs95k5dVzHrQ1VZzHVNN2agF3XSziKcqYK1XEWVfiHERFJ3K0vjudh+Kc
wmBfp8GrkwnHuUbrUxVDE0/xc0CJijVhAamEw/6B5+9ZFlo0TwN/YknYfRVP
8XPVQ05HV49OlhI791wvULMY5E44eOrcnPZN1hI/39wTbdnDQkJSLP4ZpaXv
N6eSX8Qf8vm5lL22pNi5cE9d88t8zjwQuPZ3DXO9BPKL/X+jJQOPR+nQPJOd
yyiFP4xyFz8n7fQjRvlAAuUH5wKPVkjffpRM9tj//3DM/MpzCVrvsHeQLoaN
8OTMb9nvsMe9dnyeSjh77+K17nSbNvH4fxl51xxKpjzA/sjCCy+ddSgPsN8U
M/zQSs58GPGsWWffzV9LUqxcgw9/qvCToPUp8NJ7q+/5pRIPe18rUacwWFtK
7Nx/4/TJOgrCcRv9Dvgw62DNQTo03wae6NAt8JdwXt3x/DT6ZrX+ZM48nJ3v
X7M+1s45bwUuXbqqS/sBmveCf8PefX8y5xCOcg1JmbJzQQJ9F9jv18ubd7nI
mecAv/liYuPNBMobcJuG0Bc33SkP2Oc8qyqVEJdMOPu9dcfhv+9y5l3YV1xw
2mTBn1TCsd+l+XJS61QZOjdh+8lmO/sM9aL5Fduvm17/Sd9LQgx/0cVZYWmK
+DnLdYPi5j9tND9hv/OofyntA2d+BZ7qbbkDVNKkxOIszr1k2sOD9gdgP1Zr
3XwVSSmGg19Cvs1gcArZIz9mE91dvyVLiJ2z+FW+K33JmS8BX3bl5vPSBPFz
hOuKHj/uuYjv2yds3BSTypmHAB/mN+9TEOc7Dv6mQ4I3mZzvL+IfscV45W/O
9w7rtcSnBgWVSbSuZ7+D86n29AfOeI51WVOz5/pPnPEc65G9P9YVfhJIiPGc
6mVu8YFzvwW4+oCc1Mec8Zn9XtKck7yqVPF9gFEKg8dXccZhxDNy8qqjyQLx
dXfUcJ0LPdJ4Yut0eZUDnUOTxPcBdEa0bOrtIb7et9X0Ve+bQjhbxy21m9Z7
vvg+wH6tBenVnHsjiMdgzJ2mL9ri+MSKhe/Dk8T3N2Ztf3ShWkd83yDcpMy/
hjOust9Hm/bpwEoB9Xfgp85WTavljIfsd1W27zSv5YyfbH+mYGj5SU8a95B/
z8VnJ/lx7oEg/080P2XZSYuvHz22x9cFcO4DwG+008zQC5xzasxj1aW//O6c
RPFj3tvk1mlSPWfchv2ogMttPzjjGOalqtJJVk/41L8wj42OSLceNF98/Whw
a2rmL864x+Z163tr6XHOf9k9uimXt+t5iK8Hs+9fv6LLOedl897g3oU6XuLr
yqZMvt1CzjgJfG27Uujw+eLrRJn833JD0yh++LV90k9SiXOey/QOV900hkoS
Dv7z+Tezh3PGPXYffotb0EjO+Ib81O0zOTfIg8Y31MuafRdz+6VR+0e9pG5O
eDlgrrj9uaVj2vpJEo74t6zwK9+RKCW23h90unqLYgrZg//b4QbTy57i6xpr
11rFUM65WJhjw2m+M+myUb+dZAd47pIiHTf8nv3j9l1DknTTwHuf82/2aCFd
M8YrnZFzBnh7kK4Z/XeLTUnOJGfSI8Pv5yz9MhcP0gvDfl3NeKuSZtL5orwz
rpyOGS9Jul3EIxGgpZ7XTLpa2O+w7L90lwfpVcHfaUC1/zhn0skinrIlV3aP
liSdKfhvpzStGelM+k3Yu2gaayk1kt4T48lvk/HyTVKk68T8JGbxrKoLTqSj
RL2kZ11RKXEmXSfmRZ+615a7OpFOE/aDrM48eChJOkq2X/cp/tWLRtJFYvw5
NTOyU24j6R+BX935+l6dB+kfMb8yt930LdOZdI6IZ23tfa9dLaQ3RL0P+n7P
96Yk6QcRj8/DttA9TqQ3RPzWP1brb/UgPSDqRW1zj232TqT7g31r4HM9mxbS
98Hv/XkRSftbSH8HXHbQzug0Z9LfIf4bqQcdE5xJHwe8Nmz8mcuSpI9D/G5/
YmYPkyS9GNqDoU0XJUVn0nmhPfzur/ipjzPpKYArX3kqMUCSdCLgmWN1z8Rq
P+mhMH5O+5h3XFaSdEawrz5r5/q4mfQ4aOd9hv4bfc6d9D5s/2rk/qg7zaTr
gf2Dfx4x/u6kx4H9vBEj5IPdSV/D9tlq1sc/bSYdDXhCtZc1ZDSTLga49TP/
gIvupFsBz/MlBc96SpL+BeVS+mAuNbCRdBnoRyHzintsaSE9Beq32mD5I30P
up+P9pN2fFd6r0bSC7D1VFK7/RoPuk8O++zuShO2O5F+Ae1tf+iSOF9J0kGg
Pdg9VP+1yYnuw8Nep/ZLgVkL3W9HnFcMLCS8Jem+Oni+nL4xRtuD7tsjnoAU
tchuzqQLQPvZqul1vHMj3fNHuapPJle1N5AuAPhsmzm2ss6kOwBPVeC/cytb
6D484uy7WTturRPdb0e5Pn/2uabhQffhEefOdu+0JS107x08xitTZ/xypPc6
8B0c2lxoPquR3s1AnA45e2smNdI7EsDDu5imfnWk9xzYOXjMNP0KR3onAfh9
+/U7xzTS+wPgeX3YqKDIkfSVsA/MurU6y5H0d8AHK5pdtGsg/SDmIW1jk+X2
NJDeEHjv9uvpFg2kcwS+6MDg9fGOpPsD/8AHumVPHUkXBvz/AP3zi+U=
     "], {{
       {RGBColor[0, 0, 1], Opacity[0.8], EdgeForm[None], Specularity[
         GrayLevel[1], 30], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJwt1nm0T1UcBfD7eo8nQslQKpHyKmUligYNhhQh9bJEIZnCM1NCiGfOlDHJ
VPGIMpdCRVErSrFIT7HQCmVIrBKtPt/164+99j777PO955577zm3Qtvuj3e7
KEmS3yAdlmckSbRX4KcKJMnItCQZgWcXTJKpvHy6HYyTOaj9vP5+0Bka8Dvh
5niO/Ov699Nv0JPpvXRr/S2hDbzJn87fx19AL6aP0p/hW9S/jNdWeyidz5uv
vQj/ylttkoX5a/Ar2i+ql42fg4H8n+XWQS4/l7dYrje9BM9TZ56+w/wPeS3k
1+HJ/HEW4Ub8i1x9/mGcq/0o/wo80Jjqsrfg79XoIrMbL9Z3TDYDF9b3C/9m
ei7M0X+Qt4Q+I3Mxrs67mN6mbhV9NdW8HZ/mPWXsn3h13FPcI66srxq+A2fA
Jn4pdcaq87LsN+pU5z8oc1esGXSnm+LOsEL+jGwJXnsoBl2N/9O4SfqfhqW8
u3k96KvUbERvM2Y5fzyvFayi7+EXoW+U+QC3gPn8CbgblOCvwqPlmhv/ccwF
SvMb8IrFGtJN6Dz9PekZ5rEZlzPPr+np+obr2yFbCCroW4OfhU9d63793+rf
RD9Af0SPo2+ju8isU+cc71/IMHYZbwjkyDTGdaE53QR3jPdP/rhsRTgVz8Ic
TtIL+X/He67uwfgw8PPy78Uz4m+HZvQJPIjfzNg6+DXtEfJ56swyZoL2Hn7J
uB+Zh/Hb/Pf5J+nB8V3xG+J6xmxNUu9Gnsx+dbbIvUUvw7/L3AuPydfC23HP
WDf8gf7i9If4W+OHpqW+kfZy4/mH+DnqnIh3hm4os4PfAOfHt07/GM8y3nXe
lcZNpHPpCvQz+KhMK/yD3AB6Bx4u8wivDN7C+wI+g17amfziuDdcQl8a96Hv
MWgEI7Wf4Geq/505deb9hTvhd6EjjJLJibEyHeid5v93PDt6F32OniI3DSbB
OP4Q+evxPrUG8/biZ3ln6Ha4UqwBXRK30D5AZ+POxhzipcWexNsAedBe3znc
AVeEqfS1eIzcoPBwB/MYxT/gWjdEH10Wt9eXj6vFnobP8p/D7bQ/da0zxqXj
T/iFcC/tf+iieI9a/egSstNgWDxb/gi6Pt24YGovifXOjHn/v5dnxhrLLeQd
wTtlu/N24fFCZegxaal3JLJD8Ep9oskqXDL2mCSVy4KboBK843ob1TwtuCjW
l75A705P1Y3v91IYFHs4XiizVeasTAHtnPiMcDPtlfzjeBgMMPZJfJ7XLr5f
PCf2G3oungVV4xnjpWo+rkZZ3BMy6GK4U3xXMqfM/yysptMKpL7peIZ/4O5y
F9QuEuNktvy/YD20C2rXxitgDC8LL4c+8f5HffjJ2H/VfJd+mF863nleRWW+
wofTU3PNp6/nXZek5r1Mro2+q3E3+CvOsNgDoCu/HH4vrkFfg2fAKPP53rW6
xlmlxnntNrF/0V/S5dXYR5fDv2rPoI/h/saWxXNke6tXxHzG4iNx7tGz+f2g
SbxzeKb8aH076Ud4peI8xzW1X8G7Yo83vnZa6qwpp92UvzH2f+Pq0Nv5L6pz
hfYbcSZDS/4m/DlvtrFj6Kpyi5LUHruVv4BfI/YbuC72OZkX6DL0rHgv6AqR
iznTpeiZdB+6KD2VfjnOJ3Uewn35JWIt6Jfo8vHvEPdB3xnnWYHU3txIfiSu
F/cKdaF/7Du8ieY2QO5mXlbUiX+L2Idx/9gH6dbq3RD/NPRmXFn2VqgS9xPv
bZzXkKOvuExL+dvoWvEexz1Cdpz3/Ioxf/ppuhr9gMydcY+QSV+Oe8Z8ZJoW
TJ35Md/B+D5+4zgT43s07yZpqXNnZqxN/EfQveMfg16Hy0BDulnsu/GPkZZa
iwXxvvDXy/eVqU1ny9xDPxrnbJzhUJ//ZOxDUMOYlbwu9BF+Op4S8+N/zR9E
Z9HvxD8JXZVeGmtJr5Vfq902zm/6VJzRsUa8JfRGPNl1R9FTYz+P8zaeNX1T
nM30ZjxdpjrvRzVqJKnvrmWsBf/VOIv1vST3ZZyzdGU6j16PJ8ZZz2utvSHO
0/hvhfH6dvP+A66OYgU=
             "]], Polygon3DBox[CompressedData["
1:eJw13AXYdFX1BfB5Z+ZeaQWk86OlGxVJCZGQUkBCGmlEUlBaQLpDQBqkwUCR
EAkFixIQRRoRW1AQQf/r9+3zf573PHP2Pefemblz7t57rbXPO2nHfTfdZzgY
DE4aDwb5G6wyGgy+m9dpc/DDOTDqBoOHYh8T+1fpr5PxB2L3sVfI+BSxl4h9
1sRg8P7YH8mcNdI/IuNPpv9qXlfP+Ldz7O+Zu27a/bEPy/GTM/+xvC4Y+8yM
P5ux9dJ+HvuDOb5yxr+b45vG3iztO+kfmePr5XXdtKPS/0/eY9mMnRv7xPT/
k3Pujj1dxr4Ve7dc77+xl439qYxN3w8Gi8e+IPPPzfj/cux7safO+K2xH8/r
9LE/kPZA+u9k/I70p0r/toz/Kq9zxj4t57+Qaz8Ye8bYJ8f+XezL0pZJf+8c
/1rO/WleF8v42Tn2G98t9qKxL4z9Yuxfxl5yUHPM/V7OmS79H6S/Yz7r9/M6
TeyjM/+xUR03fmzsR2N/L/a0g5pj7q05P0OD29PfKeefmjkfyoGdYh+QsU/H
fjHjn4i9bewDY38g42vH3jr2IbFniD1d2i+shRybKvO/Gvu4fP/vxJ4y9pGx
j439w9jzxz4j9gnWSq6zcOyF0h5O/6u5xgIZ2zH9gzJ3pcz5uGvFfir9J/O6
dOaen2PPZ+6jsRcZ1JqwNu5Lmyv9azP+p4z/OPak2KfHfsZ3ib1m7Mtj/yH2
D2PPFvvK2K/7fbxn7Itify3v94vYt6f/Zsb2yv35tXWc8Ytz7NUceyjja8W+
KvbJmX9rji2S/g6Zd27Gls2xD1s7sV9I/+KMfyz2abHPzvjWsZ/L+Z+LfXDs
LWM/H3uu2J+0HtLWif3NnPPhvP98ucY7bX0+mP5pmb9YxpZMOz3992XOttZD
7I/1dczY7pl/aK71z7TbMr5n7J/m/HMyvmzGD3HvM/Zm2s2Dmv9wxlfO+C2x
94h9eMYWybEnYs8e+6H0F09bPucfGvux9D+X+W9kfInYG2b+ojm2dMY5jZ+l
/+e8bpHxH+bYO5l7XtpK6a+Qdn76G6Q9nvHZ+IGcv0TOWTFjB8R+JP038vq5
jN+bY//J3E+lPRJ7kuc8878R+yMZ2z/2cbHPir1U7H1jHxF7mHuyXuZfl2Mf
Sf/ZHF8+9l2x37b28x5LpL9bjj+a/jDt2xnfK/bj6U+T9qfYH/LspT9LXp+O
/WTarOm/m2PLtfW5Qq5/S1438vykXe+Zz2dYMf1L0r8+c7dN2zD2xmk/y9hc
+Qynpz/MtZaKvXiusXXmnhH7t/yV5zTjM+T1oxlfwftl/ODYv05/tbSNYh8f
+zdd+SS+6Zgc+3Wu/aNx+d7fpr9Lrn1NXtf3LGbeGRn7aM75ZOyTYj+T/h/z
ukHOvyHH3sjcO9y32B/mP9L/ScbnTf+c9J/L+ETa7rFnzvGP5XqPpu3MP8b+
dq73buzvx34382+OPVM+w32x35fxW2IP0h7My+Gxn0j/5Lx+InPX8TzyjZm/
WvoHue8Z/3eud03m/yPHrov9Xux7XCbjN/mtYl8c+78ZvzH2j3J8jtinxH56
VD6L71orxz87Ln81RcZPyLGvZv5hGZ9VTOFfM/ZA7P1i3xD7htifypwtY18W
+0/pX5/xVWOfF/uajB8de67YG8feJfZRseeJ/enYu8a+c1z+yudZJt/tuIwv
mP5WGd89YwfFfn/szf3use+LvZVnPfbVsb89nnzLBkc0/3pExudOf5OM7+Ze
5HXmjJ+YY0/wh2kHuvc5fmPGN8o5e7s3sf+a/l/zuk3m35lj/8zcY9PmS3/r
HN8j8/t8xq0y/j1rMvOfGtZ6vzv2vzJ3Wms09nI5/v2ufn/r9f6Mr5Fzt8ix
g9O/KeN/S//LOWf22JvF3jlzN8uxg2LfEvvP6W+atk/sb8f+C/+a16/EPjzt
tvTv5ZfTvyr9q3L+03mdJ+93TY69lbHXxfHYn8nr5/2+w4pHx2f8cblIPtNu
6V+c4y/l+p9Im6KthxfT/4H1HHuPtLvkIzm2RfpnZfz59J/P62q53mU59lrG
v5O2ffP3F/C1saeMvXrsi2Pfn9fZM/+KHPujeJm2bfqX5vilfs/Yn5uoa7jW
b4aVr5wX++XYt6ftmP4FOX7RuHwG37FF7B91Fb9WaPnCivluz/ETzd/8Pufe
HXuGlg/ID3ZPkwCskOMb59w1c43NY18b+w/pL5X2+0zZJfazXcX3qVt+sWSu
/4+u8hn+ZanYG8beM/2rM/+1rnz6Ci0+fDPnfp2PzPz32me+VJySR6Z9Q4we
ln+Ub72Uc9fINTZJ//Icf72rdWw9z5p2D386LH/EL/078/8Ue/3Y2+R1z7zf
28PKB+WF/8v4v4YVH++LPZHxv8deu8XXYex/x96hrVcJ7rz5TlNbuzl+p++W
a4xiryaOted37ky9OsdOyfj0aR0fmfE75IvWXcZ3SxvIldKOTPfRzJk65+4b
eyy2Z95msfceVTwRVzaNPWPso+U2mTNN7ENjz5j++hnfPvZ/+RG5U4514/p9
/T7Hxf5V5j48rnznypafvNnV+vuaGCG3SvtM+mfmvN+l//Kwfg+/y59z/pM5
f//YT8Q+J+OH59gc6W8oDo8r35qn5bf86Xv8pFw49vvG9Z1995/EHsf+UuzZ
0t8g87aL/ZXYc8b+lPsee7/YfeyPxt489ip5z41jXxH799Za2vtirxr7B+m/
Nqx4fmOO/TXn/kHeFHvLvO6T81/K6xot9v4l4yekzZ/+Z3N874xvEfvljG8b
e6/Yx8deOOPbxd6Xv8t7vJDx7WPfb/1lfKGM7xz7wIzPnmP/GtR6uNfcvK7a
8ot/ZO7JaTOn/8kc3z/z186cbWJfGPuV9NdP2zn2+bFfTf+micoV5Aw3T9Tn
9vk3GVQusTK/mP4f0z7Gh6Ztnf6PMvZfvibti3KJ2FPk/baP/bfYK2XeZ2JP
G/uA2D/P+FSx72r+4KTYT2bsrWHlm7fGfm9U+ee6sW+LfSpfMKzP53P+LeP/
8Du2fPPdUfnIPVo8vCLnzpFz/tnywbu7Wo8fj/2tzDkt9udH9X18r09n7Ldi
ZOzXXUMuI0bHntF9Hddz4/k5Lu3X6c+Z8ePTfyb9D2b8N3k90fdJ+y1f0Z4f
63e6jD+b9nj60+b1gDzbL+T1hHb+OrEfi/1Q+r21GPuDOf8rGX+kPX9/yefY
MvaP23reSQxMfwbYKPNnGtXz8tOJwreb8uGx58l5a7X1JN+X32+Q+VPFnj/9
dTP21dgfzfxvZfw/OX/RHPvIqPLPt2MvEvtXfOmgfmPfY5aMHyP/TP8DGZ9V
zI79dOzpY68f+7HYc+Q91pT/8xuxH8z4yPX4oPZ518r7/z32VdZX7HVjL5/z
r4/9RuwFMra79Z7+wul/OeMrNnzwzxxbSOyJfWPsN2MvGPvzmf+39OdL//DM
/1de34n9Ic++2CtHiz0v3xB72r7yR/7s4+n/zT1Pf1JeD4s9Kdc/JeMv+W1z
bLrYh7T1PGXsZ9KOaL/X2n09B+6Ve/YLv0nmfyn9X7b1/9xErRVr5nd8yESt
LWvM535RLE//7LQX0t+lq3kzyc1y/SVyvcvaep0nxzaJ/cyg8NEa48IEv4r9
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
/Yg=
             "]], Polygon3DBox[CompressedData["
1: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
CTvl
             "]], 
            Polygon3DBox[{{1565, 244, 247, 560, 1102, 1711}, {1564, 242, 239, 
             555, 1100, 1710}, {1566, 233, 232, 566, 1105, 1712}, {1293, 249, 
             248, 559, 558, 1394}}]},
           Annotation[#, "Charting`Private`Tag$299036#1"]& ]],
         Lighting->Automatic]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0k1LVGEYh/FHm1ER0yZauHLUgpyNLdokRJtcNKBiouImSCMRkfGlRCtK
qU2LWoUIKtpGWgRquTExVNqoLSpC+wSKbx8gUNTfARf3XNf9f+7nnOfMOWVt
3Q2ZrBDCtPoaCyEbl/xcxAX8JiviizyBf/GHLMWvq3X9qr6C/+GV+Av/x0P4
jTf0RTkh5F4IoYdnVKE+pu/i+diPl2QFfICX4wfcdt0RvKofxStmUnyKf1ST
atfhJ3AHx6M9uGffGM9z/xVcVTF+Iv/OT80sYYFsA1/jLedNy4f5PXyHDfge
m/AT1pvp5Z/5E3yq5nmz/BX/wl9ik/4F/nTWZ7iGjbJBvs6fY4u+IzqHvh2X
sUb2iC/wVlzEtOwxv6wG9eX+gwFM6K/xYV7K32AZJs3ve6YH+j0sMdPFs6x1
4qksKcvwf3xTFTv3FlZh3NwdzI2ez7Vu8wNrKTzEm3iEfdYq+TEfxxmsje4r
n7W3js/hfZzHu9E3htX40MwyL+ZvMQ+HMB7Nekc50fs6/x7PAGjETwQ=
         "]]}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{383, 1412, 384, 385, 976, 1582, 386, 978, 388, 977, 1583, 
         387, 985, 1586, 400, 986, 401, 1416, 402, 989, 404, 987, 1587, 988, 
         403, 1039, 459, 1604, 1032, 460, 462, 1428, 1033, 461, 1034, 463, 
         1434, 1046, 483, 1435, 1047, 481, 482, 1436, 1048, 484, 488}], 
        Line3DBox[{392, 1414, 391, 979, 390, 1413, 389, 981, 395, 982, 1584, 
         396, 990, 405, 991, 1417, 406, 411, 997, 1590, 410, 994, 995, 409, 
         1430, 1038, 468, 1429, 1037, 467, 469, 1432, 1042, 471, 1040, 470, 
         1439, 1050, 477, 1044, 474, 1606, 1043, 475, 476, 1438, 486}], 
        Line3DBox[{421, 1420, 420, 1002, 1591, 419, 1003, 422, 1421, 424, 
         1004, 423, 1015, 1597, 446, 1014, 445, 1016, 1426, 441, 442, 1017, 
         1598, 1018, 448, 1055, 490, 1441, 1052, 489, 1444, 1058, 496, 495, 
         1443, 1057, 494, 1069, 510, 1453, 1073, 514, 1071, 513, 1452, 515, 
         520}], Line3DBox[{431, 430, 1008, 1594, 429, 1007, 428, 1011, 1424, 
         437, 438, 1023, 1601, 452, 1024, 453, 1031, 1603, 458, 1029, 1602, 
         1030, 457, 503, 1446, 1063, 502, 1062, 501, 1449, 1067, 505, 1064, 
         504, 1608, 1076, 521, 519, 1456, 1075, 518, 1077, 522, 1458, 524}], 
        Line3DBox[{432, 427, 1006, 1593, 426, 1010, 1595, 436, 1009, 434, 
         1422, 433, 1021, 450, 1022, 1600, 451, 1025, 454, 1027, 1427, 455, 
         1028, 456, 1445, 1060, 499, 1061, 500, 1448, 1066, 507, 1447, 1065, 
         506, 526, 1459, 1079, 525, 1080, 523, 1457, 1078, 512, 511}], 
        Line3DBox[{435, 1423, 418, 1001, 417, 1000, 1419, 415, 416, 1005, 
         1592, 425, 1026, 444, 1013, 1596, 443, 1020, 1599, 449, 1019, 440, 
         1425, 1012, 439, 1054, 493, 1442, 1056, 492, 1053, 491, 1607, 1059, 
         497, 498, 1450, 1070, 509, 1068, 508, 1455, 1074, 517, 1454, 516}], 
        Line3DBox[{447, 393, 980, 1415, 394, 398, 983, 1585, 397, 984, 399, 
         993, 1589, 408, 992, 1588, 407, 996, 412, 1418, 413, 998, 999, 414, 
         1451, 1072, 466, 1036, 464, 1605, 1035, 465, 473, 1431, 1041, 472, 
         1049, 487, 1440, 1051, 480, 1433, 1045, 478, 479, 1437, 485}], 
        Line3DBox[{536, 535, 1106, 1616, 565, 1104, 1615, 564, 1105, 566, 
         1471, 593, 1127, 597, 1126, 1625, 596, 1123, 582, 1116, 1469, 579, 
         1114, 580, 1506, 1182, 665, 1180, 664, 1510, 1186, 669, 1507, 1183, 
         668, 688, 1517, 1198, 687, 1197, 686, 1520, 1200, 690, 689}], 
        Line3DBox[{553, 1464, 552, 1102, 560, 1479, 611, 1140, 610, 1142, 
         1631, 605, 1132, 543, 1092, 1461, 544, 542, 1091, 1612, 541, 1098, 
         1099, 551, 1487, 1153, 628, 1488, 1155, 629, 627, 1486, 1152, 626, 
         1157, 630, 1496, 1167, 648, 1169, 649, 1633, 1171, 646, 647, 1499, 
         653}], Line3DBox[{558, 559, 1475, 603, 1130, 602, 1133, 1628, 606, 
         1135, 549, 1096, 1463, 550, 532, 1083, 1609, 531, 1086, 537, 1088, 
         1611, 1089, 538, 1481, 1146, 614, 615, 1489, 1156, 623, 1151, 622, 
         1484, 1150, 621, 1162, 637, 1632, 1163, 638, 639, 1494, 1165, 641, 
         640}], Line3DBox[{563, 1465, 561, 1103, 562, 1478, 612, 1141, 601, 
         1129, 1626, 546, 1093, 1613, 539, 1090, 540, 1462, 545, 1097, 548, 
         1094, 1614, 1095, 547, 1154, 624, 1485, 625, 1193, 633, 1490, 1159, 
         632, 1158, 631, 1497, 1168, 645, 1495, 1166, 644, 651, 1498, 1170, 
         650, 652}], 
        Line3DBox[{569, 1466, 568, 1107, 567, 1110, 1619, 573, 1111, 575, 
         1473, 594, 1122, 595, 1124, 1624, 581, 1115, 1620, 578, 1113, 577, 
         1468, 1112, 576, 1181, 666, 1509, 1185, 672, 1184, 670, 1508, 671, 
         1187, 673, 1516, 1195, 684, 1196, 685, 1519, 1199, 692, 1518, 691}], 
        Line3DBox[{572, 571, 1109, 1618, 556, 1101, 557, 1470, 592, 1125, 589,
          1119, 1623, 584, 1117, 1621, 583, 1136, 608, 1476, 607, 1143, 1144, 
         613, 1501, 1175, 655, 1172, 654, 1503, 661, 1177, 662, 1505, 1179, 
         663, 1191, 675, 1511, 1188, 674, 1514, 1194, 681, 680, 1513, 679}], 
        Line3DBox[{574, 1467, 570, 1108, 1617, 554, 1100, 555, 1472, 591, 
         1121, 588, 1118, 1622, 587, 1120, 590, 1137, 1477, 585, 586, 1138, 
         1630, 1139, 609, 1174, 658, 1502, 1176, 659, 1504, 1178, 660, 657, 
         1500, 1173, 656, 1190, 678, 1512, 1192, 677, 1189, 676, 1515, 682, 
         683}], Line3DBox[{667, 599, 1474, 598, 1128, 600, 1134, 1629, 604, 
         1131, 1627, 527, 1081, 528, 1460, 530, 1082, 529, 1087, 1610, 534, 
         1084, 1085, 533, 1480, 616, 1145, 617, 1482, 1147, 618, 1148, 619, 
         1483, 1149, 620, 1491, 1160, 634, 636, 1492, 1161, 635, 1164, 643, 
         1493, 642}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{698, 1634, 699, 977, 701, 982, 706, 984, 707, 1004, 1642, 
         740, 1005, 741, 742, 1009, 1706, 747, 1011, 748, 1131, 903, 1135, 
         1680, 901, 1129, 902, 1142, 898, 1125, 894, 1121, 1675, 867, 866, 
         1111, 875, 1105, 1712, 876}], 
        Line3DBox[{700, 1635, 695, 976, 694, 693, 979, 1702, 703, 980, 704, 
         1002, 738, 1001, 1641, 739, 1006, 743, 1008, 746, 1128, 900, 1130, 
         1678, 870, 869, 1103, 871, 1102, 1711, 872, 1109, 880, 1108, 879, 
         1107, 1672, 877, 1106, 878}], 
        Line3DBox[{720, 716, 988, 1637, 718, 995, 730, 999, 735, 1018, 749, 
         1012, 1644, 750, 1028, 768, 767, 1030, 1648, 770, 1085, 845, 1089, 
         849, 1095, 1670, 857, 1099, 860, 1144, 909, 1139, 881, 1112, 1673, 
         882, 1114, 974, 888}], 
        Line3DBox[{721, 722, 989, 1638, 724, 997, 732, 731, 996, 1704, 733, 
         1016, 754, 1020, 758, 1025, 1647, 765, 1031, 771, 1087, 846, 1086, 
         847, 1097, 1671, 851, 1091, 852, 858, 1136, 1714, 906, 1137, 885, 
         1115, 886, 1123, 1676, 896}], 
        Line3DBox[{772, 1649, 773, 774, 1032, 777, 1037, 1652, 787, 1036, 788,
          1052, 810, 1056, 1658, 816, 1061, 821, 1062, 822, 1147, 914, 1156, 
         1687, 926, 1193, 920, 919, 1155, 1686, 925, 1172, 942, 1176, 947, 
         1185, 1697, 951, 1180, 952}], 
        Line3DBox[{775, 1650, 776, 1039, 789, 1038, 790, 1072, 1664, 815, 
         1055, 813, 1054, 814, 1060, 820, 1063, 1661, 823, 1145, 912, 911, 
         1146, 1683, 913, 1154, 923, 1153, 924, 1175, 1694, 945, 1174, 946, 
         1181, 953, 1182, 954}], 
        Line3DBox[{778, 779, 1033, 782, 1042, 1653, 784, 785, 1035, 786, 1058,
          1660, 811, 1053, 812, 1066, 826, 1067, 1663, 827, 1148, 915, 1151, 
         918, 1159, 921, 1152, 1685, 922, 1177, 949, 948, 1178, 1695, 950, 
         1184, 958, 1186, 959}], 
        Line3DBox[{780, 1651, 781, 1034, 783, 1040, 791, 1041, 792, 1057, 
         1659, 817, 818, 1059, 819, 1065, 1662, 824, 1064, 825, 1149, 916, 
         1150, 1684, 917, 1158, 927, 1157, 928, 1179, 943, 1173, 1693, 944, 
         1187, 957, 955, 1183, 1696, 956}], 
        Line3DBox[{802, 800, 1046, 801, 1050, 1657, 806, 1049, 807, 1069, 830,
          1070, 831, 1079, 1667, 837, 973, 1076, 836, 1160, 1688, 929, 1162, 
         931, 1168, 938, 1167, 1691, 939, 1191, 963, 1190, 964, 1195, 966, 
         1198, 1700, 969}], 
        Line3DBox[{803, 799, 798, 1047, 1655, 795, 1044, 796, 1051, 808, 1073,
          1665, 828, 1068, 829, 1080, 835, 1075, 834, 1161, 1689, 930, 975, 
         1163, 932, 1166, 1690, 935, 1169, 940, 1188, 960, 1192, 1698, 965, 
         1196, 967, 1197, 968}], 
        Line3DBox[{809, 804, 1048, 1656, 805, 794, 1043, 793, 1045, 1654, 797,
          1071, 832, 1074, 833, 1078, 1666, 838, 1077, 839, 1164, 933, 1165, 
         934, 1170, 1692, 936, 937, 1171, 941, 1194, 1699, 961, 1189, 962, 
         1199, 970, 1200, 1701, 971}], 
        Line3DBox[{861, 862, 1677, 1127, 895, 1122, 891, 1118, 890, 1119, 892,
          1679, 1132, 855, 1093, 854, 1096, 840, 1708, 1081, 764, 762, 1023, 
         760, 1646, 1021, 759, 1026, 753, 1015, 728, 993, 725, 1639, 990, 710,
          985, 709, 723}], 
        Line3DBox[{874, 1104, 873, 1110, 864, 1710, 1100, 863, 1101, 865, 868,
          1681, 1140, 910, 1141, 905, 1133, 904, 1134, 745, 1643, 1007, 744, 
         1010, 737, 1000, 736, 1705, 1003, 708, 972, 983, 705, 1636, 981, 702,
          978, 697, 696}], 
        Line3DBox[{887, 1116, 884, 1713, 1113, 883, 907, 1138, 908, 1682, 
         1143, 859, 1098, 856, 1094, 848, 1088, 844, 1669, 1084, 769, 1029, 
         766, 1027, 757, 1707, 1019, 755, 756, 1017, 734, 1640, 998, 729, 994,
          717, 987, 715, 719}], 
        Line3DBox[{899, 1126, 897, 1124, 893, 1674, 1120, 889, 1117, 853, 
         1092, 850, 1709, 1090, 843, 842, 1083, 841, 1668, 1082, 763, 1024, 
         761, 1022, 752, 1013, 751, 1645, 1014, 727, 992, 726, 991, 712, 1703,
          986, 711, 714, 713}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{1202, 1201, 1635, 1207, 1582, 1206, 1413, 1210, 1636, 1525,
          1585, 1212, 1421, 1371, 1642, 1537, 1592, 1227, 1422, 1229, 1646, 
         1546, 1601, 1233, 1460, 1390, 1668, 1559, 1609, 1285, 1462, 1288, 
         1671, 1287, 1612, 1286, 1476, 1317, 1682, 1576, 1630, 1568, 1468, 
         1673, 1300, 1352, 1506, 1353}], 
        Line3DBox[{1203, 1204, 1412, 1205, 1414, 1369, 1702, 1523, 1415, 1524,
          1591, 1224, 1705, 1223, 1419, 1535, 1595, 1374, 1706, 1540, 1424, 
         1541, 1627, 1389, 1708, 1558, 1463, 1289, 1613, 1392, 1709, 1562, 
         1461, 1563, 1621, 1302, 1714, 1575, 1477, 1301, 1620, 1397, 1713, 
         1569, 1469, 1570}], 
        Line3DBox[{1209, 1208, 1634, 1521, 1583, 1522, 1584, 1211, 1639, 1530,
          1589, 1532, 1597, 1375, 1645, 1231, 1596, 1543, 1600, 1232, 1647, 
         1547, 1603, 1549, 1610, 1391, 1669, 1560, 1611, 1561, 1614, 1670, 
         1290, 1578, 1487, 1327, 1501, 1694, 1405, 1347, 1502, 1349, 1509, 
         1697, 1407, 1355, 1510, 1356}], 
        Line3DBox[{1217, 1216, 1416, 1215, 1638, 1529, 1590, 1222, 1418, 1221,
          1640, 1534, 1598, 1542, 1425, 1644, 1230, 1263, 1445, 1267, 1446, 
         1661, 1385, 1268, 1482, 1321, 1489, 1687, 1404, 1324, 1490, 1577, 
         1486, 1685, 1326, 1330, 1505, 1580, 1500, 1693, 1348, 1359, 1516, 
         1363, 1517, 1700, 1410, 1364}], 
        Line3DBox[{1219, 1214, 1586, 1213, 1703, 1526, 1417, 1531, 1588, 1220,
          1704, 1533, 1426, 1544, 1599, 1377, 1707, 1545, 1427, 1548, 1602, 
         1648, 1234, 1272, 1480, 1320, 1481, 1683, 1403, 1319, 1485, 1325, 
         1488, 1686, 1328, 1329, 1503, 1351, 1504, 1695, 1406, 1350, 1508, 
         1581, 1507, 1696, 1354, 1368}], 
        Line3DBox[{1253, 1254, 1435, 1655, 1382, 1249, 1606, 1250, 1433, 1654,
          1381, 1252, 1452, 1277, 1454, 1278}], 
        Line3DBox[{1257, 1437, 1258, 1438, 1259, 1256, 1656, 1436, 1555, 
         1556}], Line3DBox[{1311, 1677, 1310, 1471, 1309, 1473, 1306, 1675, 
         1398, 1472, 1308, 1470, 1307, 1681, 1402, 1479, 1318, 1478, 1314, 
         1678, 1400, 1475, 1312, 1474, 1228, 1373}], 
        Line3DBox[{1336, 1493, 1283, 1458, 1274, 1387, 1666, 1457, 1279, 1455,
          1276, 1388, 1665, 1453, 1260, 1440, 1251, 1380, 1657, 1439, 1255, 
         1434, 1554, 1240, 1651, 1552}], 
        Line3DBox[{1360, 1513, 1346, 1499, 1343, 1342, 1692, 1498, 1338, 1494,
          1337, 1332, 1689, 1492, 1280, 1456, 1557, 1284, 1667, 1459, 1275, 
         1450, 1273, 1264, 1659, 1443, 1248, 1431, 1247, 1379, 1653, 1432, 
         1241, 1428, 1239, 1235, 1649, 1550}], 
        Line3DBox[{1365, 1411, 1701, 1520, 1367, 1519, 1358, 1408, 1698, 1512,
          1357, 1511, 1341, 1340, 1691, 1496, 1579, 1497, 1333, 1323, 1684, 
         1484, 1322, 1483, 1269, 1386, 1663, 1449, 1271, 1448, 1262, 1383, 
         1658, 1442, 1261, 1441, 1244, 1378, 1664, 1451, 1246, 1430, 1553, 
         1218, 1637, 1587, 1527, 1528}], 
        Line3DBox[{1366, 1518, 1362, 1515, 1361, 1409, 1699, 1514, 1345, 1633,
          1344, 1339, 1690, 1495, 1335, 1632, 1334, 1331, 1688, 1491, 1282, 
         1608, 1281, 1270, 1662, 1447, 1266, 1607, 1265, 1384, 1660, 1444, 
         1243, 1605, 1242, 1245, 1652, 1429, 1238, 1604, 1237, 1236, 1650, 
         1551}], Line3DBox[{1376, 1225, 1420, 1226, 1423, 1370, 1641, 1536, 
         1593, 1538, 1594, 1372, 1643, 1539, 1629, 1316, 1628, 1315, 1680, 
         1313, 1626, 1574, 1631, 1401, 1679, 1305, 1623, 1304, 1622, 1303, 
         1674, 1571, 1624, 1573, 1625, 1399, 1676, 1572}], 
        Line3DBox[{1394, 1293, 1465, 1292, 1464, 1291, 1711, 1565, 1618, 1298,
          1617, 1393, 1710, 1564, 1619, 1295, 1615, 1294, 1712, 1566}], 
        Line3DBox[{1396, 1299, 1467, 1297, 1466, 1395, 1672, 1296, 1616, 
         1567}]}}},
     VertexNormals->CompressedData["
1:eJztXTtuVUEMfQKJmpoOiSIk1Ckha6CiREjUbIuaDWQHSCyBgoJdgASvuZLl
OfY5ticvVSTrytfXvzn+zMvLT1/ef35yOp2+PTudnv79+/rVx1/fX/y4//f3
5/272+cfbr/+vvfoNyCdxQflj773/PxdUJ5rg371n35tPH+U0+KD6sHif+Tz
dlEPq3J67836Q9d7Vfpn80f1wH6eFadZO6J+wvIr1C5sv12N3+zzKvo5T1p5
aYr+UX0ev+v43tV8W+236nhUf686T+5GZ+XJLj2r/Sp7rqntddMUF+rztEqe
arrnJ2p9Ton3bj0/NDr7e3fBvar86eXVKfQuPNyVn6d+V7W9snq4C9JVckbr
Tba9rpLfe8wb7O9C+ajksfiw+wYsP2HTvb6EWs5oP8Hyh1U/6dY/Gner+W2V
v6fn1fhd5aPOJ1l61A9ZevP0c8znqJ+o9aw6F6J6jsZFlb+x5KzSjxrHdn1X
d99pV/9h8bH8B41Hdfyy+KO4Jas3Nn5A8ZhaD9P8ZNf4jdpllR6Vx8MV0X2D
s5zWHkuWP0t+ry6zzqmsnNF9IYvOwo1qOhv/VM8pPDui/NH5IGp31n5d9tzM
+kl0ryz63mO+8uiqvBr9LpYesv7cVe9012XT9lXUez67zIsvfa9gKj5X4Zlu
+av3f7rs2433pvgzWmdNk19l9yxOrtJn1dxKrf8jvXseh8q5mj9Z34XON6v0
k42jqPxoH+zNYn5e7adNqSNY51FUHm8PLbqf48np7bd4carKY+j5mz13jnro
7hdlcQiKD3fHLbvLz6Zfg/RqOafWp9PpXXrLzsvUc1jveXROV62fqH276tCs
nNF5NMv/PRyinqdk54xRPsd5KNq/QvVg6b9qXqyaO7Nxi/p+IsvPUXnU8+us
3qw4zeqHvcfFsgtLTnZ9Vz0f76pbp/U9quhdcxOVX7H9jVWvrd5nZNtRpc8q
P2Txqa6vu3BLF33qd02Za6N1kzrf7mZHlZxZnGY9X7Wnx9qrn2bHbDx2zQ29
uU/2Xlt0TsrSj2ouycYDUf2w5qerz6P3Ds7yW3OxVfnV+VMV1yw52fduptFZ
fe/d5b80O6rjSD1fYJ07aH5m3QubFqesuZVq3hedA6L5HO3znPlH5xSr+Mq6
Bxfty3nvjc53snmGxd/Tjwq3ZOto1e9yq+TZzS6ov6n6jVH7ZvuT6nO/K46i
dWL1PSO1X03Hpd3yTIsLlh1Z8lft51T78y5+ON1v1b8byX4+S2f1V7t/RxGt
Z9X9WFYeyPp/tk9rne+rv1Nn+Qnre1n3LNTPs+ujKedFN664NHq2PtodV+x6
vyB6Tqn7riz9s+TJ5n+2HdG9FDb9GO9nenbPHK3fo3RUHtRPsvkQ1Y+nt1X8
U+U/2bhjn++s+teyO6tv3NW/Yp3vLD7T+28s/5yGYz151HvpU3CX2j/Ve6es
PLzaD/HOl+zeHfs8QvszUf1E82H09yWyuH1qH8Pyt+488EjvoXfVp6jfsupE
9b4Ta79o2jnO2ndC7494/WFr78h7vioPs3HIpeB51Xun/i6fag5S9X8HuvK2
ZxcLfx7xpJVPVPVdVv5pecbC5yhu9+yS5f9I3yPPs/ln/SSLu9j5nHVORfHw
UZ9ZXG3V++w6epXOPjd3ixc1fde8Pb3+qqpD1X7IwplePEbnpEd8aOGWbF6K
5jfV/RTveU8P3ff+1DiWZV+PvgsezsqT1SfL36L9f1UeZvNn+ac6/3v4ULXf
wsqf0frXe+9qXZA9p6J5UpUHonmymk91fEXrRJTPDagfyw/ROnFa3cTGz137
eKx9OVW8sPGV+v7s9HkN+3tV70Xrbpb/eHlvFaex6nrVOfLQ90BUc/+oHVl+
HvUfb26Onkdq/2HfH0Tzxh8d1zyo
      "]], {}}, {{
     {RGBColor[1, 0, 0], PointSize[0.03], 
      Point3DBox[{-3.5714285714285716`, 2.5714285714285716`, 
       0.14285714285714285`}]}, {}, {Inset3DBox[
       FormBox[
        GraphicsBox[GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{2.121320343559643, 2.1213203435596424`}, {0., 0.}], 
              Offset[{5.656854249492381, 5.65685424949238}, {0., 0.}], 
              Offset[{7.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}], 
              Offset[{9.65685424949238, 5.65685424949238}, {0., 0.}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{64.65685424949238, 13.456854249492386`}, {0., 0.}], 
              Offset[{64.65685424949238, 0.45685424949238573`}, {0., 0.}], 
              Offset[{9.656854249492383, 0.4568542494923733}, {0., 0.}], 
              Offset[{9.656854249492383, 13.456854249492373`}, {0., 0.}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Intersection\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineOpacity->1,
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             Opacity->1,
             FontOpacity->1], 
            Offset[{37.15685424949238, 6.9568542494923795}, {0., 0.}], NCache[
            ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}],
         AspectRatio->Full,
         ImageSize->{84, 42},
         PlotRange->
          NCache[{{-1 + 2^Rational[-1, 2], 1 + 2^Rational[-1, 2]}, {-1 + 
             2^Rational[-1, 2], 1 + 
             2^Rational[-1, 2]}}, {{-0.29289321881345254`, 
           1.7071067811865475`}, {-0.29289321881345254`, 
           1.7071067811865475`}}]], StandardForm], {-3.5714285714285716`, 
       2.5714285714285716`, 0.14285714285714285`}, 
       Offset[{-3.336870691729612, -2.195466036357717}, {0, 0}]], {}}}, {}}},
  PlotTheme -> "Scientific",
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{302.81892677993807`, 340.48114364232157`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.7705321416909678`, 2.8515295501545834`, 0.42894656990632846`},
  
  ViewVertical->{0.2605392748907399, 0.5583084912705639, 
   0.7876616753496353}]], "Output",
 CellChangeTimes->{{3.887262552381551*^9, 3.887262578457904*^9}, {
   3.887262613062729*^9, 3.887262826351111*^9}, 3.887270598499667*^9},
 CellLabel->"Out[1063]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2wXs8fHHr72Tl5Ds05veS94QxWu1hYO9JKLVFQA3FGBmjMK4WwbnM4wCAty2
d+0IzpCucu5Eh6+CawUKJdhEx3fKfOh7UnJ8VG2wtuNGauqY3kOwFuUImIhH
SwuFJ9unjWdaS2f3vsCcfTaRBo9lY6UGUPzu5jJJ5+sMzcIz8nxSQO8BIg+e
suNTUT8osDTRVx6RARjELNsZFFr505HszjTaETgWYUtjartkYFPAQrfiX6Ge
byTvbq3khN8rojQ69hvN67ZBiMnGie4O6XlHHfvvddh1nRvBbkWHHN1av8H6
oEHqphUSgblqqMggxSLG2glWJAGn1FkXUNDucwuymm3jgN/GA2e+W+JhJSK9
cGo1YWS20/DMFc5J+yjAc250Dex3giXHlNVn++mxjf+NKN3g9+mt4Re27TNE
CLkfbbYRUgWk/HPO2vCh15DQJw+413/7wi73RKgWjhrZowa75b89glxi3Ihe
g1wNF9WtDRDWVsDU1zCuh0ATKBWr8OGB56kod/8zn/5WHguIKOhvZC2F4u04
EJyJCmgJBJ99hz+kywfyaUL179tnnH5LztQubCiuOIr5pG+JdbuajpjUCYDN
fwR2RtHjQunMKPdSJTaEHGG2RW9DfvDR+PqAcQIZdSzrQYRkbGgOZdu+QLL3
ZNsODUIQMex57B4HcdfLujadImbUY4wOlAAVCs+zYnsXyS0kLB9/1rOeZSg+
xva671bmLvyJtEvQBBadXD4ExwaDojCUwlG7n4PrfIuY/G2Iiyki3glkiaJc
hN1tT7pad8YhbhZClNszHrEnCyzcctZKtt0W0LZvEHmWw4S4re653ykOla7H
EVDpehyorPBTEk8emtJj9ag9Zpy5SWHcEXOWTHryvT9WjKamUg6VdKwbomNN
bcXDL4Uaa0UfgK6E5FnbGVrZbgABrIKwAJUbEPJ2z0bewCBKue8AQF5xvw7k
/YxscxWirFvmEuh2lFOUVLn8DZcN0H5/dcXlv3Lk0sfeCgGMmqKrZY62+3mO
ZnCjlqCYXEXlZ23fZ8TqlofR9tTOkQDALWmJlzXTjtuqTu8+AkesgcmuJ18d
Qwc9QCMhCzeGAi98DeCJThOA55AB2cz9PMioJxdB9sS0e3S6y0Cbc64wc8ci
kxeymlodW51qmxfFQCj/6WBfW34psy+KqULvQTHnHWavEgwPtbxGZnaXsRD/
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
lqZiyUvWmnHf6fDArzTtuokRiZKY7IHrnvNGc2yrmZIFQP1pbmYimkUzIl55
/9FZZ97ygyaKtupyPio9e1dkDDw6MO2xLW0c+0erl6KHHP36THWQ44/qCOsC
WBUrKytpCSi6iTAl4IPRkXPOeu/fHDz4UiOzE16ggwpSM0PivnQXdIy6dnME
FMjV6FnMIu64Js9wdlwWANTk2vTe3bhKxDuMmgZhOU65qY3vhrz22mvjilok
0PLzu2B5zwaBEbfFdeKI/YJc/r/arj5YsuKq370fM/M+9r19u7CQXVzeJkXk
w1BIgR9YwgAbPrSUBRJd0eCg1AOpgiWCQYObjEipJBDIprASkawKmkpBATEi
hV8PxYpaQgQTIVSBW/wBJiRUJJQQDBHv+ejuc/qevnfm7Waq7rw3Pfd2n/M7
p89X99yrarpzWpMs/ydvT6cWQ314kS4tlCAomb1at9y5aTrZXG/IJr20rFw6
Un/C8TeAXKwk3jJ+U6wkp/c86gzeuverJRwrtRKmMY4oVaxGNw7iXJif7iME
M3C3iJMqhWaR89CPEMpqlVsLRZV89hhCSe5P4S168MARP0PSmxe773iw8UDM
Ie8NlRd6YHkwWRo3uZqiWE9rwmEnsQ/GGRR3aw58TSmEDxtC6D9W5bJmUn+C
g1RVZYAgDihqy1BxQltnSKO10o7gTpvd9Q1hzHgj2L7H3FIrZa6ogIY3JpOL
F2423EzIqnVGFsQifaUKMjcYgigB9vyFbZCqgEhmPU0skv/6cSqJwSneBtft
Vk2YN/LFtk1lwQ3D1rKo2vT+VkrHUpR3ozTNY2LTcTRLXLdzrKGinvnCbesu
KLBZ18W6xaAqLZT796QYoNOQ1MEItImNZSDlkBMBXhzbMOCplCwqhMu3iaCt
brPqb1P/ULr1Bm5Mccak4o8dlhYewE808QupZfUUrqzR+XIJRO1TKhls0SdD
JLdMJBKfx/+Onhkckm/zGbEbfr0BNJP5jbPe/VtPH7H1bkmSElI/KaSeRENe
s2iANW+DVaR6x7ldtiL87LwQUM8YcwO+p6pbTfQ/Bm+4SnpaGnOOfccnnngi
eBc4spwwbya6PfyidKzBp8AX7SFdWryPyDSwLw2mNhptltwsmS9oubnvQhDc
7LpnX/L8wtznAHsL9k1hZE/NRgPuW0248Ye7H0353l4KaeL+2xdeePlX33nU
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\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"c546a4f2-112f-44c5-b13c-fb0f7d7f1f94"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["8. Animations", "Section",
 CellChangeTimes->{{3.887262878122293*^9, 
  3.887262879807415*^9}},ExpressionUUID->"1ba0285c-b66c-4ae7-9dbe-\
1313e0d24f53"],

Cell[CellGroupData[{

Cell["8.1. Curve animation", "Subsection",
 CellChangeTimes->{{3.8872629099828444`*^9, 
  3.887262914751018*^9}},ExpressionUUID->"629dc626-b892-4b65-af99-\
7073581e5e69"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Build animation of curve ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], ",", 
             StyleBox["t", "TI"]}], ")"}], "\[LongEqual]", "12", 
         StyleBox["x", "TI"], 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["x", "TI"], "-", 
              StyleBox["t", "TI"]}], ")"}], "5"], "sin", 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "u(x,t)=12x(x-t)^5\\sin t", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c34d1e5e-886c-4bdc-a8cf-7e53d7ce7ba6"],
 " movement on the given time interval ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[Element]", 
         RowBox[{"[", 
           RowBox[{"0", ",", "1"}], "]"}], ",", 
         StyleBox["t", "TI"], "\[Element]", 
         RowBox[{"[", 
           RowBox[{"0", ",", "2", "\[Pi]"}], "]"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "x \\in [0,1],t\\in[0,2\\pi]", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a2e46ce3-9bca-4585-8a13-aafa1eb0f220"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.887262925491341*^9, 3.8872629599037647`*^9}, {
  3.887262996952897*^9, 3.887262999494022*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6db223ef-11fb-4ab2-aa22-b8779c3d6cfd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "t"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"12", "x", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "t"}], ")"}], "5"], 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "200"}], ",", "1000"}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<t=\>\"", "<>", 
         RowBox[{"ToString", "[", "t", "]"}]}], ",", "Blue", ",", "20"}], 
       "]"}]}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Blue"}], "}"}]}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AnimationRunning", "->", "False"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.88726315494007*^9, 3.887263343205346*^9}, {
  3.887263376358489*^9, 3.8872634503973627`*^9}, {3.8872644164282627`*^9, 
  3.8872644169066563`*^9}, {3.88726447788708*^9, 3.887264504454829*^9}, {
  3.887264727826861*^9, 3.8872647337612343`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"7b747a7a-87a1-419d-ba6e-ce1b353209a4"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 3.905124400224928, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 2 Pi}}, Typeset`size$$ = {
    396.00000000000006`, {135., 140.14744421443407`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[12 $CellContext`x ($CellContext`x - $CellContext`t$$)^5 
        Sin[$CellContext`t$$], {$CellContext`x, 0, 1}, 
        PlotRange -> {-200, 1000}, PlotLabel -> 
        Style["t=" <> ToString[$CellContext`t$$], Blue, 20], PlotTheme -> 
        "Scientific", PlotStyle -> {
          Thickness[0.007], Blue}], 
      "Specifications" :> {{$CellContext`t$$, 0, 2 Pi, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{747., {158.4578125, 164.5421875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.88726321920947*^9, 3.887263343572328*^9}, 
   3.887263381313291*^9, {3.887263417685481*^9, 3.887263450772215*^9}, {
   3.887264481197812*^9, 3.8872645047943*^9}, 3.887264734348626*^9, 
   3.8872706983676243`*^9, 3.8874688935694237`*^9, 3.89092449035627*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"cd747aec-8535-4042-9d3b-8d608e404bca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["8.2. Animation of point movement along the curve", "Subsection",
 CellChangeTimes->{{3.887263486772263*^9, 
  3.887263501384777*^9}},ExpressionUUID->"247c1cab-1d8d-4791-b0a7-\
9b78ae63e531"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Build point\[CloseCurlyQuote]s movement animation along the curve ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["5", "2"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["t", "TI"], "-", "sin", 
             StyleBox["t", "TI"]}], ")"}], ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["5", "2"], 
         RowBox[{"(", 
           RowBox[{"1", "-", "cos", 
             StyleBox["t", "TI"]}], ")"}], ",", 
         StyleBox["t", "TI"], "\[Element]", 
         RowBox[{"[", 
           RowBox[{
             FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "]"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "x(t)=\\frac{5}{2}(t-\\sin t),y(t)=\\frac{5}{2}(1-\\cos t),t\\in[\\frac{\
\\pi}{2},\\pi]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "429fde23-44c5-433b-aaaf-8f7fc8177d83"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.887263508158766*^9, 3.887263509944353*^9}, {
   3.887263623572091*^9, 3.8872636320077343`*^9}, {3.8872637691494923`*^9, 
   3.88726377131353*^9}, 3.887264176518716*^9, {3.887264219151874*^9, 
   3.887264250630378*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6f4e72d2-d746-400a-b77d-642dcea385d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], "=", 
   RowBox[{
    FractionBox["5", "2"], 
    RowBox[{"(", 
     RowBox[{"t", "-", 
      RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], "=", 
   RowBox[{
    FractionBox["5", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Animate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "\[Tau]", "]"}], ",", 
         RowBox[{"y", "[", "\[Tau]", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", "0", ",", 
         RowBox[{"3", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Blue"}], "}"}]}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "}"}], "->", 
        RowBox[{"{", "\"\<Point\>\"", "}"}]}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"PointSize", "[", "0.03", "]"}]}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GridLines", "->", "Automatic"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"3", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.887264256257038*^9, 3.887264396371463*^9}, {
  3.8872647886084633`*^9, 3.887264806037909*^9}, {3.887305435269507*^9, 
  3.887305477151367*^9}, {3.887468913821457*^9, 3.8874689542977257`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c445baf2-3d33-4e96-bf78-98ef99ff05a9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 2.657589357604629, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0, 3 Pi}}, Typeset`size$$ = {
    396.00000000000006`, {191., 195.40781250000003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ParametricPlot[{
          $CellContext`x[$CellContext`\[Tau]], 
          $CellContext`y[$CellContext`\[Tau]]}, {$CellContext`\[Tau], 0, 3 
          Pi}, PlotTheme -> "Scientific", PlotStyle -> {
           Thickness[0.007], Blue}], 
        ListPlot[{{
            $CellContext`x[$CellContext`t$$], 
            $CellContext`y[$CellContext`t$$]}} -> {"Point"}, 
         PlotStyle -> {Black, 
           PointSize[0.03]}], GridLines -> Automatic], 
      "Specifications" :> {{$CellContext`t$$, 0, 3 Pi, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{747., {213.9578125, 220.0421875}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.887264374724712*^9, 3.8872643969354362`*^9}, 
   3.887264763304124*^9, 3.887264806410245*^9, 3.887270701799706*^9, 
   3.887270860798246*^9, 3.887279584151106*^9, {3.887305469815879*^9, 
   3.887305477619204*^9}, 3.8873065093824663`*^9, 3.887310433075144*^9, {
   3.887468933848041*^9, 3.887468954682623*^9}, 3.887538762610447*^9, 
   3.89092448513776*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"49e90bab-ef79-4c3d-b8fd-26df81fb16b3"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1106.3999999999999`, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.1 Inherited,
FrontEndVersion->"13.2 for Linux x86 (64-bit) (January 31, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ce8e5f60-ca9b-4ff8-9493-3618f2ce4c46"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 270, 4, 129, "Title",ExpressionUUID->"1f323f23-10a4-49f0-a770-44a6a467e2c2"],
Cell[853, 28, 159, 3, 34, "Author",ExpressionUUID->"bab39657-8b55-4fca-989c-c6235972c468"],
Cell[1015, 33, 207, 3, 34, "Affiliation",ExpressionUUID->"2a3da637-413c-4136-98da-4e3cd71d3f59"],
Cell[1225, 38, 213, 7, 34, "Affiliation",ExpressionUUID->"7931586f-6218-424d-b8c9-583bca426c66"],
Cell[CellGroupData[{
Cell[1463, 49, 232, 4, 74, "Section",ExpressionUUID->"7c2bb4b6-f563-42bc-be2c-d153bc86b603"],
Cell[CellGroupData[{
Cell[1720, 57, 223, 4, 58, "Subsection",ExpressionUUID->"8c9c8c9e-02b1-4af8-9a6d-7bf3208abedf"],
Cell[1946, 63, 829, 26, 70, "Text",ExpressionUUID->"deef2c9f-a066-4ff1-9065-7bab7a384d78"],
Cell[CellGroupData[{
Cell[2800, 93, 877, 23, 111, "Input",ExpressionUUID->"5aca2649-fd42-422f-93eb-10a0e33b4de5"],
Cell[3680, 118, 387, 9, 28, "Print",ExpressionUUID->"a9503802-c60f-497b-8b28-4bfaea913aac"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4116, 133, 225, 5, 40, "Subsection",ExpressionUUID->"ad997c4e-905d-4d2a-948f-d95738043827"],
Cell[4344, 140, 1271, 35, 94, "Text",ExpressionUUID->"a2adb66d-5883-4d99-b9a9-5c7c461594c1"],
Cell[CellGroupData[{
Cell[5640, 179, 1077, 31, 141, "Input",ExpressionUUID->"5360ff38-79ae-4478-ab8f-6170ea08c630"],
Cell[6720, 212, 419, 10, 28, "Print",ExpressionUUID->"6b41957b-fcdf-490e-810e-a771d5000de9"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[7200, 229, 168, 3, 58, "Section",ExpressionUUID->"39b763f7-5081-4ecd-99fe-c72379fba2f0"],
Cell[CellGroupData[{
Cell[7393, 236, 178, 3, 58, "Subsection",ExpressionUUID->"c7c1c526-296f-43db-bd41-70b6283d4b6f"],
Cell[7574, 241, 2045, 58, 94, "Text",ExpressionUUID->"4a0d36ee-e049-486c-a83e-5b3e3c9fe194"],
Cell[CellGroupData[{
Cell[9644, 303, 1397, 42, 125, "Input",ExpressionUUID->"531603c5-d4e0-424c-8d0e-8056bccee8ee"],
Cell[11044, 347, 853, 25, 58, "Print",ExpressionUUID->"e35cb4bc-5cb4-429d-bb2d-04c80c92b2eb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11946, 378, 192, 3, 40, "Subsection",ExpressionUUID->"8897ff19-fd05-44ea-ae8b-daeffec7b1a5"],
Cell[12141, 383, 1916, 55, 100, "Text",ExpressionUUID->"ec8da01f-daf8-4dd4-9633-dd8517257e26"],
Cell[CellGroupData[{
Cell[14082, 442, 1277, 37, 141, "Input",ExpressionUUID->"c8fe7f5d-54fa-4b31-a5ec-dae1a920eba6"],
Cell[15362, 481, 480, 13, 30, "Print",ExpressionUUID->"4fba52d1-3e5f-4314-b074-757bb782c2eb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15891, 500, 172, 3, 40, "Subsection",ExpressionUUID->"6f44eccd-8995-45fa-8e28-9e14d67a111e"],
Cell[16066, 505, 1213, 34, 83, "Text",ExpressionUUID->"af031b6d-f630-4780-85c9-f553ff8d6bff"],
Cell[CellGroupData[{
Cell[17304, 543, 532, 16, 80, "Input",ExpressionUUID->"8f883bd5-51cf-4c00-8c37-8cb1fbdff08b"],
Cell[17839, 561, 746, 25, 51, "Output",ExpressionUUID->"ff957328-94bd-4e00-9116-1c57f0a86282"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[18646, 593, 179, 3, 58, "Section",ExpressionUUID->"4a0fa35c-e200-4d9c-ae01-651885ffe84a"],
Cell[CellGroupData[{
Cell[18850, 600, 225, 4, 58, "Subsection",ExpressionUUID->"1ae86241-7ec7-4802-8702-e43d60d90e8d"],
Cell[19078, 606, 3204, 86, 84, "Text",ExpressionUUID->"7648500d-af3d-4f53-b09d-b93489a7073f"],
Cell[CellGroupData[{
Cell[22307, 696, 1239, 34, 191, "Input",ExpressionUUID->"06d04f8a-3904-4aae-960a-51951fd07508"],
Cell[23549, 732, 557, 16, 41, "Print",ExpressionUUID->"72822589-5e79-43eb-a722-3373c9803f9d"]
}, Open  ]],
Cell[24121, 751, 922, 24, 40, "Text",ExpressionUUID->"6c76a3fe-108b-46a0-953c-5237864d59d4"],
Cell[CellGroupData[{
Cell[25068, 779, 1000, 28, 153, "Input",ExpressionUUID->"51d87477-d41f-4b6e-b002-44f38639a54d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[26093, 811, 902, 20, 28, "Print",ExpressionUUID->"3018abdc-c438-4f84-b90e-f506efe39e07"],
Cell[26998, 833, 781, 15, 28, "Print",ExpressionUUID->"7c7054e9-5f45-4e3d-b2a6-e51cc7ead7f5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27828, 854, 887, 23, 78, "Input",ExpressionUUID->"4411b014-6ac9-4912-9396-90d6989c7ff9"],
Cell[28718, 879, 255, 5, 36, "Output",ExpressionUUID->"45d4392b-3dc3-4192-8d0f-25184b181ed8"],
Cell[28976, 886, 721, 16, 430, "Output",ExpressionUUID->"53b0ba41-9a18-4399-8878-0f084f8ec12e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[29746, 908, 240, 4, 40, "Subsection",ExpressionUUID->"68ab4371-afc3-434d-8373-1e5c392d7f90"],
Cell[29989, 914, 1110, 30, 58, "Text",ExpressionUUID->"8f1809e4-e071-4864-97a8-2533f22c483f"],
Cell[CellGroupData[{
Cell[31124, 948, 875, 24, 57, "Input",ExpressionUUID->"0c5f2eb4-5768-484e-a642-d6cb622211a9"],
Cell[32002, 974, 7126, 147, 373, "Output",ExpressionUUID->"93b1d22d-8794-458f-a4cf-4f6ed1a4ddf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39165, 1126, 1830, 42, 153, "Input",ExpressionUUID->"a895fa53-74a8-4adb-ad3a-d67a51eed0a2"],
Cell[CellGroupData[{
Cell[41020, 1172, 1145, 21, 28, "Print",ExpressionUUID->"cf09890d-b7ae-4cfb-a616-684e7bf6e89b"],
Cell[42168, 1195, 939, 19, 38, "Print",ExpressionUUID->"ef7f8ebf-ce42-4d54-8b5a-744b646c7057"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43156, 1220, 529, 14, 74, "Input",ExpressionUUID->"1105956f-691a-443b-acec-c2b9ac9fc4f4"],
Cell[43688, 1236, 443, 11, 44, "Print",ExpressionUUID->"19f866c2-3147-4b47-83b5-e0729fb893e5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[44180, 1253, 180, 3, 40, "Subsection",ExpressionUUID->"7ce7fbc8-b052-4d43-8798-9ea5a3c98ae4"],
Cell[44363, 1258, 3315, 92, 89, "Text",ExpressionUUID->"8a96f913-484e-4999-a1d2-4aa6f0fb21bc"],
Cell[CellGroupData[{
Cell[47703, 1354, 4211, 123, 412, "Input",ExpressionUUID->"fe9da181-7f34-411f-b9da-11233688d17d"],
Cell[51917, 1479, 37811, 639, 445, 3762, 80, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e3b4c9c2-9b20-4db1-9a26-3a33c6857a07"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[89789, 2125, 167, 3, 58, "Section",ExpressionUUID->"76c4b2fd-b35e-41f0-84d7-2caab734ee1d"],
Cell[CellGroupData[{
Cell[89981, 2132, 174, 3, 58, "Subsection",ExpressionUUID->"2156b00c-0381-4fc1-bb1e-20ef0c009e61"],
Cell[90158, 2137, 6694, 180, 172, "Text",ExpressionUUID->"ceae94c2-eaf2-4f4e-859b-42c551c89d40"],
Cell[CellGroupData[{
Cell[96877, 2321, 1232, 39, 104, "Input",ExpressionUUID->"12220fae-fb73-468e-bd60-214eec87f2ff"],
Cell[98112, 2362, 953, 26, 60, "Print",ExpressionUUID->"959b2306-f677-4b66-8463-620610c26f51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99102, 2393, 418, 9, 57, "Input",ExpressionUUID->"4d58fbbb-98d9-426d-83b9-884bbb491fe6"],
Cell[99523, 2404, 1324, 42, 85, "Print",ExpressionUUID->"c7674e42-eec3-4fd6-b444-07c941b1899d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100884, 2451, 359, 8, 57, "Input",ExpressionUUID->"d8eb1c3b-a94c-43e1-9fee-6db01bfa6b42"],
Cell[101246, 2461, 351, 9, 28, "Print",ExpressionUUID->"573defb1-c840-4491-a9bb-4c3f8fc74dee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101634, 2475, 579, 15, 60, "Input",ExpressionUUID->"15569c75-0994-4b4b-b519-89b4a33e3457"],
Cell[CellGroupData[{
Cell[102238, 2494, 981, 27, 60, "Print",ExpressionUUID->"8b027634-4226-4b65-a453-a0a89e28d9ee"],
Cell[103222, 2523, 1082, 31, 60, "Print",ExpressionUUID->"aee93d26-c0fd-4fa9-9541-ef58bb1dd815"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104353, 2560, 943, 22, 129, "Input",ExpressionUUID->"0621a9d4-a4d7-4ac6-8f35-585518a4993d"],
Cell[CellGroupData[{
Cell[105321, 2586, 955, 26, 60, "Print",ExpressionUUID->"35bd9709-73f0-4ef8-b652-75ebbe04ec9e"],
Cell[106279, 2614, 990, 27, 60, "Print",ExpressionUUID->"e9eb436f-b353-43f4-b436-1ddf32ffee93"],
Cell[107272, 2643, 989, 27, 60, "Print",ExpressionUUID->"3a02b37b-e4ad-4c9c-b6e1-6ac88656a128"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108310, 2676, 434, 10, 57, "Input",ExpressionUUID->"4f4df43a-56cc-4a3d-b7e8-278e3d91fd4f"],
Cell[108747, 2688, 1271, 38, 86, "Print",ExpressionUUID->"857fe77b-0555-4aeb-81e8-07d8d6c3c480"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[110067, 2732, 191, 3, 40, "Subsection",ExpressionUUID->"d37978e6-a7aa-4bbd-842c-16229e781527"],
Cell[110261, 2737, 6353, 172, 169, "Text",ExpressionUUID->"c168fa98-9be9-4f48-bf5d-52f17f440a9e"],
Cell[CellGroupData[{
Cell[116639, 2913, 1719, 54, 172, "Input",ExpressionUUID->"02efa7c2-d011-4fb0-a645-a3f1464fb1cd"],
Cell[CellGroupData[{
Cell[118383, 2971, 1027, 31, 60, "Print",ExpressionUUID->"9dbbe6bd-828d-47e4-aade-e51b7284576b"],
Cell[119413, 3004, 979, 29, 60, "Print",ExpressionUUID->"340f2e1c-a984-4d3c-8c8b-d57c38a7555b"]
}, Open  ]]
}, Open  ]],
Cell[120419, 3037, 1086, 28, 40, "Text",ExpressionUUID->"21679cdf-ca99-43ac-8247-7a0209529a6c"],
Cell[CellGroupData[{
Cell[121530, 3069, 446, 11, 57, "Input",ExpressionUUID->"7a6d290b-108e-4589-91c9-cb106a21c5e1"],
Cell[121979, 3082, 1047, 31, 69, "Print",ExpressionUUID->"86d5c0ae-6e6a-4b0e-a608-b1668b16298c"]
}, Open  ]],
Cell[123041, 3116, 184, 3, 38, "Text",ExpressionUUID->"0603c525-77de-4721-bdb1-426fb8c89940"],
Cell[CellGroupData[{
Cell[123250, 3123, 848, 20, 57, "Input",ExpressionUUID->"fdf23d05-d6dc-4db0-9b65-b73f42f99edc"],
Cell[124101, 3145, 1078, 30, 60, "Print",ExpressionUUID->"3b9fa05f-b1d3-4b7b-9d73-7661feab9083"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125216, 3180, 833, 23, 57, "Input",ExpressionUUID->"49acb0e0-3968-48d6-b80a-5325668c9be4"],
Cell[126052, 3205, 1060, 29, 60, "Print",ExpressionUUID->"29e6fcd2-c2dd-40c4-aefc-26bd396bb8d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127149, 3239, 651, 17, 57, "Input",ExpressionUUID->"5100c396-663f-468f-aa1d-ddd203268a95"],
Cell[127803, 3258, 1028, 28, 60, "Print",ExpressionUUID->"40d95d98-cd8b-4fda-a01c-4459af8df771"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128868, 3291, 625, 15, 57, "Input",ExpressionUUID->"73d049e2-7c3a-4b6e-8e7e-e081bb04a0c6"],
Cell[129496, 3308, 1093, 33, 69, "Print",ExpressionUUID->"722edc7d-89d4-441f-a429-995a271e6042"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130626, 3346, 889, 19, 110, "Input",ExpressionUUID->"4447d4b6-a9c2-447c-88c9-abe49dea8890"],
Cell[CellGroupData[{
Cell[131540, 3369, 489, 11, 28, "Print",ExpressionUUID->"bdf2cdfa-d5c9-4177-8721-5b7b55fd3fe7"],
Cell[132032, 3382, 503, 12, 28, "Print",ExpressionUUID->"5a1eaad2-2e4d-4e64-be11-c330910e0953"],
Cell[132538, 3396, 402, 9, 28, "Print",ExpressionUUID->"b9896ca6-3d50-454a-8ca7-15fec0f65dde"],
Cell[132943, 3407, 422, 10, 28, "Print",ExpressionUUID->"30cac45e-6019-4b01-91fa-e6da25b09359"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[133426, 3424, 216, 3, 40, "Subsection",ExpressionUUID->"53888805-8636-46dd-8546-4715fb68a977"],
Cell[133645, 3429, 5631, 151, 142, "Text",ExpressionUUID->"890c0707-542d-46a7-ae8d-b7c766ac6a40"],
Cell[CellGroupData[{
Cell[139301, 3584, 2934, 77, 365, "Input",ExpressionUUID->"08d41423-3ec4-4b32-918e-f8a1cd78c818"],
Cell[CellGroupData[{
Cell[142260, 3665, 1533, 29, 49, "Print",ExpressionUUID->"54dca74b-ef8d-4a59-9464-bcab2d70c2d8"],
Cell[143796, 3696, 1530, 29, 49, "Print",ExpressionUUID->"44dadafb-2d8d-480b-b43c-d1963d379fa0"],
Cell[145329, 3727, 1951, 40, 78, "Print",ExpressionUUID->"a7f3d676-6ccc-4a85-b1e0-a122ff30968c"],
Cell[147283, 3769, 1279, 31, 78, "Print",ExpressionUUID->"846ced16-e7de-4cb3-997c-9d4a899af815"],
Cell[148565, 3802, 1442, 38, 78, "Print",ExpressionUUID->"5f625950-5640-4850-b581-e3db2a12074a"],
Cell[150010, 3842, 1329, 33, 78, "Print",ExpressionUUID->"f0a3d421-a323-4048-af3f-378f853e4a5c"],
Cell[151342, 3877, 2070, 46, 78, "Print",ExpressionUUID->"727924c2-b614-4717-935d-ad2d5011cb26"]
}, Open  ]]
}, Open  ]],
Cell[153439, 3927, 2958, 77, 88, "Text",ExpressionUUID->"16e12a01-6188-4023-afeb-e1b07d19e1a4"],
Cell[CellGroupData[{
Cell[156422, 4008, 1185, 37, 104, "Input",ExpressionUUID->"b1765562-4c35-44ec-8f00-d02b4deb4dd4"],
Cell[157610, 4047, 1461, 41, 96, "Print",ExpressionUUID->"480bc65d-8338-4e26-91c1-b6d2e786ffa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159108, 4093, 627, 15, 57, "Input",ExpressionUUID->"cbae4902-9350-42ca-853c-f308a564c392"],
Cell[159738, 4110, 1531, 42, 96, "Print",ExpressionUUID->"9b2326b3-8723-40a2-bde6-c50fc1506619"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161306, 4157, 917, 25, 57, "Input",ExpressionUUID->"2da998c5-f59b-4bc7-b3db-8c22eb790bf3"],
Cell[162226, 4184, 1588, 44, 96, "Print",ExpressionUUID->"2762ed5b-e7ce-4579-ae40-23d10580b573"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[163875, 4235, 190, 3, 58, "Section",ExpressionUUID->"3150ffd2-75d2-4fc5-839f-9c17d0580ad3"],
Cell[CellGroupData[{
Cell[164090, 4242, 170, 3, 58, "Subsection",ExpressionUUID->"b930bdd9-3f7f-4f3f-ba2c-e4f1aa1d1294"],
Cell[164263, 4247, 1596, 45, 83, "Text",ExpressionUUID->"4ede7cdb-264f-4f2b-9647-270daa494a74"],
Cell[CellGroupData[{
Cell[165884, 4296, 791, 24, 105, "Input",ExpressionUUID->"2190133e-dcc7-43c6-bd68-174dd330fbe9"],
Cell[166678, 4322, 327, 9, 57, "Output",ExpressionUUID->"f21b9a6e-835f-4596-b45f-2a5b1b8773d2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[167054, 4337, 187, 3, 40, "Subsection",ExpressionUUID->"e63473c4-a89e-4b58-a4bd-c23856cccb00"],
Cell[167244, 4342, 5411, 145, 201, "Text",ExpressionUUID->"abce9887-4150-4d8a-8bce-9a5007715dd9"],
Cell[CellGroupData[{
Cell[172680, 4491, 181, 3, 49, "Subsubsection",ExpressionUUID->"52885431-1f1d-4b69-9275-95e7f19aea09"],
Cell[CellGroupData[{
Cell[172886, 4498, 1464, 43, 125, "Input",ExpressionUUID->"78cd0672-10f0-487a-a249-659dd1507fdc"],
Cell[174353, 4543, 451, 12, 28, "Print",ExpressionUUID->"8f003c93-4fc3-40a6-99d0-acd7d139974b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[174853, 4561, 178, 3, 49, "Subsubsection",ExpressionUUID->"16720fd5-a602-417e-bd2e-542d77807571"],
Cell[CellGroupData[{
Cell[175056, 4568, 1224, 38, 60, "Input",ExpressionUUID->"fea13180-37e1-497d-a684-f0f9ae2bfcb3"],
Cell[176283, 4608, 500, 14, 36, "Output",ExpressionUUID->"e1ce75b2-be8c-4a65-bc69-2e7e08757312"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176832, 4628, 184, 3, 49, "Subsubsection",ExpressionUUID->"7f06f54f-fb38-46b7-8d73-50ae5d07732b"],
Cell[CellGroupData[{
Cell[177041, 4635, 1469, 42, 125, "Input",ExpressionUUID->"7d3561b6-121e-401d-958d-58c9556de92b"],
Cell[178513, 4679, 479, 13, 28, "Print",ExpressionUUID->"5cd665a3-ab92-4e46-901b-8fc5be234d63"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179041, 4698, 196, 3, 49, "Subsubsection",ExpressionUUID->"515ccf5f-7589-4777-a44f-170882e44281"],
Cell[CellGroupData[{
Cell[179262, 4705, 3714, 116, 237, "Input",ExpressionUUID->"0e27a091-9f75-4b18-988e-aa6fec68091c"],
Cell[182979, 4823, 479, 13, 28, "Print",ExpressionUUID->"b5ffb633-9250-4e80-8979-be085161ccc2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183507, 4842, 180, 3, 49, "Subsubsection",ExpressionUUID->"b633fbc2-02bf-4d50-a6c3-897f678ce3fd"],
Cell[CellGroupData[{
Cell[183712, 4849, 1472, 43, 100, "Input",ExpressionUUID->"cc47acfd-7e89-4d94-b2f3-3ecc957e92d3"],
Cell[185187, 4894, 866, 25, 123, "Output",ExpressionUUID->"7bc6320c-3b05-4ee9-868b-55907f44a400"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[186114, 4926, 181, 3, 40, "Subsection",ExpressionUUID->"a0657b09-35df-4359-adb3-c0cbd9e5a59a"],
Cell[186298, 4931, 1231, 35, 58, "Text",ExpressionUUID->"5d09796a-55df-4c5e-8239-801fa68bd298"],
Cell[CellGroupData[{
Cell[187554, 4970, 634, 18, 57, "Input",ExpressionUUID->"3a00ccb8-be56-45b4-a0a8-f10735330c8e"],
Cell[188191, 4990, 476, 14, 36, "Output",ExpressionUUID->"acaa7546-1127-4c8e-bb78-ecc076f53789"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[188728, 5011, 172, 3, 58, "Section",ExpressionUUID->"0dff84e4-2fde-4f36-9f29-dfaf4d4ad9b9"],
Cell[CellGroupData[{
Cell[188925, 5018, 187, 3, 58, "Subsection",ExpressionUUID->"2ab91690-6710-4ce0-ae9f-701e255c241e"],
Cell[189115, 5023, 885, 24, 60, "Text",ExpressionUUID->"bef2eada-bd3a-4bd3-8003-52959bd15458"],
Cell[CellGroupData[{
Cell[190025, 5051, 1082, 28, 80, "Input",ExpressionUUID->"c205c11b-73db-4bcc-8479-516afded70ae"],
Cell[191110, 5081, 25079, 435, 270, "Output",ExpressionUUID->"96b85199-7a25-4c64-9f08-1b7453ae5fcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216226, 5521, 623, 17, 55, "Input",ExpressionUUID->"8c643499-d3f3-4537-811e-8bc883f5a544"],
Cell[216852, 5540, 1607, 53, 423, "Output",ExpressionUUID->"e710e17f-b3ce-4c1a-a84a-bba2d168ccdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218496, 5598, 672, 17, 32, "Input",ExpressionUUID->"0186d185-5572-4501-8818-461f9903c58b"],
Cell[219171, 5617, 4692, 123, 270, "Output",ExpressionUUID->"acbf6f74-7286-4f28-955d-3393a562c776"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223900, 5745, 230, 5, 32, "Input",ExpressionUUID->"f2c3749a-fdfe-4e6e-8c00-6fcd1eb3376b"],
Cell[224133, 5752, 25908, 448, 270, "Output",ExpressionUUID->"0fb5fc16-0f91-46c0-b355-14694ea44c07"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[250090, 6206, 177, 3, 40, "Subsection",ExpressionUUID->"c94bf70d-b5dd-48f6-90b7-c832cc3fac74"],
Cell[250270, 6211, 759, 21, 58, "Text",ExpressionUUID->"4482cbbd-b021-4a68-a7e4-aa979f3f780b"],
Cell[CellGroupData[{
Cell[251054, 6236, 985, 28, 79, "Input",ExpressionUUID->"12f91193-037c-41a6-8fa1-ba8d352aa8b5"],
Cell[252042, 6266, 24715, 429, 266, "Output",ExpressionUUID->"ca01ccb3-572c-46f0-94f7-02c2a6665f3b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[276806, 6701, 196, 3, 40, "Subsection",ExpressionUUID->"57aa3e37-ded0-42a9-aa97-c66a14de562a"],
Cell[277005, 6706, 1035, 29, 58, "Text",ExpressionUUID->"5f629ddb-f37a-48c3-bff8-be709b418ca7"],
Cell[CellGroupData[{
Cell[278065, 6739, 1207, 32, 79, "Input",ExpressionUUID->"107a72f0-6aac-4705-ad6d-1ef34786098e"],
Cell[279275, 6773, 36564, 623, 265, 24202, 419, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"9f3968de-36eb-447e-acba-5bde09367887"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[315888, 7402, 177, 3, 40, "Subsection",ExpressionUUID->"1b514d27-16f2-4fd0-a948-8d60ab504ad7"],
Cell[316068, 7407, 1444, 37, 62, "Text",ExpressionUUID->"40bb42af-ff82-40b5-97e7-fd961771883f"],
Cell[CellGroupData[{
Cell[317537, 7448, 1334, 41, 129, "Input",ExpressionUUID->"12af2d7e-1448-4123-859a-ac1feb87d44e"],
Cell[318874, 7491, 45271, 762, 288, "Output",ExpressionUUID->"bcd8255b-4f94-42f1-9902-30c905948fac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364182, 8258, 706, 20, 92, "Input",ExpressionUUID->"1b81519f-371a-468b-857b-0ae09527e1be"],
Cell[364891, 8280, 1612, 48, 348, "Output",ExpressionUUID->"553df2d6-7ff1-43c0-9248-194ca793afc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366540, 8333, 505, 13, 32, "Input",ExpressionUUID->"6ca216c5-5bef-47ae-acc9-0662f9aeb4ce"],
Cell[367048, 8348, 3951, 103, 263, "Output",ExpressionUUID->"5b65447b-971a-47e0-83e1-4c7e9748c391"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371036, 8456, 231, 5, 32, "Input",ExpressionUUID->"420fba9f-449d-4c25-a9d5-398a5549c7bf"],
Cell[371270, 8463, 74246, 1239, 288, 45800, 772, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7fb2ccca-9961-41cc-b969-960acb3aded4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[445565, 9708, 178, 3, 40, "Subsection",ExpressionUUID->"175a2a99-4772-4b1a-b432-7ad9e28d0606"],
Cell[445746, 9713, 1654, 46, 73, "Text",ExpressionUUID->"17fbbd24-e29c-4048-ab78-61f73cc93d02"],
Cell[CellGroupData[{
Cell[447425, 9763, 1277, 39, 177, "Input",ExpressionUUID->"3354aa83-94f2-413c-a3c8-ed6e98c4b001"],
Cell[448705, 9804, 7992, 146, 182, "Output",ExpressionUUID->"3068ae1d-5e68-4493-9948-fc768bcc9412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456734, 9955, 776, 21, 85, "Input",ExpressionUUID->"36c29a41-a99e-4712-bcd6-37f008332fc7"],
Cell[457513, 9978, 39354, 665, 103, "Output",ExpressionUUID->"ac375d63-b768-4e3a-b6f0-4335cf1cd357"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[496916, 10649, 237, 4, 40, "Subsection",ExpressionUUID->"2030b2f4-7c18-4274-b1e6-9ccf9f89ad9c"],
Cell[497156, 10655, 734, 20, 58, "Text",ExpressionUUID->"f5e761c8-e865-4122-98de-4648180e16b8"],
Cell[CellGroupData[{
Cell[497915, 10679, 1080, 30, 102, "Input",ExpressionUUID->"46d52602-3962-4968-8abe-ea658849dd04"],
Cell[498998, 10711, 13555, 245, 414, 4988, 103, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"87dee456-621e-4b5a-b56e-ebf46253a6ba"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[512614, 10963, 218, 4, 58, "Section",ExpressionUUID->"b3f1b79d-30ea-4180-880f-a2bb1c60c03e"],
Cell[CellGroupData[{
Cell[512857, 10971, 239, 4, 58, "Subsection",ExpressionUUID->"681d2c77-389b-4499-b709-0db3fe041fa5"],
Cell[513099, 10977, 1141, 30, 58, "Text",ExpressionUUID->"bcfc14b2-364a-4f75-81ef-804242df2100"],
Cell[CellGroupData[{
Cell[514265, 11011, 1971, 59, 147, "Input",ExpressionUUID->"22afbbda-359f-45a8-ad71-6d14ed11f9ae"],
Cell[516239, 11072, 623, 17, 28, "Print",ExpressionUUID->"36277ff6-1067-47a6-b71c-efcb86777b5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516899, 11094, 1042, 28, 55, "Input",ExpressionUUID->"c5088cb5-fb40-4624-b1a0-589e7ea38dac"],
Cell[517944, 11124, 146267, 2413, 423, 71739, 1191, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"fa8e318d-220d-4318-966c-6242d01f4db6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[664260, 13543, 349, 10, 40, "Subsection",ExpressionUUID->"46ea5c3e-2b6a-4499-b121-8d7ac9e1cf4f"],
Cell[664612, 13555, 2165, 57, 85, "Text",ExpressionUUID->"8bb674f6-5468-43d6-abd1-32627c675728"],
Cell[CellGroupData[{
Cell[666802, 13616, 1070, 31, 102, "Input",ExpressionUUID->"21c49067-5f6f-4df3-b5b1-fbeb286cc665"],
Cell[667875, 13649, 552, 14, 28, "Print",ExpressionUUID->"cad0161a-4db1-41ca-bcc5-ab0c5dc320bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[668464, 13668, 1379, 36, 78, "Input",ExpressionUUID->"93ebf482-f15d-4931-b2a1-9d7d96abae8a"],
Cell[669846, 13706, 31407, 558, 355, 11563, 232, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c7a8343d-4a3d-4f4c-b438-8d490cff9408"]
}, Open  ]],
Cell[CellGroupData[{
Cell[701290, 14269, 491, 13, 57, "Input",ExpressionUUID->"d0a8e409-56fe-4fc0-9d2d-ecf689ffb2cf"],
Cell[701784, 14284, 399, 9, 28, "Print",ExpressionUUID->"f080127f-2ffa-4108-858c-6a6bf14b8aee"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[702232, 14299, 362, 11, 40, "Subsection",ExpressionUUID->"b0ae9ccb-101f-496d-b2d7-9a1910512b7a"],
Cell[702597, 14312, 3763, 102, 97, "Text",ExpressionUUID->"3ef4f543-7093-4a3b-bcbb-09a145948ad8"],
Cell[CellGroupData[{
Cell[706385, 14418, 1153, 32, 100, "Input",ExpressionUUID->"1ac69b09-fbfa-480c-9cac-1468a7c5afb7"],
Cell[707541, 14452, 408, 9, 359, "Output",ExpressionUUID->"84182986-3967-47be-8948-a6e0ee06a97b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[707986, 14466, 689, 19, 97, "Input",ExpressionUUID->"f89fdff6-cfbb-4701-a03a-bd6de4890d8a"],
Cell[708678, 14487, 400, 10, 40, "Print",ExpressionUUID->"e78e67c9-3f82-4ebc-9b61-400f134f9405"]
}, Open  ]],
Cell[CellGroupData[{
Cell[709115, 14502, 547, 13, 109, "Input",ExpressionUUID->"8141fd62-17cb-493a-8bac-8a4166be2114"],
Cell[709665, 14517, 402, 10, 45, "Print",ExpressionUUID->"71226e3f-5531-4231-be09-d57c99586114"]
}, Open  ]],
Cell[CellGroupData[{
Cell[710104, 14532, 787, 21, 142, "Input",ExpressionUUID->"bb6a1d35-266c-4fac-b1f0-32c1b4878fe7"],
Cell[710894, 14555, 492, 13, 45, "Print",ExpressionUUID->"cd9fa5ac-3b2c-4b65-9d2e-fedc9e13c1cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[711423, 14573, 413, 9, 57, "Input",ExpressionUUID->"d66bf4f8-1488-444a-9fd3-4677a858db67"],
Cell[711839, 14584, 550, 16, 40, "Print",ExpressionUUID->"c478e4ae-d928-4f71-9a21-7ff94b2970be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712426, 14605, 1724, 45, 78, "Input",ExpressionUUID->"c69f224a-673a-420c-a657-8373767b13d9"],
Cell[714153, 14652, 39424, 688, 352, 11596, 231, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5aecab0e-12ee-4ae3-aa59-cbf1190d51ca"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[753626, 15346, 346, 9, 40, "Subsection",ExpressionUUID->"c5a43b40-4df4-483f-b17c-6c5bdace6ea3"],
Cell[753975, 15357, 1517, 40, 73, "Text",ExpressionUUID->"dc3d9f57-3740-43e6-89cc-b010bd2dea24"],
Cell[CellGroupData[{
Cell[755517, 15401, 1436, 44, 173, "Input",ExpressionUUID->"79038adf-c41c-4971-828c-754b0b8b27c9"],
Cell[756956, 15447, 526, 13, 40, "Print",ExpressionUUID->"24614e0a-8b46-49ff-a017-3f4a9b6ba324"]
}, Open  ]],
Cell[CellGroupData[{
Cell[757519, 15465, 501, 13, 57, "Input",ExpressionUUID->"606d5b70-fad8-4b06-b58e-8930a7ae477b"],
Cell[758023, 15480, 603, 18, 40, "Print",ExpressionUUID->"337cc7eb-973c-451b-b4b3-f4b1c90bed37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758663, 15503, 2123, 60, 127, "Input",ExpressionUUID->"a9f8a9ba-8935-474e-b613-f6f5716ef854"],
Cell[760789, 15565, 115143, 1895, 393, 63066, 1041, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c546a4f2-112f-44c5-b13c-fb0f7d7f1f94"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[875993, 17467, 158, 3, 58, "Section",ExpressionUUID->"1ba0285c-b66c-4ae7-9dbe-1313e0d24f53"],
Cell[CellGroupData[{
Cell[876176, 17474, 170, 3, 58, "Subsection",ExpressionUUID->"629dc626-b892-4b65-af99-7073581e5e69"],
Cell[876349, 17479, 1616, 44, 62, "Text",ExpressionUUID->"6db223ef-11fb-4ab2-aa22-b8779c3d6cfd"],
Cell[CellGroupData[{
Cell[877990, 17527, 1574, 40, 155, "Input",ExpressionUUID->"7b747a7a-87a1-419d-ba6e-ce1b353209a4"],
Cell[879567, 17569, 2501, 47, 365, "Output",ExpressionUUID->"cd747aec-8535-4042-9d3b-8d608e404bca"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[882117, 17622, 196, 3, 40, "Subsection",ExpressionUUID->"247c1cab-1d8d-4791-b0a7-9b78ae63e531"],
Cell[882316, 17627, 1550, 40, 73, "Text",ExpressionUUID->"6f4e72d2-d746-400a-b77d-642dcea385d3"],
Cell[CellGroupData[{
Cell[883891, 17671, 2248, 63, 257, "Input",ExpressionUUID->"c445baf2-3d33-4e96-bf78-98ef99ff05a9"],
Cell[886142, 17736, 2716, 53, 454, "Output",ExpressionUUID->"49e90bab-ef79-4c3d-b8fd-26df81fb16b3"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

