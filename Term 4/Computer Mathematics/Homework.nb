(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    667767,      13496]
NotebookOptionsPosition[    647760,      13138]
NotebookOutlinePosition[    648199,      13155]
CellTagsIndexPosition[    648156,      13152]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["1. Introduction to Wolfram Mathematica", "Section",
 CellChangeTimes->{{3.886655143600127*^9, 3.886655166337097*^9}, {
  3.886655243270352*^9, 
  3.886655261269683*^9}},ExpressionUUID->"7c2bb4b6-f563-42bc-be2c-\
d153bc86b603"],

Cell[CellGroupData[{

Cell["1.1. Arithmetical Operations", "Subsection",
 CellChangeTimes->{{3.886655174806015*^9, 3.88665517991639*^9}, {
  3.88665526338832*^9, 
  3.886655285613377*^9}},ExpressionUUID->"8c9c8c9e-02b1-4af8-9a6d-\
7bf3208abedf"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Find value of expression ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"0.134", "+", "0.05"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"18", "+", 
       FractionBox["1", "6"]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox["11", "14"]}], ")"}], "-", 
     RowBox[{
      FractionBox["2", "15"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        FractionBox["6", "7"]}], ")"}]}]}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "58d40e89-95a9-4dda-bc77-830dc84a4ded"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886655301229691*^9, 3.88665536760493*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"deef2c9f-a066-4ff1-9065-7bab7a384d78"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "Answer", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Answer", " ", "=", " ", 
   FractionBox[
    RowBox[{"0.134", "+", "0.05"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"18", "+", 
       FractionBox["1", "6"]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       FractionBox["11", "14"]}], ")"}], "-", 
     RowBox[{
      FractionBox["2", "15"], 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        FractionBox["6", "7"]}], ")"}]}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Answer is \>\"", ",", " ", "Answer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.88665521662598*^9, 3.886655221991459*^9}, {
  3.886655382294469*^9, 3.886655459823698*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5aca2649-fd42-422f-93eb-10a0e33b4de5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Answer is \"\>", "\[InvisibleSpace]", "0.0115`"}],
  SequenceForm["Answer is ", 0.0115],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8866554554126062`*^9, 3.886655460171793*^9}},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"1544925b-049d-4cea-a77e-825a13a28a1e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
1.2. Evaluating expression containing solely elementary functions\
\>", "Subsection",
 CellChangeTimes->{{3.8866554890670156`*^9, 
  3.8866555063993692`*^9}},ExpressionUUID->"ad997c4e-905d-4d2a-948f-\
d95738043827"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Find the value of expression ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", 
         FractionBox["1", "3"], "cos", 
         RowBox[{"(", 
           FractionBox["1", 
            RowBox[{"tan", "3"}]], ")"}], "+", 
         FractionBox["1", "5"], 
         FractionBox[
          RowBox[{
            SuperscriptBox["sin", "2"], "(", 
            RowBox[{"5", 
              SqrtBox["2"]}], ")"}], 
          RowBox[{"cos", 
            RowBox[{"10", 
              SuperscriptBox[
               StyleBox["e", "TI"], "3"]}]}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "y=\\frac{1}{3}\\cos\\left( \\frac{1}{\\tan \
3}\\right)+\\frac{1}{5}\\frac{\\sin^2(5\\sqrt{2})}{\\cos{10e^3}}", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "556cda8d-afcf-465e-af83-835cbed8a31a"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886655530999673*^9, 3.886655661645049*^9}, {
  3.88665569910795*^9, 3.886655706497026*^9}, {3.886655859950633*^9, 
  3.886655863889464*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"a2adb66d-5883-4d99-b9a9-5c7c461594c1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "Answer"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "3"], 
     RowBox[{"Cos", "[", 
      FractionBox["1", 
       RowBox[{"Tan", "[", "3", "]"}]], "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "5"], " ", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Sin", "[", 
         RowBox[{"5", " ", 
          RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], ")"}], "2"], 
      RowBox[{"Cos", "[", 
       RowBox[{"10", 
        SuperscriptBox["\[ExponentialE]", "3"]}], "]"}]]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Answer", " ", "=", " ", 
   RowBox[{"N", "[", "y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Answer is \>\"", ",", " ", "Answer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886655876540362*^9, 3.8866560245740967`*^9}, {
  3.886656995231079*^9, 3.886656995633279*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5360ff38-79ae-4478-ab8f-6170ea08c630"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Answer is \"\>", "\[InvisibleSpace]", "0.35061102822081447`"}],
  
  SequenceForm["Answer is ", 0.35061102822081447`],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886656016139669*^9, 3.886656024841291*^9}, 
   3.886656996324541*^9},
 CellLabel->
  "During evaluation of \
In[35]:=",ExpressionUUID->"fb8b17f1-9e03-40e8-9cc6-1d7cf14e272c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Algebraic Evaluation", "Section",
 CellChangeTimes->{{3.886656050465459*^9, 
  3.886656073266295*^9}},ExpressionUUID->"39b763f7-5081-4ecd-99fe-\
c72379fba2f0"],

Cell[CellGroupData[{

Cell["2.1. Algebraic Manipulations", "Subsection",
 CellChangeTimes->{{3.886656063260935*^9, 
  3.8866560778855333`*^9}},ExpressionUUID->"c7c1c526-296f-43db-bd41-\
70b6283d4b6f"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Simplify expression ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{"2", 
            SuperscriptBox[
             StyleBox["a", "TI"], "2"], 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 StyleBox["b", "TI"], "+", 
                 StyleBox["c", "TI"]}], ")"}], 
             RowBox[{"2", 
               StyleBox["n", "TI"]}]], "-", 
            FractionBox["1", "2"]}], 
          RowBox[{
            StyleBox["a", "TI"], 
            SuperscriptBox[
             StyleBox["n", "TI"], "2"], "-", 
            SuperscriptBox[
             StyleBox["a", "TI"], "3"], "-", "2", 
            SuperscriptBox[
             StyleBox["a", "TI"], "2"], "-", 
            StyleBox["a", "TI"]}]], ":", 
         FractionBox[
          RowBox[{"2", 
            StyleBox["a", "TI"], 
            SuperscriptBox[
             RowBox[{"(", 
               RowBox[{
                 StyleBox["b", "TI"], "+", 
                 StyleBox["c", "TI"]}], ")"}], 
             StyleBox["n", "TI"]], "-", "1"}], 
          RowBox[{
            SuperscriptBox[
             StyleBox["a", "TI"], "2"], 
            StyleBox["c", "TI"], "-", 
            StyleBox["a", "TI"], 
            RowBox[{"(", 
              RowBox[{
                StyleBox["n", "TI"], 
                StyleBox["c", "TI"], "-", 
                StyleBox["c", "TI"]}], ")"}]}]]}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\frac{2a^2(b+c)^{2n}-\\frac{1}{2}}{an^2-a^3-2a^2-a}:\\frac{2a(b+c)^n-1}\
{a^2c-a(nc-c)}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0ec439c3-be74-4bc9-98f5-e72d8db85052"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886656089558571*^9, 3.886656089638958*^9}, {
  3.886656123350178*^9, 3.8866561361595297`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4a0d36ee-e049-486c-a83e-5b3e3c9fe194"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "n", ",", "Result"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Result", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"2", 
         SuperscriptBox["a", "2"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], 
          RowBox[{"2", "n"}]]}], "-", 
        FractionBox["1", "2"]}], 
       RowBox[{
        RowBox[{"a", " ", 
         SuperscriptBox["n", "2"]}], "-", 
        SuperscriptBox["a", "3"], "-", 
        RowBox[{"2", 
         SuperscriptBox["a", "2"]}], "-", "a"}]], ")"}], "/", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"2", "a", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], "n"]}], "-", "1"}], 
       RowBox[{
        RowBox[{
         SuperscriptBox["a", "2"], " ", "c"}], "-", 
        RowBox[{"a", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"n", " ", "c"}], "-", "c"}], ")"}]}]}]], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Result is \>\"", ",", " ", "Result"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886656231874977*^9, 3.886656347733254*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"531603c5-d4e0-424c-8d0e-8056bccee8ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Result is \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "a", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], "n"]}]}], ")"}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "a", "+", "n"}], ")"}]}]]}]}],
  SequenceForm[
  "Result is ", 
   Rational[-1, 2] $CellContext`c (1 + 
    2 $CellContext`a ($CellContext`b + $CellContext`c)^$CellContext`n)/(
   1 + $CellContext`a + $CellContext`n)],
  Editable->False]], "Print",
 CellChangeTimes->{3.8866563488747187`*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"2eecb608-6c02-44c2-8823-3f19db0b928f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.2. Finding values of algebraic expressions", "Subsection",
 CellChangeTimes->{{3.886656386205278*^9, 
  3.886656397737224*^9}},ExpressionUUID->"8897ff19-fd05-44ea-ae8b-\
daeffec7b1a5"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Calculate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         RowBox[{"(", 
           RowBox[{
             SqrtBox[
              RowBox[{
                StyleBox["a", "TI"], 
                StyleBox["b", "TI"]}]], "-", 
             FractionBox[
              RowBox[{
                StyleBox["a", "TI"], 
                StyleBox["b", "TI"]}], 
              RowBox[{
                StyleBox["a", "TI"], "+", 
                SqrtBox[
                 RowBox[{
                   StyleBox["a", "TI"], 
                   StyleBox["b", "TI"]}]]}]]}], ")"}], ":", 
         FractionBox[
          RowBox[{
            RadicalBox[
             RowBox[{
               StyleBox["a", "TI"], 
               StyleBox["b", "TI"]}], "4"], "-", 
            SqrtBox[
             StyleBox["b", "TI"]]}], 
          RowBox[{
            StyleBox["a", "TI"], "-", 
            StyleBox["b", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\left(\\sqrt{ab}-\\frac{ab}{a+\\sqrt{ab}}\\right):\\frac{\\sqrt[4]{ab}-\
\\sqrt{b}}{a-b}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c995f23f-6dd0-45d0-8c2b-be68acfd0f08"],
 " for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]", "8", ",", 
         StyleBox["b", "TI"], "\[LongEqual]", "2"}], TraditionalForm], 
     "errors" -> {}, "input" -> "a=8,b=2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "b9222f40-9312-42bb-9316-8ad262b2b897"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886656405112088*^9, 3.886656427592371*^9}, {
  3.8866565264974527`*^9, 3.8866565308376913`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ec8da01f-daf8-4dd4-9633-dd8517257e26"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", 
  RowBox[{"a", ",", "b", ",", "Answer"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Expr", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"a", " ", "b"}], "]"}], "-", 
      FractionBox[
       RowBox[{"a", " ", "b"}], 
       RowBox[{"a", "+", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"a", " ", "b"}], "]"}]}]]}], ")"}], "/", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"Surd", "[", 
        RowBox[{
         RowBox[{"a", " ", "b"}], ",", "4"}], "]"}], "-", 
       RowBox[{"Sqrt", "[", "b", "]"}]}], 
      RowBox[{"a", "-", "b"}]], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Answer", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Expr", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "->", "8"}], ",", 
       RowBox[{"b", "->", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The answer is \>\"", ",", " ", "Answer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8866565449188747`*^9, 3.886656577202702*^9}, {
  3.886656657472927*^9, 3.8866567573979807`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"c8fe7f5d-54fa-4b31-a5ec-dae1a920eba6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The answer is \"\>", "\[InvisibleSpace]", 
   RowBox[{"8", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SqrtBox["2"]}], ")"}]}]}],
  SequenceForm["The answer is ", 8 (2 + 2^Rational[1, 2])],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8866567125844593`*^9, 3.8866567577097893`*^9}},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"d3c51742-66e6-4403-9ffd-08bbf1c387be"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.3. Solving equations", "Subsection",
 CellChangeTimes->{{3.886656781392222*^9, 
  3.8866567875700293`*^9}},ExpressionUUID->"6f44eccd-8995-45fa-8e28-\
9e14d67a111e"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox["1", 
          StyleBox["a", "TI"]], "+", 
         FractionBox["1", 
          RowBox[{
            StyleBox["a", "TI"], "+", 
            StyleBox["x", "TI"]}]], "+", 
         FractionBox["1", 
          RowBox[{
            StyleBox["a", "TI"], "+", "2", 
            StyleBox["x", "TI"]}]], "\[LongEqual]", "0"}], TraditionalForm], 
     "errors" -> {}, "input" -> 
     "\\frac{1}{a}+\\frac{1}{a+x}+\\frac{1}{a+2x}=0", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "bb1fce68-0b20-4475-804e-a12c88deda4c"],
 " for ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0ee8c642-2d2c-4092-9506-ef2ccc7d948c"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886656797380159*^9, 3.88665684842073*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"af031b6d-f630-4780-85c9-f553ff8d6bff"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "a"], "+", 
     FractionBox["1", 
      RowBox[{"a", "+", "x"}]], "+", 
     FractionBox["1", 
      RowBox[{"a", "+", 
       RowBox[{"2", " ", "x"}]}]]}], "==", "0"}], ",", "x"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8866568642159023`*^9, 3.886656880365831*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"8f883bd5-51cf-4c00-8c37-8cb1fbdff08b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "a"}], "-", 
        RowBox[{
         SqrtBox["3"], " ", "a"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "a"}], "+", 
        RowBox[{
         SqrtBox["3"], " ", "a"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.886656880927511*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"c4c3b28b-2cf6-453e-9136-3eb51a856df4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Elements of Analytical Geometry", "Section",
 CellChangeTimes->{{3.886656943030428*^9, 
  3.886656960513402*^9}},ExpressionUUID->"4a0fa35c-e200-4d9c-ae01-\
651885ffe84a"],

Cell[CellGroupData[{

Cell["3.1. Operating with vectors", "Subsection",
 CellChangeTimes->{{3.886656984039689*^9, 3.88665698475525*^9}, {
  3.886657021230483*^9, 
  3.8866570287306232`*^9}},ExpressionUUID->"1ae86241-7ec7-4802-8702-\
e43d60d90e8d"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " For vectors ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["a", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          RowBox[{"[", 
            RowBox[{"-2", ",", "7", ",", "-1"}], "]"}], 
          StyleBox["T", "TI"]], ",", 
         StyleBox["b", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          RowBox[{"[", 
            RowBox[{"-3", ",", "5", ",", "2"}], "]"}], 
          StyleBox["T", "TI"]], ",", 
         SubscriptBox[
          StyleBox["c", "TI"], "1"], "\[LongEqual]", "2", 
         StyleBox["a", "TI"], "+", "3", 
         StyleBox["b", "TI"], ",", 
         SubscriptBox[
          StyleBox["c", "TI"], "2"], "\[LongEqual]", "3", 
         StyleBox["a", "TI"], "+", "2", 
         StyleBox["b", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "a=[-2,7,-1]^{T}, b=[-3,5,2]^{T}, c_1=2a+3b, c_2 = 3a+2b", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c2e6789b-379d-47aa-a26e-d24a31b5db4b"],
 " determine whether ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "33312229-6d48-4a61-9efa-73c979021a98"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e66ec0a5-3bf6-4dc2-aad1-fe1f7e0817ee"],
 " are collinear. Find lengths of vectors ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["a", "TI"], TraditionalForm], "errors" -> {}, "input" -> "a", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4c2adae6-9aeb-4519-bb36-070dba0096a6"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["b", "TI"], TraditionalForm], "errors" -> {}, "input" -> "b", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f2b5689c-da62-4a19-9512-9a6e66830057"],
 " and angle between them. Draw vectors ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["a", "TI"], TraditionalForm], "errors" -> {}, "input" -> "a", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c282741c-dd67-4293-880c-d11a793320d0"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["b", "TI"], TraditionalForm], "errors" -> {}, "input" -> "b", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "649f53c2-6182-41aa-ab90-64542531e64a"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8866570338593817`*^9, 3.886657058637619*^9}, {
  3.886657196040029*^9, 3.886657282407956*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"7648500d-af3d-4f53-b09d-b93489a7073f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c1", ",", "c2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "7", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "5", ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c1", "=", 
   RowBox[{
    RowBox[{"2", " ", "a"}], "+", 
    RowBox[{"3", " ", "b"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", 
   RowBox[{
    RowBox[{"3", "a"}], "+", 
    RowBox[{"2", "b"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratio", "=", 
   FractionBox["c1", "c2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Ratio is \>\"", ",", " ", "ratio"}], "]"}]}], "Input",
 CellChangeTimes->{{3.88665730202661*^9, 3.886657381464402*^9}, {
  3.886657425016295*^9, 3.886657483798194*^9}, {3.8866575408636208`*^9, 
  3.886657561620824*^9}, {3.88665762189209*^9, 3.886657663176512*^9}, {
  3.88665770302672*^9, 3.8866577200969*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"06d04f8a-3904-4aae-960a-51951fd07508"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Ratio is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["13", "12"], ",", 
     FractionBox["29", "31"], ",", "4"}], "}"}]}],
  SequenceForm["Ratio is ", {
    Rational[13, 12], 
    Rational[29, 31], 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886657720546398*^9, 3.886942100190852*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"f9176d94-4738-4801-a596-3e3b5b633fa8"]
}, Open  ]],

Cell[TextData[{
 "We thus conclude that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "1"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_1", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f48a0091-1827-4b21-906e-39a96055a57d"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["c", "TI"], "2"], TraditionalForm], "errors" -> {}, "input" -> 
     "c_2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "feac87d2-74a1-4d18-801d-fe539195ab4c"],
 " are not collinear."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8866577511928053`*^9, 3.886657766701714*^9}, {
  3.8869421892459993`*^9, 3.886942193545999*^9}},
 Background->None,ExpressionUUID->"6c76a3fe-108b-46a0-953c-5237864d59d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LengthOfA", "=", 
   RowBox[{"Norm", "[", "a", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthOfB", "=", 
   RowBox[{"Norm", "[", "b", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AngleAB", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"VectorAngle", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}], " ", "180"}], "\[Pi]"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Length of a is \>\"", ",", " ", "LengthOfA", ",", 
   "\"\< and length of b is \>\"", ",", " ", "LengthOfB"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Angle between a and b (in degrees) is \>\"", ",", " ", "AngleAB"}], 
  "]"}]}], "Input",
 CellFrame->{{0, 0}, {0, 0}},
 InitializationCell->True,
 CellChangeTimes->{{3.886657790045834*^9, 3.886657914770402*^9}},
 Background->None,
 CellLabel->"In[1]:=",ExpressionUUID->"51d87477-d41f-4b6e-b002-44f38639a54d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Length of a is \"\>", "\[InvisibleSpace]", 
   RowBox[{"Norm", "[", "a", "]"}], 
   "\[InvisibleSpace]", "\<\" and length of b is \"\>", "\[InvisibleSpace]", 
   RowBox[{"Norm", "[", "b", "]"}]}],
  SequenceForm["Length of a is ", 
   Norm[$CellContext`a], " and length of b is ", 
   Norm[$CellContext`b]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886657834421661*^9, 3.886657915415949*^9, 
  3.8869420998617353`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"aba160d2-497c-441a-839b-0f204a327e09"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Angle between a and b (in degrees) is \"\>", 
   "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"180", " ", 
     RowBox[{"VectorAngle", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], "\[Pi]"]}],
  SequenceForm[
  "Angle between a and b (in degrees) is ", 180 Pi^(-1) 
   VectorAngle[$CellContext`a, $CellContext`b]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886657834421661*^9, 3.886657915415949*^9, 
  3.886942099874403*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"2c2a1849-e5db-4b3c-9521-e8539469bfcd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"z", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
     RowBox[{"Arrowheads", "[", "0.1", "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{"z", ",", "a"}], "}"}], "]"}], ",", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{"z", ",", "b"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8869420133088703`*^9, 3.8869420309768744`*^9}, {
  3.88694207374021*^9, 3.886942146604549*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4411b014-6ac9-4912-9396-90d6989c7ff9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.886942147265896*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8e164d18-38f8-4e80-b76e-11a6be0f3270"],

Cell[BoxData[
 Graphics3DBox[
  {Thickness[0.02], Arrowheads[0.1], Arrow3DBox[{{0, 0, 0}, {-2, 7, -1}}], 
   Arrow3DBox[{{0, 0, 0}, {-3, 5, 2}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  ImageSize->{378.4006260379971, 306.9438411942022},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.4018330335296563`, -1.5475886111869162`, 1.812778963241322},
  ViewVertical->{0.11273988432340257`, 0.019382845831154433`, 
   0.9934354653273817}]], "Output",
 CellChangeTimes->{3.88694214727629*^9},
 CellLabel->"Out[14]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJytfQnYXUWR9vFbE0JCCCRsCbnsq+yRTcgVEQSEsBvW3EASQkBAVpHtiqAi
m6CAiEwQcUMdHWYUcYuOOrjhNjhuA3Ecl3/4x/lnHGccRc3c7qqurre7us8N
z3+f5/uS79xzqt+3qruqej3HLr185fLXLL38/HOXdo68dOklK88/97LOERdf
Org0+qKmGfnk4GefTjM2+P+6prF/fapp/n9d+Cf/e7Qz+NXlH/r+7+n7tfH7
teGrEf97tN+oj7/0Hf3M5Br+b2/w457v8219uf+7dP+zVEaPL/f8X3QtyMjK
4GdWh8vqmS5f6xaeAZnJM73CM+7+NckznYwPP/Nl/3s88F3H5fn7Zr8AeV/y
vydXq+8dzvC3x7zpC+DGctexrPDpMLa1LXJ7Jbl/i9931DP9RtlmE+Ma37da
P2vIrtm9p2R3+JrnN4LX1ojs74Jsi2t4xmFlnUwG3GtYfmgf3Rcql+rGeK+J
+l8D8r63fvL8M/869DO9wjOBZ1c908u44jPdRuldtWWxmX6G62HA1me5ur7T
/b/W93vcAVvZJ3EZX/E3uUdm0NPXn3feec8Mfq5bsWIF3cl6edr/nvjs4Ltf
D767ZfDj7vlH/tff+gzdSj5y6ucGtz44+Oqmwc+iwf/dxfkXXHCBE+EeO9td
88/9hJ6jejER7nnX8uXLnxr8/GJw75YXXngh6WvsbH7c/SwcfO0l/IgkUGuY
4iQ8P7jNfe0uzFu1atV/DP520g4a/JCkcXdb4OCAur8J0A9I3LdJJ06MiOPW
4gg5Yov9NSe4mXIQFxc+Wr7o6B/ou29F0YEIV4gpqwb/d6ID8iuWLVv2scHf
dw+uu79ZD076D1LpZKXmKUP6GF3T1mAyY6EUR2Nx1M9zg/+6Uh5UpUCL+yaJ
DBahp+jaE2w0KoAM64rR+jmIDTwSCYW6IYZl//YNkuqQfDaAn6BrT4eSvfLo
miNxd7BGUm+CpddFMzRf98pwkiejeVeHgqbStbtZO4qSVKHPcl2PVYh003yN
nnXf/27wrNNyo8oIdg5lPKXLmIh6yaoRKaR50v+eDKpzX2tj+uLYImB4Lu45
rlJKd3ZxRKP5O3osFOdbMKvXiXG1FNsY1gO2jrv1uUByWiw11DMndl1kR06K
SpVmOBENLc2Om6ZVIVyRct/0WGRW36gszlWwAU2LZpOqsRWJMusW+ePglkHU
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
BvOi/wXpJcHX\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"25188195-8bff-4639-a4d8-fc5ecccbc9d8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.2. Geometric calculations in Triangle", "Subsection",
 CellChangeTimes->{{3.886942163427691*^9, 3.8869421641686773`*^9}, {
  3.8869421984349203`*^9, 
  3.886942206414322*^9}},ExpressionUUID->"68ab4371-afc3-434d-8373-\
1e5c392d7f90"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given triangle with vertices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         RowBox[{"(", 
           RowBox[{"6", ",", "2", ",", "-3"}], ")"}], ",", 
         StyleBox["B", "TI"], 
         RowBox[{"(", 
           RowBox[{"6", ",", "3", ",", "-2"}], ")"}], ",", 
         StyleBox["C", "TI"], 
         RowBox[{"(", 
           RowBox[{"7", ",", "3", ",", "-3"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A(6,2,-3),B(6,3,-2),C(7,3,-3)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "00ff7859-c671-44e4-b84c-1ab6e413aba0"],
 ", find its sides, angles and area."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886942214430575*^9, 3.8869422680276003`*^9}, {
  3.88694229851645*^9, 3.8869423174730787`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8f1809e4-e071-4864-97a8-2533f22c483f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "C", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";", " ", 
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], ";", " ", 
  RowBox[{"C", "=", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B", ",", "C"}], "}"}], ",", 
   RowBox[{"BoxRatios", "->", "Automatic"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<SouthwestColors\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886942362266056*^9, 3.886942423753931*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0c5f2eb4-5768-484e-a642-d6cb622211a9"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxdl8tt3EAQRHtnSY5C8O/iTCYGhWDAZ6dQaTibCc0+dBUwT4Cg5VOh2V1d
5JI/f/35/D2q6u//33f558vqD/33Y5/8w/9v/gO89av1Qh25zuvk23rw+trH
A/WbC1zWv1HfevD61scX6jcXuKy/Ud968Prexw/qNxe4rJ+obz34wl7UexH3
9eo61DePz9aPrg+u5qL+3fWpbx6frb+6Priai/q761PfPD5b/3R9cDUX9bPr
U9+8kGfy5Jn613ne6MfZZ/TNM5f1zi2482zfonduwZ3n7MV65xbcefbeo3du
wZ3n5Mp65xbceXZuF/y0z4v3B/AaPj/0w/1Cb99u6OHzgp/2ecHPAref9nnB
zwK3n/Z5wc8Ct5/2ecFP+yzmcJ68hutBP3x+6O0PuOCnmENwwU8xh+CCn2IO
wQU/xRyCC35u5mqeXMP1oLcPD/TwbTNXN/TwbTNXF/TwbTNXb+jh22auBvTw
rfD9m/shv3/BBX+i97zggj/Re15wwZ/oPS+44E/0nhdc8Gdh3tyv+LwBnr0/
0MOHhXlzv8K8BZ69X9DDh4V5c7/CvLm+uMd58uwRXJhX3CO4MK+4R3BhXnGP
4MK8m3uZJxfm2tzLAz3m2tzLDT3m2tzLBT3mKjyv5nrk8yq40H/07gdc6D96
9wMu9L/QT64XPj+Dx7cHevS50E+uF/ST/NCHefL4AC70I/oALvSzOdc8uXDe
zbke6HHewvtF8sD3C3Ch/oI+++L7iP1hnbn/AWe6Up8=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[
        GraphicsGroup3DBox[{
          Polygon3DBox[{{18, 3, 33}, {99, 8, 9}, {109, 9, 10}, {49, 4, 5}, {
           63, 5, 6}, {34, 1, 4}, {88, 7, 8}, {118, 10, 11}, {144, 14, 15}, {
           153, 17, 18}, {148, 15, 16}, {126, 11, 12}, {139, 13, 14}, {133, 
           12, 13}, {76, 6, 7}, {151, 16, 17}}], Polygon3DBox[CompressedData["

1:eJwNw4NyYwEAAMBMp2df7fZqN7bt5MVOXmzbtv23153ZCzAIgBsQCCT1fvM9
DPqBfH+HQl9fweBXl1DYzTUccXeLRD3cozGkrY23xwcM9vWFQORvb5Eu/21C
nx6xuOcnHP7lGU94eyWSbm8QSDiMTOFxFUokgkrDYVlsFJJGx6AZTDSKzlgt
/6zxODaHSODySEQeX7WzzaeQPwqoFIGQRhWKsBgmCwGnUOk0kZjJkEg5bJkc
3N1RsVmAjM9TqrgcuUIo+KQWCdUaGWAwsphSQCzSaCVirU4q0ekBqd7AoIsl
cpnRpJCbzEqF2eLb2wU16s9WrcZq02ltdr3O7jDoHU6jwekyGV1us8ntsZg9
XtDi9cX393w26xe/3eYPOOyBoNMRDLmcobDbFY543JGo1xON+byxeP5gPx7w
f00EA4lkKJhMhUOpdCSczkQjmWwsms3FY7l87fAgr1JawGTiWyGdKpaymXKl
WPhez6RL5c7RYS2XrVRLxXqjXGo0G/Uf3Vaz16+Um61qpdWuVdud4fFRJ5+r
1pqNbq/d6g9SyUKx1/05mp4cD/u90Xg4mEwH/fFkcXoyJeA53PHo12x9frbq
tAfD6WS+WJ2dLuaz38vFfLmajGfzvxfn6/+X1qnb
           "]]}],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{4, 1, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
        47, 48, 2, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
         3, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4},
        VertexColors->None]}, 
      {GrayLevel[0.2], Line3DBox[{4, 34},
        VertexColors->None], 
       Line3DBox[{48, 62, 75, 87, 98, 108, 117, 125, 132, 138, 143, 147, 150, 
        152, 153, 18},
        VertexColors->None], Line3DBox[{5, 49, 35},
        VertexColors->None], Line3DBox[{6, 63, 50, 36},
        VertexColors->None], Line3DBox[{7, 76, 64, 51, 37},
        VertexColors->None], Line3DBox[{8, 88, 77, 65, 52, 38},
        VertexColors->None], Line3DBox[{9, 99, 89, 78, 66, 53, 39},
        VertexColors->None], Line3DBox[{10, 109, 100, 90, 79, 67, 54, 40},
        VertexColors->None], Line3DBox[{11, 118, 110, 101, 91, 80, 68, 55, 41},
        VertexColors->None], 
       Line3DBox[{12, 126, 119, 111, 102, 92, 81, 69, 56, 42},
        VertexColors->None], 
       Line3DBox[{13, 133, 127, 120, 112, 103, 93, 82, 70, 57, 43},
        VertexColors->None], 
       Line3DBox[{14, 139, 134, 128, 121, 113, 104, 94, 83, 71, 58, 44},
        VertexColors->None], 
       Line3DBox[{15, 144, 140, 135, 129, 122, 114, 105, 95, 84, 72, 59, 45},
        VertexColors->None], 
       Line3DBox[{16, 148, 145, 141, 136, 130, 123, 115, 106, 96, 85, 73, 60, 
        46},
        VertexColors->None], 
       Line3DBox[{17, 151, 149, 146, 142, 137, 131, 124, 116, 107, 97, 86, 74,
         61, 47},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{4, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 
        19},
        VertexColors->None], Line3DBox[{33, 18},
        VertexColors->None], 
       Line3DBox[{5, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 20},
        VertexColors->None], 
       Line3DBox[{6, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 21},
        VertexColors->None], 
       Line3DBox[{7, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 22},
        VertexColors->None], 
       Line3DBox[{8, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 23},
        VertexColors->None], 
       Line3DBox[{9, 109, 110, 111, 112, 113, 114, 115, 116, 117, 24},
        VertexColors->None], 
       Line3DBox[{10, 118, 119, 120, 121, 122, 123, 124, 125, 25},
        VertexColors->None], 
       Line3DBox[{11, 126, 127, 128, 129, 130, 131, 132, 26},
        VertexColors->None], 
       Line3DBox[{12, 133, 134, 135, 136, 137, 138, 27},
        VertexColors->None], Line3DBox[{13, 139, 140, 141, 142, 143, 28},
        VertexColors->None], Line3DBox[{14, 144, 145, 146, 147, 29},
        VertexColors->None], Line3DBox[{15, 148, 149, 150, 30},
        VertexColors->None], Line3DBox[{16, 151, 152, 31},
        VertexColors->None], Line3DBox[{17, 153, 32},
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJxTTMoPSmViYGCYCcTMQMwR/eZbZOpN++1zvAtDb162t5zz86qMwil7MYlN
u64WX7O/1bdy9ybux/ZzxNX33Qp8bY9L/ag4fcQP1MpapH+5az/tda6x6Kwn
9nK+X1P+WT6xl/eW37Wg75E918OLxwSln9n7PIu4F/r+tn3QhbeqvZ1P7f/m
PNmlmfvc/sfRpVq5jlftGdb0ybzkeWH/NqVgyp5ZL+zZPOeHXZS/bH+seFvD
hV8v7W8qX+FZOeulvf8Mg1lT116zV/tVM0Xw+Cv7uN1bHm5oeWn/yJZ9mjLL
Tftr94Ua6ple2xvsv5xy7PEL+9l9DHli+2/ZS0yzvy+m88pe6NtbFSWb5/bv
3mjzXwq+bV+hWXrSQu+l/UUOs3X18U/tn1y1ZEuxv21veTVqRivbC/uI4x+d
lz58ZJ/CpvX4Pvt1+/7jPCHH3j+zjy7/HNLu8sDe3Sz8bHHIJXt+9/CX7349
tV8rwrTzyMVb9q9O/lmcH3TS/nLeF0P5D0/s17NPfvQ4+Jr9poRH/YveHbZn
eMXGtefyY/uO7K3tey9csp8XsfzUd5/D9u+freTbOfGBfXtut5H0lUv2Bl8/
L1MyPYZTHJc5uOzF5U5c/sIVDrjCDVc444oXXPGIK95xpRNc6QpXOsSVbkfD
mbrhPBqe5IXnaLjhD7fR8IGEz0gLh+Hq36Hur6Hi/sHmzoFyD63tpZb5pJqD
Sz0AwaaK5g==
     "],
    VertexNormals->CompressedData["
1:eJxTTMoPSmViYGCYCcTMQCxrPMF1eeUjeyi9H40/Kj4qPio+Kj4qPio+Kj4q
Pio+Kj4qPio+Kj4qjlccAJ1DZwQ=
     "]], {}, {{}, {}}},
  Axes->True,
  AxesLabel->{None, None, None},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{286.66310805529355`, 331.1576716293735},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.9541390607000513`, 0.4219836081699689, 1.595303182621436},
  ViewVertical->{-0.4667177008241122, -0.06666822899795359, 
   0.8818899789541387}]], "Output",
 CellChangeTimes->{3.8869424255281277`*^9},
 CellLabel->"Out[17]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXmMpNl2J3T5vi8iM2vp5XW/rSu32rL26qUyMrOytqx936urqtfKqq59
6er1+W39XtpYaEbDeJBhAAt5eoQQMDBjM56BkcF2S4OQGJBHMDwGGRkaxCIw
y4BtZgzPo+D+znLvud8SEVX9/kEipS8y88vIiLj3nnPuuef8zu+cvv7J3VuP
rn9y773rk0c/uv7B3XvvfTx55PFH/lb+TziXrfTXtUlX+J+7ztU/POvc/3/j
/2s3foN+bE36hyV/fS7XIu4W9Lccf1vw12S4ly3RH8IT8XXUvOhfpx+HF+R3
XF/66wvzM14s49dflNv8onSv/UXNv31e+y65Po2+sviRu/Kvem9BXmLB3NO3
tveW7L0j5v3+rfR/FsN0uFw/In/4mnvmc+mQ6l57UqZh0ry2fp5J89o6Hfxb
fL8wD4fNa/+tms/Tiu8Xpr7u/ezr/E3+z0V5vr7egvlc+nqLA78eDYVFKXw9
zYf7t+nHYlKerx+i9LkGeimRq0S6ZY7D2pkxd+29PP5vmOua165bvy/tPSND
X5ael/xvzWvr/yzgtyz9PDSeIb636MyclJ5H/2vlk1+bpvdLF1Uz64a3DF/y
8kvmafq8ZJXtRzdWaFE+0pJ+jOXxrfVv+PmY+fevaAj/iD+xvgMu18Zjlv5h
kn6LHxUfBUP/XH7mF20lL7rgog107W74X+dSQZX3Gl50cdo+d1Wb2Y2fwX7u
IBTtBZdYPLzHQnz9VFqzmhewb/DH/HeVKPrcy+Nrf6GvLRr1uTPS2o1vIK8T
pEel83n+N50GeqnfjU9dkKnB9xXxk+ott5pf/P+iR5pUu1PQh302frCg6iRr
2cSDBw/c0L5bt269e+fOnc9u376N61f99dv+98m7d+/qx1t0ZgVFkDGCJR2p
0Z0wS6VtTC/9+wT/5z/iwS6aecGrDsd5WSy9iZ1C91f4HoaiA3E5hpH9Fn5s
/77/8U/99fty4S5GmOE5Lsfz/5K/fozfnuOPsuDixomfM7xhRu9GkqVfOrDJ
8NFaiY3ReaB/ldH+Cb/FpIuSj+9sL4bVrKjZXXLR1OCd/xK9XPOyYXAYpMt+
6n/K6MchHbE+Ef+Ef6aXyT69efMmGdoMU/BcXMYgK3mc9aAgYt8SM1znTozz
n/4f/lNiyUvWnfTRSFaY6H82jrlVN2ZHC20G3KobsMvwv6S3ccgu/77/8+/g
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
QQqqi05K1oMSUZqE0nTHe4Rm4CzUO7KgD0gxH9CRDSeB+3zx6SAni1r4VWQr
e58ueJ87IRwPd+qCjtKCPvbX7CpOpRQ19lO0NGEp67G2oq8JPJ/blbUDcqoU
UqlLulcYGuXE4DT+pZULLYaRx+qFciiyXalcQFLr5PRUzGkpjtxmsqClNfkS
kyvRTdGmGN+zKUb3jE1p8eLKAsPSwspiMTWfhcXFgj9E+lfXdpWc0rG2D3Rt
W6ShtK7zY6qtMLr+sd19tLO0uKMrg7bWr20ogqqubQLbHkv1ln77o2iLv3j+
+eeJyAE5gSfJxjguz5ZKSz7K5zErljct7UhCVmErK5CLkdiLycW4nF1Vjry4
Ul0FllIyMnqsKGXEcpsRc5mExigPwOvrbEoMVvc9ycZgXd+N65tTKLOgEzyt
Lx8zyAvyH+MBre4or66/Hsynq/s+Xby6h9c+//lXWt1w9qfmKxS3FmrVBSfn
kFc2IqrV2fGq/8jI8yhV3MBZntPivkZOjrbl5LDZttLyJjUglGrDskKDq0Ug
eWMRSG6LQJwWMtgcjyJjbipcgxb4PYp6mhQcFpuO/DhZSvaNcz7Q2WmsKZab
GEH9Kz+Spc44xvaQQjcP56yjBM1djhX2F6109yEu6LBdaX8dWfv8F8ZIJ8lS
s9Tv6r10qZOYwXiNIv8f9Bjj3p1NqyiBhLoVxLzTBN+guT1ZeZvbkyQ35/YG
K1/hzN5pb8OR1ZMqC85R5APVrpjMHi6sT1j1PKSMOM4tKW78VRZ6xi70KBvn
FvTYe2EchIcdv01BpkdYbY7HPfSu0sNwBn2Iw6lf15zUeZiW+ZFcdpkvbaEk
VI9VVq5Lu8rzcUXDSk/yvSSY97/R40oy1650+tHMhqr3IYbU9iT7dDXMGpKY
wrxcDFW+NYkpKYA2qE/Nq0uZjbcAGkC/ML2W1t5mDS/6e0HjTaVNq1xpU5sy
vEZbQ5IyRIbDJqSg6xwpujejed1RcbyGOMnhZWCe0mOb6fu56Q0USScR0GPs
o1nekB/SQZdEwC9+hpX3n/V9v/6Pd47atW9efIrf7k2WPHnSZLwXFPt/ZcUO
1jwl/uSEFiaknNDaLcVqx3uQnNqEFl7jLMHYNaFlFHt5U92PTZHoKjvNlbwh
uWJEKPrV/YyEup9ydksyW7VpyBZlSkppyJjOj761pPP92g5TagurfcdbGVwk
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
YlwGqAx8v7DeTFnSXKpveyy3DDcLgs6oF3/w/yrKqd0ssGol4JqUX/vuic6B
3VVwjeE18h44M1AG15oJuKYGvJ9fjPJm2WuKuUheI5vsxsw4Wq2ox5+zzpw1
3Jqm71huLQI0GWrNOHP2RU4tuPlVXTk/vX44B6OWcWn98WmJTRN2NIZxfw5F
lNrmXmJbLzrWNcvkaEBioMfEc6yR2ObK7R1dvs83g3ZqTojuuVp89DdcVI6B
tYK+7R9tVGi/+Xwml/r6bo5Ocg0prfOnd9gg4FJpJTRbWlrJJXydlnKS3vtQ
Wije9qgvLUVbQJ1xWZln2XN6lgl4pnl2lYjbLCAuKC+14Tq+iZ5loNA6eXBx
yHWjfWVmp3+i7bZPL5cbz57EQo+vCUqTZB75lvfYJKCTjV4WXLhCTTnVUKin
h+oo5CFW8dRTAu36qSGeJBt0IYcPGc2TSyG0FHCpuGayrV4VQqO1i0BobKvX
Q4+s31mw5dEUsusoz9Z/ncoKjzD2ydQXUy2NYJP5+4pNZk4IGp5iML2N/Fku
J7cSADpdAUBRXWTPQ4+ostEtrsYrZaYAaCixlhYX3YcnxTVXRPyzj1YjqCj8
zf0zbSzneV3y7Xz7uf8bQpX5asPg6Cs2FJh/gv1mrn1Bimyx3KhU2sb4w0O1
PaiptCl6j6lZK3qL9u2x1SZI9m25CKgCZJFN8f8k+QaAdyMYE3Fa86XFGFlv
IFTY6W53nSmWywRPwXMKJBmOcml8dCvlOmtJsialR3NubPwyMbnTATFxp22V
Lr6HKCuCVyTdYTJ+avW2v/VPLdDWRKmwrXS4AyfokyXAujHp7nNXwJo2etyx
NfxPJ8lydamts7HMgkOWIGRPxN+u5GGJe2/FyMTa7rM5epwl/pWkhiDw0/98
pslS7hPHtNnJ4XLl5Qb8JAD7wzFVEqpRJX71cDlQ6PGsjHnSNtIXHhXct1xo
cVkyj0caF935MWwlaV5souYylJz/5P/iC+/B9cF/W6DwEuvbtPASDrSu8Gbo
vRGK7vIBvqFbjGUVmWlE3xvwJglrkvAmRfCswlnsg4mdegwLjjfsekO63dHB
PZ096Fqm4nalrMm5PToXMg8GEzp2mKS7gbz+WYagJkOEnZsd0J3IoomwYD1n
iLAvLh8wRBjfeesjzVy95aIB5HTmg1RZXF+tJKg91tlhQ4D1lAkwsqjCVQCK
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
KzLkxpx5CuISEAJpyQz5uGXIY5c7n/iNacoJcr8rTWx3muquNJIwP4nDBiRh
PgmBZEqhoVO0AiwqpskDR4lPi8O5x2RX0eKgiPoYN+gr82Qof0Zj5vZA/sWu
/nzjxqH87p31cX771iZM8Pa1+fTlLfn1q1sjTPrOOL8wuSfOz545QK/Sw3xS
Br16aWpHnF+9siUhmGwgac/cGc8f3B/OH9LYsOGjv7RixYpGQfBgokNclBGa
wXN/xeECyixv/fQt2Yk4qXQt8ztcYNEohdmjHZ8U8dFkOxcZ5kfDcq59v+mg
5WfEc2B4QZR2GEMxBgoobfXZo8Ry2lFJDCVTpFzXOkGXEZ+xu64BFKW/B4QJ
0sTlZ0+wzp+QSzB5bjjf/cVIfn9mQ5Lfvvk5fvnqNpr3XZh7HjTn9ME0/zz9
pIvx5LmzO/JNmzbkR4+sB3DynTvX5idPjOX3kDXw6AEfPPVkgNTLgNmEeEOi
rYkGFsPcLJ/NM9tFz/PgLQvXnTvft3k1DYpm/xD0/DPyHCNnxast+d1plyDq
NcVvnKBcbDzut4jJbIsYj6y25KDfHyZ+GcJ6rkBY2x4eQauYIZeqzPZsU6EH
0Sv53VvD+dBgR/4lqbanD8jzo3F/ZmP+gMalC5vytWvH8nNnNuY3rm6nr52+
tIv+2AuTewkEE2ZALeylp+lF0gO7CAwbgRwBUZrfu7Oexrr80f1RjDiffTxY
oKpTjaGA8lGjJ9++vZX//+pZT4K9KlHzRbDTxdipMXboOmexw+PkiY/gintx
vWL1awPIBOfRlkHmn+Vrsw+Z+sbej4X5yxo0phd8LLJBC1MDWnJOupIzC+CO
a+olP0NiCk6ykRNtetSP6ZCN5ldsDs0+WEdzvg5zTT/N3KCtnaY5pon8Is4v
Tu6Fqp8gTJ0+NZHv3r0LT+E1RkFMU7ydXrtzc3N+6/pmxsiWLcP5E3b/SJ9g
qp4MG3M3ShbOL9cK/HLGuAAeJITRln/1JcwWuNDgcrpDvTLH2IgBjSa6kMc2
N9dJX3HyxM8tP9OgLnoeZIQ8IFOS/5z8OjYgtmzXDr1fbPJuimIq2mDERcaO
BvwY15Il5bYYWtPg6vOalRS2RxQUSWG1QX7Fumv23oZ89v6G/OGdTRg65Tev
7iAxXqF5PX1yZ37s6O58755d+cGD+2lOaW1PTe6jm5yiqb/CU/9FxCiBcXhj
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
vXzhfxKf//G2U8cFYkbI7o7E28/YaxPzSmY5JIHiAhfIljhW7wyvXqxQfCBW
KaYYs5vI1nqblTAmeGR0Vb5rz2qa2DYsUlbCPK3QQzfv0yzf79DRni9bznqz
LC7RYIY/5MWKCS6b1/9SFjDPKTbYm9clZeHLZ2pHz8vcRNLPEqSNhHbmJLtq
rr5uWOa3PeD0LHvTYtkbV4j+mbI5Mr2PmO0FeZP5WX6GvtFshqV+ph8Ifhpr
2PmevCiuFFyqB5ryYqb3Hjww7KaJLlcm/ZnR68IFhpW4We0ed9PKn6e6V11y
VcAwFW7TrF663krL2cxyO1Ys5hcxSszvDTs6aNg5/laTXDChD5dM938lz01E
mpF18zq8A1tsWZJIJxW80qwJnSswd5jvWV7As9ygjlwgU1bncyvsLcl6bTac
imSmSP4Sm72YXMOpqMds5tRLX2L6VqxemzsnerjZJnHiE830mqm9B5v2noZr
2g1lH8mMJkyrwHEWZg4Wb4v1ljGwPM9MyuyyQ/SgXS3gW7LDIvMKM4zZHaY3
38QM32/nJUtTSm+kyY35YZL/6G3XxaOsbrDB/P5M3mDm918iSCAnIXbnyJoP
jvaWIOdPnPZ+8fprLfnIyA9DesSYuy5/zdAkWK+QbCOa5OkCaRLOEqHnDU1i
VXKnrt8HzKaRsbtUU0Y6cpezZnZbcXevqWGE/w2bRp4NZhs0yl0m02TPLaFI
2OmVGW+qm/HTk7zz8iL2d156xOMm5l523p17VvPqvnitLZJprvFyvs6jg8cP
ZdpdFKCBX/RzeWnliRMn/pRe2o2X+cTqA/JCsK3/1/rmSFkYmtXI9CAu4TUi
VxOrsRPM7VNe6LYgNvELYtV4qpWRGJjWmB3TrMhj2P21Q1YuEg+RS9atfsx9
5r8K+T/CfzXzfOLekAaEpI3dex3/dRer2UTaLI2hFEZq5pXHbXCktGTZhZVp
PXRsDWtku88mvM8uwnwG+yz08MnzorZ37lnDupkmMsas0ldfv9eR/+ITaWyx
oEn9SF4KTOiJkvkUZ9rRpSPDPxTae64zsiSmX53Kbo32dmnXjJtmmUCbzWUy
uuqcUUli/iwsTPU5qVaXyZX4jIPPNiT+NLKL2hYtUcZB5/GR5S0tJ3X2whp1
aNp0I23XxbhIJ68z5KMedKjqbcs3bV6dHzy2JuZpTHU9qkV8nxwKWn0pL8QW
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
gvOEAp9NO6EGiU18C9LquEmFsTjffHyLbwWzDQwZHJallbEAoNHX7d1Mf/th
b4klRiGpchelZJYYDQVNE8ngVL759BEG09CWTfm2i2ftQlAQ+VZshUz8v9/o
pRkfGYqgF+Y9+CcxjtCF+5kTTkgSygt8Jnf+CgmnfbyzoHIOs8o5Qn+TUTlQ
0Ga3UyUdCTZSq3JUJgnEEQMROC/lInBxhmRxJv/81NF8cMvneefgQL5o6dKV
CxOL+h3GzmVpekeDWwlzgg8flymhilBxa+/regZMICRJmkteXQq/qGgvYWsX
LGQkg/WsbgUTx/KddqOq6d9/SsdpWRNTZ2IIgMS0jcVw1ow433rxHCEJElmy
RA4dVnH4vmS5OGzaiLEEjLvl71xGZGyLpHwNTbLCkYCsnSsFJcrHHedEno1v
+xgwQChr927N+9eNQGmIbJp0rYhsVC6Mi+0Xz5L8WBzbSBzNEAqN825cOJ9v
uTCZ/9Fbb/VFvkcvO3pRPFKmZftT/U4HHhuVOuE9XyqWwrl37Cj9tEos0hP0
FfOF+ds/e9+3YgggojDH92xlZQlxxKw2sjphkBgIECSHBH96hOsk//E0UEpy
4QJdVRD8zznu5dI4GP4lrDM/sL/D9y/t9lK+91eWLsk3HN2Ne8S8naTp3HB4
D9+2zp8s69TcrY5zwPJ5XCbpr5IbvuCNi8ikoWtC16n8hx/+bCKKLNh9kRbv
/5Dcv/EP+KefhPevDpe9//VH96pCzujm99LN99vNCeuQwcar0cfZpJEu3Sxu
1d0uWhpcuJR/Pnkp/6CtY8bdt69Xi/ctXfXT4MCMSNPFxVsp4YvkLxEbfMny
ZfnP2lfznZstxahRlbm3Uibpr/Jvf4pvPOYr/ohL5k+g5z6fvEzPbZq8nP+k
rXPGm4dGf48eCoG/5+9qNnak6djPff9iZdXfJjzDCvu3fdi+hrcD/F11f8+F
SQ9DZjqm3N9x4bL8GU10naY/xR9Xin+WbyxV/FmB/nu/6k8QHorpPLbzPmyX
3hILvm26Y9z3NHK29V51JPnGyas0K58MrytQGg1v/2h4+2wiiiNXwpYJoesa
9+Fsli2iWxU9TWW3bERM76EbJX9j0+RV3K2Oa/nG89fyDTyu5x1b97A6VY/0
94X71ts+5m7bKiVdFPW+vXSmSfmWyWbIRw8fxm3GZmlOmru8jLuUm0zdzckN
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
/Bj6X/APFZgtfwBxYqQn\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"6ff6d804-3f05-4dce-bc77-bd0f2c1b547f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AB", "=", 
   RowBox[{"B", "-", "A"}]}], ";", " ", 
  RowBox[{"AC", "=", 
   RowBox[{"C", "-", "A"}]}], ";", " ", 
  RowBox[{"BC", "=", 
   RowBox[{"C", "-", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LengthAB", "=", 
   RowBox[{"Norm", "[", "AB", "]"}]}], ";", 
  RowBox[{"LengthAC", "=", 
   RowBox[{"Norm", "[", "AC", "]"}]}], ";", 
  RowBox[{"LengthBC", "=", 
   RowBox[{"Norm", "[", "BC", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angleA", "=", 
   RowBox[{"VectorAngle", "[", 
    RowBox[{"AB", ",", "AC"}], "]"}]}], ";", 
  RowBox[{"angleB", "=", 
   RowBox[{"VectorAngle", "[", 
    RowBox[{
     RowBox[{"-", "AB"}], ",", "BC"}], "]"}]}], ";", " ", 
  RowBox[{"angleC", "=", 
   RowBox[{"VectorAngle", "[", 
    RowBox[{"AC", ",", "BC"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Lengths of sides AB, AC, and BC are \>\"", ",", " ", "LengthAB", ",", 
   "\"\<, \>\"", ",", "LengthAC", ",", "\"\<, \>\"", ",", "LengthBC"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Angles A, B, and C are \>\"", ",", " ", "angleA", ",", " ", 
   "\"\<, \>\"", ",", " ", "angleB", ",", "\"\<, \>\"", ",", " ", "angleC"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886942437708068*^9, 3.886942594787272*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"a895fa53-74a8-4adb-ad3a-d67a51eed0a2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Lengths of sides AB, AC, and BC are \"\>", "\[InvisibleSpace]", 
   SqrtBox["2"], "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   SqrtBox["2"], "\[InvisibleSpace]", "\<\", \"\>", "\[InvisibleSpace]", 
   SqrtBox["2"]}],
  SequenceForm[
  "Lengths of sides AB, AC, and BC are ", 2^Rational[1, 2], ", ", 2^
   Rational[1, 2], ", ", 2^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886942577395339*^9, 3.8869425951929083`*^9}},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"ef65774f-d5f3-4885-a677-dab73cfda940"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Angles A, B, and C are \"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"]}],
  SequenceForm[
  "Angles A, B, and C are ", Rational[1, 3] Pi, ", ", Rational[1, 3] Pi, ", ",
    Rational[1, 3] Pi],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886942577395339*^9, 3.8869425951976347`*^9}},
 CellLabel->
  "During evaluation of \
In[23]:=",ExpressionUUID->"af60e48b-8a5c-4bd8-a57c-2448a1489876"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Norm", "[", 
     RowBox[{"Cross", "[", 
      RowBox[{"AB", ",", "AC"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Area of triangle is \>\"", ",", " ", "S"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886942618420992*^9, 3.886942645445189*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"1105956f-691a-443b-acec-c2b9ac9fc4f4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Area of triangle is \"\>", "\[InvisibleSpace]", 
   FractionBox[
    SqrtBox["3"], "2"]}],
  SequenceForm["Area of triangle is ", Rational[1, 2] 3^Rational[1, 2]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8869426458506393`*^9},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"4c1c5525-f240-40ec-a88c-dc0dcc8f8084"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3. Calculations in Tetrahedron", "Subsection",
 CellChangeTimes->{{3.886942655089711*^9, 
  3.886942693093926*^9}},ExpressionUUID->"7ce7fbc8-b052-4d43-8798-\
9ea5a3c98ae4"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Given Tetrahedron with vertices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "2"}], ")"}], ",", 
         StyleBox["B", "TI"], 
         RowBox[{"(", 
           RowBox[{"-1", ",", "1", ",", "3"}], ")"}], ",", 
         StyleBox["C", "TI"], 
         RowBox[{"(", 
           RowBox[{"2", ",", "-2", ",", "4"}], ")"}], ",", 
         StyleBox["D", "TI"], 
         RowBox[{"(", 
           RowBox[{"-1", ",", "0", ",", "-2"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "A(1,1,2),B(-1,1,3),C(2,-2,4),D(-1,0,-2)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2e312a14-681f-4fdf-abc4-a8bf6bc6f139"],
 ", find its volume, height ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["h", "TI"], TraditionalForm], "errors" -> {}, "input" -> "h", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "41c7a283-5cf4-46d7-b27b-6aec63ccbbc5"],
 " from vertex ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["D", "TI"], TraditionalForm], "errors" -> {}, "input" -> "D", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3dc8a864-c4c4-4620-a2cd-b0a819697e16"],
 " on side ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["ABC", TraditionalForm], "errors" -> {}, "input" -> 
     "\\text{ABC}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "accc5d8e-963a-409d-895d-2b744fbfa3e2"],
 ". Display this tetrahedron, height ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["h", "TI"], TraditionalForm], "errors" -> {}, "input" -> "h", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "646b3db1-cec0-4337-8b7c-3678b87ee78d"],
 " and point ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["E", "TI"], "\[LongEqual]", 
         StyleBox["h", "TI"], "\[Intersection]", 
         RowBox[{"(", "ABC", ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "E=h \\cap (\\text{ABC})", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "28991237-d42b-495a-8c28-9cd2c2c685e7"],
 ".   "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886942698960346*^9, 3.886942721347617*^9}, {
  3.886942767256968*^9, 3.886942859822733*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"8a96f913-484e-4999-a1d2-4aa6f0fb21bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", 
   RowBox[{"A", ",", "B", ",", "C", ",", "D", ",", "E"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], ";", 
  RowBox[{"B", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "3"}], "}"}]}], ";", 
  RowBox[{"C", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}]}], ";", 
  RowBox[{"D", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AB", "=", 
   RowBox[{"B", "-", "A"}]}], ";", 
  RowBox[{"AC", "=", 
   RowBox[{"C", "-", "A"}]}], ";", 
  RowBox[{"AD", "=", 
   RowBox[{"D", "-", "A"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{
    FractionBox["1", "6"], 
    RowBox[{"Abs", "[", 
     RowBox[{"Det", "[", 
      RowBox[{"{", 
       RowBox[{"AB", ",", "AC", ",", "AD"}], "}"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"-", 
    RowBox[{"Cross", "[", 
     RowBox[{"AB", ",", "AC"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S", "=", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Norm", "[", "n", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   FractionBox[
    RowBox[{"3", " ", "V"}], "S"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E", "=", 
   RowBox[{"D", "-", 
    RowBox[{
     FractionBox["n", 
      RowBox[{"2", "S"}]], "h"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
         "A", ",", "B", ",", "C", ",", "A", ",", "D", ",", "B", ",", "C", ",",
           "D"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", ".7", "]"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph2", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"{", "E", "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "Red"}], "]"}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph3", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{"D", ",", "E"}], "}"}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph4", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Opacity", "[", "0.3", "]"}], ",", "Gray", ",", 
      RowBox[{"InfinitePlane", "[", 
       RowBox[{"{", 
        RowBox[{"A", ",", "B", ",", "C"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"graph1", ",", "graph2", ",", "graph3", ",", "graph4"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8869428799406443`*^9, 3.886943236174882*^9}, {
  3.8869433962739687`*^9, 3.8869434556622*^9}, {3.8869439436543407`*^9, 
  3.886943944495417*^9}, {3.886944052661108*^9, 3.8869441056651487`*^9}, {
  3.8869441880966463`*^9, 3.886944210283935*^9}, {3.8869442483634233`*^9, 
  3.88694427895203*^9}, {3.886992902383547*^9, 3.886992919056756*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"fe9da181-7f34-411f-b9da-11233688d17d"],

Cell[BoxData[
 Graphics3DBox[{
   {Thickness[0.01], 
    Line3DBox[{{1, 1, 2}, {-1, 1, 3}, {2, -2, 4}, {1, 1, 2}, {-1, 0, -2}, {-1,
      1, 3}, {2, -2, 4}, {-1, 0, -2}}]}, {{
     {RGBColor[1, 0, 0], PointSize[0.03], 
      Point3DBox[{{0.5, 2.5, 1.}}]}, {}, {}}, {}}, 
   {Thickness[0.01], 
    {RGBColor[1, 0, 0], Dashing[{Small, Small}], 
     Line3DBox[
      NCache[{{-1, 0, -2}, {Rational[1, 2], Rational[5, 2], 1}}, {{-1, 
        0, -2}, {0.5, 2.5, 1}}]]}}, 
   {GrayLevel[0.5], Opacity[0.3], 
    TagBox[ConicHullRegion3DBox[{{1, 1, 2}, {-1, 1, 3}, {2, -2, 4}}],
     "InfinitePlane"]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  BaseStyle->{
    RGBColor[0, 0, 1], 
    Opacity[0.7]},
  ImageSize->{352.7956067744588, 406.9920959930787},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.550649107021607, 2.129193651287266, -0.6408771552863222},
  ViewVertical->{0.6621218218385576, 0.5738993266785702, 
   0.48190689545084636`}]], "Output",
 CellChangeTimes->{{3.886943192670947*^9, 3.886943236423317*^9}, {
   3.886943441770355*^9, 3.8869434559874477`*^9}, 3.886943944953874*^9, {
   3.886944058851571*^9, 3.8869440715174932`*^9}, 3.886944106589765*^9, {
   3.886944189024497*^9, 3.886944210966353*^9}, {3.886944257235181*^9, 
   3.886944279898123*^9}, {3.886992911883483*^9, 3.88699292098424*^9}},
 CellLabel->
  "Out[754]=",ExpressionUUID->"0ce7855f-63ec-4ee9-826a-ea9be9b6c9fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Matrix Calculations", "Section",
 CellChangeTimes->{{3.886944333888665*^9, 
  3.886944338577331*^9}},ExpressionUUID->"76c4b2fd-b35e-41f0-84d7-\
2caab734ee1d"],

Cell[CellGroupData[{

Cell["4.1. Working with matrices", "Subsection",
 CellChangeTimes->{{3.886944345109672*^9, 
  3.886944351889045*^9}},ExpressionUUID->"2156b00c-0381-4fc1-bb1e-\
20ef0c009e61"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given matrices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]]}}], TraditionalForm]]],
            ")"}], ",", 
         StyleBox["B", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}}], TraditionalForm]]],
            ")"}]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A=\\begin{pmatrix} \
1&2&1\\\\0&2&0\\\\-1&1&1\\end{pmatrix},B=\\begin{pmatrix} \
1&1&2\\\\0&2&1\\\\1&-1&0\\end{pmatrix}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "77609bb6-567d-4b2e-8a5b-9d80d81c256d"],
 ", find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", "2", 
         SuperscriptBox[
          StyleBox["A", "TI"], "2"], "+", "3", 
         StyleBox["A", "TI"], "+", 
         StyleBox["E", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "M=2A^2+3A+E", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "60c724af-60ec-42dc-9a1b-3ee7ccf611e3"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["E", "TI"], TraditionalForm], "errors" -> {}, "input" -> "E", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4497d1dc-cb26-4fe3-8c61-b2998298ac84"],
 " is an identity matrix. Find inverse matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["A", "TI"], "-1"], TraditionalForm], "errors" -> {}, "input" -> 
     "A^{-1}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "be431469-4840-455a-abc5-55da71bba4ea"],
 ". Find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"det", 
         StyleBox["A", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\det A", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4ea16667-fb96-46d3-a94c-0f2e51e02f57"],
 ". Find sum and difference of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], ",", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A,B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8d281368-01c7-4439-98bd-b414cb82cc23"],
 ". Find ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CenterDot]", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\cdot B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "a18176cc-320a-44aa-94ac-b99a45a75a94"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CircleTimes]", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\otimes B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "ee098bef-6a5a-42af-b237-9755e9398c38"],
 ", find difference between these values. Solve matrix equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         StyleBox["X", "TI"], "\[LongEqual]", 
         StyleBox["B", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "AX=B", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "82515a1e-7b7f-4001-92d5-74d799f715dd"],
 " with respect to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["X", "TI"], "\[Element]", 
         SuperscriptBox[
          StyleBox["R", FontSlant -> "Plain"], 
          RowBox[{"3", "\[Cross]", "3"}]]}], TraditionalForm], "errors" -> {},
      "input" -> "X \\in \\mathbb{R}^{3\\times 3}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "aa72030d-0b59-4ab3-b308-453c7c81ae6b"],
 ". "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886944384622839*^9, 3.886944390378944*^9}, {
  3.8869444808745728`*^9, 3.8869445551523657`*^9}, {3.886944591255308*^9, 
  3.886944640086549*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"ceae94c2-eaf2-4f4e-859b-42c551c89d40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{
    RowBox[{"2", "*", 
     RowBox[{"A", ".", "A"}]}], "+", 
    RowBox[{"3", " ", "A"}], "+", 
    RowBox[{"5", " ", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix polynomial equals \>\"", ",", 
   RowBox[{"M", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886944679048202*^9, 3.886944763760104*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"12220fae-fb73-468e-bd60-214eec87f2ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix polynomial equals \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"8", "20", "7"},
       {"0", "19", "0"},
       {
        RowBox[{"-", "7"}], "5", "8"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix polynomial equals ", 
   MatrixForm[{{8, 20, 7}, {0, 19, 0}, {-7, 5, 8}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.8869447640478497`*^9},
 CellLabel->
  "During evaluation of \
In[251]:=",ExpressionUUID->"2025b231-60dd-4605-be46-58de776f55dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"InverseA", "=", 
   RowBox[{"Inverse", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Inverse of matrix A is \>\"", ",", " ", 
   RowBox[{"InverseA", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886944819423246*^9, 3.886944841634057*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"4d58fbbb-98d9-426d-83b9-884bbb491fe6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Inverse of matrix A is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["1", "4"]}], 
        RowBox[{"-", 
         FractionBox["1", "2"]}]},
       {"0", 
        FractionBox["1", "2"], "0"},
       {
        FractionBox["1", "2"], 
        RowBox[{"-", 
         FractionBox["3", "4"]}], 
        FractionBox["1", "2"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Inverse of matrix A is ", 
   MatrixForm[{{
      Rational[1, 2], 
      Rational[-1, 4], 
      Rational[-1, 2]}, {0, 
      Rational[1, 2], 0}, {
      Rational[1, 2], 
      Rational[-3, 4], 
      Rational[1, 2]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886944842569429*^9},
 CellLabel->
  "During evaluation of \
In[255]:=",ExpressionUUID->"18d70f27-1527-4697-9b11-09414099f8a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"DetA", "=", 
   RowBox[{"Det", "[", "A", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<det(A) = \>\"", ",", " ", "DetA"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869448541931257`*^9, 3.88694487113142*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"d8eb1c3b-a94c-43e1-9fee-6db01bfa6b42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"det(A) = \"\>", "\[InvisibleSpace]", "4"}],
  SequenceForm["det(A) = ", 4],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886944865424899*^9, 3.88694487169261*^9}},
 CellLabel->
  "During evaluation of \
In[261]:=",ExpressionUUID->"cbd7969d-d00f-4c99-8d69-110e32062af1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sum of matrices A and B is \>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "+", "B"}], ")"}], "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Difference between matrices A and B is \>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "-", "B"}], ")"}], "//", "MatrixForm"}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.886944883452634*^9, 3.886944979363739*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"15569c75-0994-4b4b-b519-89b4a33e3457"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sum of matrices A and B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "3", "3"},
       {"0", "4", "1"},
       {"0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Sum of matrices A and B is ", 
   MatrixForm[{{2, 3, 3}, {0, 4, 1}, {0, 0, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886944909550617*^9, {3.886944952824954*^9, 3.886944979757884*^9}},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"e3ef69ac-4ee0-478f-8f53-42b8125a3b6c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Difference between matrices A and B is \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{"-", "1"}]},
       {
        RowBox[{"-", "2"}], "2", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Difference between matrices A and B is ", 
   MatrixForm[{{0, 1, -1}, {0, 0, -1}, {-2, 2, 1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886944909550617*^9, {3.886944952824954*^9, 3.886944979765305*^9}},
 CellLabel->
  "During evaluation of \
In[269]:=",ExpressionUUID->"ba0acad5-c3c0-45f4-911d-5746bb004f49"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MatProduct", "=", 
   RowBox[{"A", ".", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ElemProduct", "=", 
   RowBox[{"A", "*", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix product of A and B is \>\"", ",", " ", 
   RowBox[{"MatProduct", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Elementwise product of A and B is \>\"", ",", " ", 
   RowBox[{"ElemProduct", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Difference between corresponding products is\>\"", ",", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"MatProduct", "-", "ElemProduct"}], ")"}], "//", 
    "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869449835464897`*^9, 3.886945028295285*^9}},
 CellLabel->
  "In[271]:=",ExpressionUUID->"0621a9d4-a4d7-4ac6-8f35-585518a4993d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix product of A and B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "4", "4"},
       {"0", "4", "2"},
       {"0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix product of A and B is ", 
   MatrixForm[{{2, 4, 4}, {0, 4, 2}, {0, 0, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945029073338*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"fc44e294-c6b8-4c45-904a-2b8d19c32221"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Elementwise product of A and B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "2"},
       {"0", "4", "0"},
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Elementwise product of A and B is ", 
   MatrixForm[{{1, 2, 2}, {0, 4, 0}, {-1, -1, 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945029078467*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"dcfa9107-14fe-4eb4-87c3-5d49243e2bbb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Difference between corresponding products is\"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "2", "2"},
       {"0", "0", "2"},
       {"1", "1", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Difference between corresponding products is", 
   MatrixForm[{{1, 2, 2}, {0, 0, 2}, {1, 1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945029084468*^9},
 CellLabel->
  "During evaluation of \
In[271]:=",ExpressionUUID->"cb858e40-2bc5-47e6-b56d-5ec37a0387f8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"X", "=", 
   RowBox[{"InverseA", ".", "B"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Solution to matrix equation AX=B w/ respect to X is \>\"", ",", " ", 
   RowBox[{"X", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869450450228233`*^9, 3.886945075768548*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"4f4df43a-56cc-4a3d-b7e8-278e3d91fd4f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Solution to matrix equation AX=B w/ respect to X is \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", "2"], 
        FractionBox["3", "4"]},
       {"0", "1", 
        FractionBox["1", "2"]},
       {"1", 
        RowBox[{"-", 
         FractionBox["3", "2"]}], 
        FractionBox["1", "4"]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Solution to matrix equation AX=B w/ respect to X is ", 
   MatrixForm[{{0, 
      Rational[1, 2], 
      Rational[3, 4]}, {0, 1, 
      Rational[1, 2]}, {1, 
      Rational[-3, 2], 
      Rational[1, 4]}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8869450699111357`*^9, 3.886945076135571*^9}},
 CellLabel->
  "During evaluation of \
In[278]:=",ExpressionUUID->"9be3c8e0-e052-4522-be3b-8c3eb1f3e298"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.2. Working with both matrices and vectors", "Subsection",
 CellChangeTimes->{{3.886945131834684*^9, 
  3.886945164356155*^9}},ExpressionUUID->"d37978e6-a7aa-4bbd-842c-\
16229e781527"],

Cell[TextData[{
 StyleBox["Task:",
  FontWeight->"Bold"],
 " Given matrices ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-2", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}], ",", 
         StyleBox["B", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["0", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}], ",", 
         StyleBox["x", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "A=\\begin{pmatrix}0&2&3\\\\4&1&0\\\\2&-1&-2\\end{pmatrix},B=\\begin{\
pmatrix}1&2&0\\\\3&0&-1\\\\2&1&-1\\end{pmatrix},x=\\begin{pmatrix}2\\\\4\\\\-\
1 \\end{pmatrix}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "904f9fd5-48b2-44be-b93b-80549e16ec12"],
 " calculate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          RowBox[{"(", 
            RowBox[{
              StyleBox["A", "TI"], "-", 
              StyleBox["B", "TI"]}], ")"}], "2"], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "y=(A-B)^2x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "11277ae6-cd02-4ec5-bb3e-5b9d0714dd01"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["z", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["A", "TI"], 
             StyleBox["B", "TI"], "-", 
             StyleBox["B", "TI"], 
             StyleBox["A", "TI"]}], ")"}], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "z=(AB-BA)x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e4cb6d12-ac97-456e-8fdb-b8fc21ee72da"],
 ". Solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CenterDot]", 
         StyleBox["u", "TI"], "\[LongEqual]", 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\cdot u=x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7b862440-be3e-454c-af85-db5bc8ea1812"],
 " with respect to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["u", "TI"], TraditionalForm], "errors" -> {}, "input" -> "u", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e8f00b12-fc2f-4d9f-b94a-f0433958d16e"],
 " using inverse matrix and Cramer\[CloseCurlyQuote]s rule. For each row and \
column of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e9ef30fa-379f-4a83-ae6a-caeac08e4bc3"],
 " find sum of elements. For matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["B", "TI"], TraditionalForm], "errors" -> {}, "input" -> "B", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c35c6ee0-2597-4544-9e9e-03870a4e33ae"],
 " find max and min elements.  "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886945168571397*^9, 3.886945185650916*^9}, {
  3.886945306782734*^9, 3.886945307898324*^9}, {3.886945514754613*^9, 
  3.886945638961314*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"c168fa98-9be9-4f48-bf5d-52f17f440a9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", "-", "B"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", "-", "B"}], ")"}], ".", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Vector y is \>\"", ",", " ", 
   RowBox[{"MatrixForm", "[", "y", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", ".", "B"}], "-", 
      RowBox[{"B", ".", "A"}]}], ")"}], ".", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Vector z is \>\"", ",", " ", 
   RowBox[{"MatrixForm", "[", "z", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869456539897337`*^9, 3.886945783671982*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"02efa7c2-d011-4fb0-a645-a3f1464fb1cd"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vector y is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "16"}]},
        {
         RowBox[{"-", "7"}]},
        {
         RowBox[{"-", "3"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Vector y is ", 
   MatrixForm[{-16, -7, -3}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886945748996882*^9, 3.886945752243029*^9}, 
   3.886945784480541*^9},
 CellLabel->
  "During evaluation of \
In[290]:=",ExpressionUUID->"be53b53b-db81-45e5-911d-6ee2877e4084"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vector z is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"12"},
        {"34"},
        {
         RowBox[{"-", "25"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Vector z is ", 
   MatrixForm[{12, 34, -25}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886945748996882*^9, 3.886945752243029*^9}, 
   3.886945784487116*^9},
 CellLabel->
  "During evaluation of \
In[290]:=",ExpressionUUID->"d7dfdd57-d883-46bb-a723-a092f4087b04"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "To solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[CenterDot]", 
         StyleBox["u", "TI"], "\[LongEqual]", 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "A\\cdot u=x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "cb9d3be4-dc81-4f79-b8a9-54a701be514f"],
 " we firstly use inverse matrix, that is, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["u", "TI"], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["A", "TI"], "-1"], 
         StyleBox["x", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "u=A^{-1}x", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f4c5108a-00f4-430e-b14b-c48cfa8879d6"],
 ":"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886945816593981*^9, 3.886945848901478*^9}},
 Background->None,ExpressionUUID->"21679cdf-ca99-43ac-8247-7a0209529a6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"u", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Solution to Au=x w/ respect to u is \>\"", ",", 
   RowBox[{"MatrixForm", "[", "u", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869458533411493`*^9, 3.886945880061701*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"7a6d290b-108e-4589-91c9-cb106a21c5e1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Solution to Au=x w/ respect to u is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", 
          FractionBox["3", "2"]}]},
        {"10"},
        {
         RowBox[{"-", "6"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Solution to Au=x w/ respect to u is ", 
   MatrixForm[{
     Rational[-3, 2], 10, -6}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886945880974772*^9},
 CellLabel->
  "During evaluation of \
In[297]:=",ExpressionUUID->"c409fdf8-e954-45e2-9621-7a8c758d1528"]
}, Open  ]],

Cell["Now, using Cramer\[CloseCurlyQuote]s rule:", "Text",
 CellChangeTimes->{{3.886946271104147*^9, 
  3.886946275701436*^9}},ExpressionUUID->"0603c525-77de-4721-bdb1-\
426fb8c89940"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After putting vector x to the first column we get \>\"", ",", 
   RowBox[{"MatrixForm", "[", "A1", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946319245214*^9, 3.8869463628183928`*^9}, {
  3.886946440673752*^9, 3.886946462649172*^9}, {3.886946504884427*^9, 
  3.8869465073598623`*^9}, {3.886946595208465*^9, 3.88694660021828*^9}, {
  3.8869466594770613`*^9, 3.88694666745427*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"fdf23d05-d6dc-4db0-9b65-b73f42f99edc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After putting vector x to the first column we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2", "2", "3"},
       {"4", "1", "0"},
       {
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After putting vector x to the first column we get ", 
   MatrixForm[{{2, 2, 3}, {4, 1, 0}, {-1, -1, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886946507964069*^9, 3.8869466680022793`*^9},
 CellLabel->
  "During evaluation of \
In[309]:=",ExpressionUUID->"5540faf6-2452-46c4-94f1-4e7b0f5006a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "3"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<After putting vector x to the second column we get \>\"", ",", 
   RowBox[{"MatrixForm", "[", "A2", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946526469054*^9, 3.8869465268193207`*^9}, {
  3.886946591889678*^9, 3.88694669237875*^9}},
 CellLabel->
  "In[313]:=",ExpressionUUID->"49acb0e0-3968-48d6-b80a-5325668c9be4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After putting vector x to the second column we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "2", "3"},
       {"4", "4", "0"},
       {"2", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After putting vector x to the second column we get ", 
   MatrixForm[{{0, 2, 3}, {4, 4, 0}, {2, -1, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8869466782964687`*^9, 3.886946692793482*^9}},
 CellLabel->
  "During evaluation of \
In[313]:=",ExpressionUUID->"0660d570-0212-4009-af59-f83c3a154792"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A3", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "x", "}"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After putting vector x to the third column we get \>\"", ",", 
   RowBox[{"MatrixForm", "[", "A3", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946706966298*^9, 3.886946734470977*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"5100c396-663f-468f-aa1d-ddd203268a95"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After putting vector x to the third column we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "2", "2"},
       {"4", "1", "4"},
       {"2", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After putting vector x to the third column we get ", 
   MatrixForm[{{0, 2, 2}, {4, 1, 4}, {2, -1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{3.886946734778084*^9},
 CellLabel->
  "During evaluation of \
In[315]:=",ExpressionUUID->"38354211-b6e1-4392-983a-344006dac488"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cramerU", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Det", "[", "A1", "]"}], ",", 
      RowBox[{"Det", "[", "A2", "]"}], ",", 
      RowBox[{"Det", "[", "A3", "]"}]}], "}"}], "/", 
    RowBox[{"Det", "[", "A", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Vector u calculated using Cramer's rule is \>\"", ",", " ", 
   RowBox[{"cramerU", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886946760858025*^9, 3.8869468320512943`*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"73d049e2-7c3a-4b6e-8e7e-e081bb04a0c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Vector u calculated using Cramer's rule is \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{"-", 
          FractionBox["3", "2"]}]},
        {"10"},
        {
         RowBox[{"-", "6"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Vector u calculated using Cramer's rule is ", 
   MatrixForm[{
     Rational[-3, 2], 10, -6}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946825286914*^9, 3.886946832383032*^9}},
 CellLabel->
  "During evaluation of \
In[319]:=",ExpressionUUID->"97f37e6f-384c-4117-acb5-fa6afec79eb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sum of columns of matrix A is \>\"", ",", 
   RowBox[{"Total", "[", "A", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sum of rows of matrix A is \>\"", ",", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"A", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Max element of B is \>\"", ",", 
   RowBox[{"Max", "[", "B", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Min element of B is \>\"", ",", 
   RowBox[{"Min", "[", "B", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869459421814632`*^9, 3.8869459961330357`*^9}, {
   3.886946072851069*^9, 3.886946092824068*^9}, 3.886946251308957*^9, 
   3.886946840528365*^9},
 CellLabel->
  "In[321]:=",ExpressionUUID->"4447d4b6-a9c2-447c-88c9-abe49dea8890"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sum of columns of matrix A is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "1"}], "}"}]}],
  SequenceForm["Sum of columns of matrix A is ", {6, 2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.8869468414233294`*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"d310875a-016f-4002-b701-af1a9ab37904"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sum of rows of matrix A is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", 
     RowBox[{"-", "1"}]}], "}"}]}],
  SequenceForm["Sum of rows of matrix A is ", {5, 5, -1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.8869468414283*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"e54dca60-fe5c-4645-83ed-1207eb87ef46"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Max element of B is \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Max element of B is ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.886946841432908*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"b66714d8-440a-4407-8ff3-86fc166da694"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Min element of B is \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "1"}]}],
  SequenceForm["Min element of B is ", -1],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886946086757209*^9, 3.8869460931038647`*^9}, 
   3.886946841438661*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"d5f649e1-af39-4f90-a978-5494611913f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.3. Creating matrices", "Subsection",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886946889374241*^9, 3.8869468950970716`*^9}},
 Background->None,ExpressionUUID->"53888805-8636-46dd-8546-4715fb68a977"],

Cell[TextData[{
 StyleBox["Task 1:",
  FontWeight->"Bold"],
 " Generate a one-dimensional array ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["a", "TI"], TraditionalForm], "errors" -> {}, "input" -> "a", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "df6334e7-369b-4c81-a763-38b8ec0995ad"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["16", TraditionalForm], "errors" -> {}, "input" -> 
     "16", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2553d8cb-27b2-494a-a1a8-5e07eda2c8ba"],
 " containing random real numbers. Sort it in descending order and convert to \
a matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["A", "TI"], TraditionalForm], "errors" -> {}, "input" -> "A", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7968ee5b-1cc5-4d03-87aa-fb4d7a4d0265"],
 ". Create matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["B", "TI"], TraditionalForm], "errors" -> {}, "input" -> "B", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1bd0142b-c2f9-47e9-8572-cac4a427ab43"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"4", "\[Cross]", "4"}], TraditionalForm], "errors" -> {}, 
     "input" -> "4 \\times 4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0c195582-a1a9-4388-bbb3-0e76a02b6b86"],
 " containing ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["5", TraditionalForm], "errors" -> {}, "input" -> "5", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "9e81e16b-eab6-4d9d-85dc-f432fb24aa0e"],
 "\[CloseCurlyQuote]s. Generate matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["C", "TI"], TraditionalForm], "errors" -> {}, "input" -> "C", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0d204cc1-f4ea-4b76-a844-31c74840bd5f"],
 " of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"4", "\[Cross]", "4"}], TraditionalForm], "errors" -> {}, 
     "input" -> "4 \\times 4", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4d408836-e16a-4344-8698-51f9d499c76b"],
 ", elements ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SubscriptBox[
        StyleBox["C", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], ",", 
          StyleBox["j", "TI"]}]], TraditionalForm], "errors" -> {}, "input" -> 
     "C_{i,j}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "490bfb9c-843d-4459-b646-3ed0b6a576d8"],
 " of which are calculated according to formula ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["C", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], ",", 
            StyleBox["j", "TI"]}]], "\[LongEqual]", 
         SuperscriptBox[
          StyleBox["i", "TI"], "2"], "-", 
         SuperscriptBox[
          StyleBox["j", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "C_{i,j}=i^2-j^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "61bab8d7-3ad6-46ac-9f5f-87fae8a7b70c"],
 ". Generate diagonal array ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["D", "TI"], TraditionalForm], "errors" -> {}, "input" -> "D", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "87776cf3-1fcb-4ee7-9c9d-221a4b11a050"],
 " with elements of diagonal ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"1", ",", "-1", ",", "2", ",", "-2"}], "]"}], 
       TraditionalForm], "errors" -> {}, "input" -> "[1,-1,2,-2]", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "7f23e7e1-7f49-4e03-bdc3-a4fb5402756b"],
 ". Calculate ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["M", "TI"], "\[LongEqual]", 
         StyleBox["A", "TI"], "+", 
         StyleBox["B", "TI"], "-", 
         StyleBox["C", "TI"], "-", 
         StyleBox["D", "TI"], "+", 
         StyleBox["E", "TI"], "-", "3"}], TraditionalForm], "errors" -> {}, 
     "input" -> "M=A+B-C-D+E-3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "8d487046-c54e-48a3-93e1-0ac4bb457ce9"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["E", "TI"], TraditionalForm], "errors" -> {}, "input" -> "E", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f1181dc5-4bd5-439f-b3ff-466eb9517545"],
 " is identity matrix of size ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["4", TraditionalForm], "errors" -> {}, "input" -> "4", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "1a59b74e-8da2-4a15-b833-5d66b8e658ba"],
 ".  "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886946900324759*^9, 3.88694693886938*^9}, {
   3.8869469741081123`*^9, 3.886947168614912*^9}, 3.886948208836972*^9},
 Background->GrayLevel[
  0.85],ExpressionUUID->"890c0707-542d-46a7-ae8d-b7c766ac6a40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "D", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", "16"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Random list a is \>\"", ",", "a"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aSorted", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"a", ",", "Greater"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Sorted list a is \>\"", ",", "aSorted"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"aSorted", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Reshaped list a as a matrix A is \>\"", ",", " ", 
   RowBox[{"A", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix B is \>\"", ",", 
   RowBox[{"B", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"C", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["i", "2"], "-", 
      SuperscriptBox["j", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix C is \>\"", ",", 
   RowBox[{"C", "//", "MatrixForm"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "2", ",", 
      RowBox[{"-", "2"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Matrix D is \>\"", ",", " ", 
    RowBox[{"D", "//", "MatrixForm"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"A", "+", "B", "-", "C", "-", "D", "+", 
    RowBox[{"IdentityMatrix", "[", "4", "]"}], "-", "3"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Expression A+B-C-D+E-3 equals \>\"", ",", 
   RowBox[{"M", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.886947280198844*^9, 3.88694729741492*^9}, {
  3.88694739235924*^9, 3.886947564830419*^9}, {3.886947614074218*^9, 
  3.88694773223169*^9}, {3.8869477725992413`*^9, 3.8869477972609053`*^9}, {
  3.8869478308010473`*^9, 3.886947840556287*^9}, {3.886947880565915*^9, 
  3.886947951408617*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"08d41423-3ec4-4b32-918e-f8a1cd78c818"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Random list a is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.009818441693129287`", ",", "0.4597296548149612`", ",", 
     "0.46073703587593506`", ",", "0.4164074915466227`", ",", 
     "0.642424105685971`", ",", "0.4761270388895511`", ",", 
     "0.7687722099742558`", ",", "0.2744980967652735`", ",", 
     "0.26698040480570695`", ",", "0.3776003312832412`", ",", 
     "0.37375947201913284`", ",", "0.8143054138367789`", ",", 
     "0.9726289049745229`", ",", "0.3155637932375792`", ",", 
     "0.6598882668698376`", ",", "0.40120329261782084`"}], "}"}]}],
  SequenceForm[
  "Random list a is ", {0.009818441693129287, 0.4597296548149612, 
   0.46073703587593506`, 0.4164074915466227, 0.642424105685971, 
   0.4761270388895511, 0.7687722099742558, 0.2744980967652735, 
   0.26698040480570695`, 0.3776003312832412, 0.37375947201913284`, 
   0.8143054138367789, 0.9726289049745229, 0.3155637932375792, 
   0.6598882668698376, 0.40120329261782084`}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517308617`*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"d777a8da-ab3a-4ab3-84c6-9f7fe0cffba4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sorted list a is \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "0.9726289049745229`", ",", "0.8143054138367789`", ",", 
     "0.7687722099742558`", ",", "0.6598882668698376`", ",", 
     "0.642424105685971`", ",", "0.4761270388895511`", ",", 
     "0.46073703587593506`", ",", "0.4597296548149612`", ",", 
     "0.4164074915466227`", ",", "0.40120329261782084`", ",", 
     "0.3776003312832412`", ",", "0.37375947201913284`", ",", 
     "0.3155637932375792`", ",", "0.2744980967652735`", ",", 
     "0.26698040480570695`", ",", "0.009818441693129287`"}], "}"}]}],
  SequenceForm[
  "Sorted list a is ", {0.9726289049745229, 0.8143054138367789, 
   0.7687722099742558, 0.6598882668698376, 0.642424105685971, 
   0.4761270388895511, 0.46073703587593506`, 0.4597296548149612, 
   0.4164074915466227, 0.40120329261782084`, 0.3776003312832412, 
   0.37375947201913284`, 0.3155637932375792, 0.2744980967652735, 
   0.26698040480570695`, 0.009818441693129287}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517360907`*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"47e5bb00-475f-4f6b-a833-e4a24d6b0976"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Reshaped list a as a matrix A is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.9726289049745229`", "0.8143054138367789`", "0.7687722099742558`", 
        "0.6598882668698376`"},
       {"0.642424105685971`", "0.4761270388895511`", "0.46073703587593506`", 
        "0.4597296548149612`"},
       {"0.4164074915466227`", "0.40120329261782084`", "0.3776003312832412`", 
        "0.37375947201913284`"},
       {"0.3155637932375792`", "0.2744980967652735`", "0.26698040480570695`", 
        "0.009818441693129287`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Reshaped list a as a matrix A is ", 
   MatrixForm[{{0.9726289049745229, 0.8143054138367789, 0.7687722099742558, 
    0.6598882668698376}, {0.642424105685971, 0.4761270388895511, 
    0.46073703587593506`, 0.4597296548149612}, {0.4164074915466227, 
    0.40120329261782084`, 0.3776003312832412, 0.37375947201913284`}, {
    0.3155637932375792, 0.2744980967652735, 0.26698040480570695`, 
    0.009818441693129287}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.886947951743775*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"fe8681d8-f1cd-402b-9327-a6b074c654c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix B is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"5", "5", "5", "5"},
       {"5", "5", "5", "5"},
       {"5", "5", "5", "5"},
       {"5", "5", "5", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix B is ", 
   MatrixForm[{{5, 5, 5, 5}, {5, 5, 5, 5}, {5, 5, 5, 5}, {5, 5, 5, 5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.886947951750049*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"5f786cbe-1f55-4b12-b57a-f0a2aa24bd3e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix C is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "3"}], 
        RowBox[{"-", "8"}], 
        RowBox[{"-", "15"}]},
       {"3", "0", 
        RowBox[{"-", "5"}], 
        RowBox[{"-", "12"}]},
       {"8", "5", "0", 
        RowBox[{"-", "7"}]},
       {"15", "12", "7", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix C is ", 
   MatrixForm[{{0, -3, -8, -15}, {3, 0, -5, -12}, {8, 5, 0, -7}, {15, 12, 7, 
    0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.8869479517552147`*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"4428998c-796a-4fe0-9802-f93331a5d8ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix D is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", "2", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "2"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Matrix D is ", 
   MatrixForm[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 2, 0}, {0, 0, 0, -2}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.886947951760097*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"2476dddd-e383-49a7-a8fd-7282e7b24fcd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Expression A+B-C-D+E-3 equals \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"2.972628904974523`", "5.814305413836779`", "10.768772209974255`", 
        "17.659888266869835`"},
       {
        RowBox[{"-", "0.3575758943140288`"}], "4.476127038889551`", 
        "7.460737035875935`", "14.45972965481496`"},
       {
        RowBox[{"-", "5.5835925084533775`"}], 
        RowBox[{"-", "2.5987967073821796`"}], "1.377600331283241`", 
        "9.373759472019133`"},
       {
        RowBox[{"-", "12.68443620676242`"}], 
        RowBox[{"-", "9.725501903234726`"}], 
        RowBox[{"-", "4.733019595194293`"}], "5.009818441693129`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Expression A+B-C-D+E-3 equals ", 
   MatrixForm[{{2.972628904974523, 5.814305413836779, 10.768772209974255`, 
    17.659888266869835`}, {-0.3575758943140288, 4.476127038889551, 
    7.460737035875935, 
    14.45972965481496}, {-5.5835925084533775`, -2.5987967073821796`, 
    1.377600331283241, 
    9.373759472019133}, {-12.68443620676242, -9.725501903234726, \
-4.733019595194293, 5.009818441693129}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.886947468239458*^9, {3.886947526131319*^9, 3.886947541624661*^9}, {
   3.886947649044248*^9, 3.886947663188237*^9}, 3.886947699793725*^9, 
   3.886947732551993*^9, 3.886947798113059*^9, 3.886947841010249*^9, 
   3.886947888697996*^9, {3.88694794539427*^9, 3.886947951765465*^9}},
 CellLabel->
  "During evaluation of \
In[439]:=",ExpressionUUID->"273ecfa1-ce1e-4b07-873f-bdb75d4553bd"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Task 2.",
  FontWeight->"Bold"],
 " Create matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["Z", "TI"], TraditionalForm], "errors" -> {}, "input" -> "Z", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c5e35b56-87dd-4ef7-92ff-f7ad468a271f"],
 " elements of which are calculated according to relation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["Z", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], ",", 
            StyleBox["j", "TI"]}]], "\[LongEqual]", 
         SubsuperscriptBox[
          StyleBox["x", "TI"], 
          StyleBox["i", "TI"], "2"], "-", 
         SubsuperscriptBox[
          StyleBox["y", "TI"], 
          StyleBox["j", "TI"], "2"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "Z_{i,j}=x_i^2-y_j^2", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "85adc4ba-c8d2-49b4-a654-fc0b630b3b6e"],
 " where ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], "\[LongEqual]", 
         RowBox[{"{", 
           RowBox[{"-3", ",", "0", ",", "1", ",", "2", ",", "5"}], "}"}], ",", 
         StyleBox["y", "TI"], "\[LongEqual]", 
         RowBox[{"{", 
           RowBox[{"-5", ",", "0", ",", "-4", ",", "1", ",", "3"}], "}"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "x=\\{-3,0,1,2,5\\},y=\\{-5,0,-4,1,3\\}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d184123c-447f-4cab-b3b2-eac4f46e97a0"],
 ". Add to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["Z", "TI"], TraditionalForm], "errors" -> {}, "input" -> "Z", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "247c10db-eab8-4a5c-acd7-b640d50e794b"],
 " a column containing ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], 
       TraditionalForm], "errors" -> {}, "input" -> "\\{1,2,3,4,5\\}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2911cd0d-281a-465c-9044-5236eb33ad70"],
 ". Then, between columns 1 and 2 insert another column containing ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|
    "boxes" -> FormBox["1", TraditionalForm], "errors" -> {}, "input" -> "1", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2ab6279f-b6f3-412e-9e77-0e33198e3140"],
 "\[CloseCurlyQuote]s. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886948024652896*^9, 3.886948057633003*^9}, {
  3.88694809430224*^9, 3.886948157314681*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"16e12a01-6188-4023-afeb-e1b07d19e1a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "0", ",", "1", ",", "2", ",", "5"}], "}"}]}], 
  ";", 
  RowBox[{"y", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "0", ",", 
     RowBox[{"-", "4"}], ",", "1", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ")"}], "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Initial matrix Z is \>\"", ",", " ", 
   RowBox[{"Z", "//", "MatrixForm"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8869482391109657`*^9, 3.886948363195558*^9}},
 CellLabel->
  "In[478]:=",ExpressionUUID->"b1765562-4c35-44ec-8f00-d02b4deb4dd4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial matrix Z is \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "16"}], "9", 
        RowBox[{"-", "7"}], "8", "0"},
       {
        RowBox[{"-", "25"}], "0", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}]},
       {
        RowBox[{"-", "24"}], "1", 
        RowBox[{"-", "15"}], "0", 
        RowBox[{"-", "8"}]},
       {
        RowBox[{"-", "21"}], "4", 
        RowBox[{"-", "12"}], "3", 
        RowBox[{"-", "5"}]},
       {"0", "25", "9", "24", "16"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Initial matrix Z is ", 
   MatrixForm[{{-16, 9, -7, 8, 0}, {-25, 0, -16, -1, -9}, {-24, 1, -15, 
    0, -8}, {-21, 4, -12, 3, -5}, {0, 25, 9, 24, 16}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886948359775201*^9, 3.886948363518854*^9}, 
   3.8869484490761337`*^9},
 CellLabel->
  "During evaluation of \
In[478]:=",ExpressionUUID->"999cf2cc-6e75-4b5d-b361-5ecb083bcbba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"joinedZ", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"Z", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], "}"}], 
      "]"}], ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After adding columns {1,2,3,4,5} to Z we get \>\"", ",", 
   RowBox[{"joinedZ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886948389324901*^9, 3.8869485053110323`*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"cbae4902-9350-42ca-853c-f308a564c392"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After adding columns {1,2,3,4,5} to Z we get \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "16"}], "9", 
        RowBox[{"-", "7"}], "8", "0", "1"},
       {
        RowBox[{"-", "25"}], "0", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}], "2"},
       {
        RowBox[{"-", "24"}], "1", 
        RowBox[{"-", "15"}], "0", 
        RowBox[{"-", "8"}], "3"},
       {
        RowBox[{"-", "21"}], "4", 
        RowBox[{"-", "12"}], "3", 
        RowBox[{"-", "5"}], "4"},
       {"0", "25", "9", "24", "16", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["After adding columns {1,2,3,4,5} to Z we get ", 
   MatrixForm[{{-16, 9, -7, 8, 0, 1}, {-25, 0, -16, -1, -9, 2}, {-24, 1, -15, 
    0, -8, 3}, {-21, 4, -12, 3, -5, 4}, {0, 25, 9, 24, 16, 5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886948429781375*^9, 3.886948505700862*^9}},
 CellLabel->
  "During evaluation of \
In[489]:=",ExpressionUUID->"7caf703b-a9ef-468c-b301-838df00037ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"joinedWithOnesZ", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"joinedZ", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1", ",", "5"}], "]"}], "}"}], "]"}], ",", 
     RowBox[{"joinedZ", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "6"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<After adding column {1,1,1,1,1} between first and second solumns we \
get \>\"", ",", " ", 
   RowBox[{"joinedWithOnesZ", "//", "MatrixForm"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.886948513939643*^9, 3.8869486009972*^9}},
 CellLabel->
  "In[493]:=",ExpressionUUID->"2da998c5-f59b-4bc7-b3db-8c22eb790bf3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After adding column {1,1,1,1,1} between first and second \
solumns we get \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "16"}], "1", 
        RowBox[{"-", "7"}], "8", "0", "1"},
       {
        RowBox[{"-", "25"}], "1", 
        RowBox[{"-", "16"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "9"}], "2"},
       {
        RowBox[{"-", "24"}], "1", 
        RowBox[{"-", "15"}], "0", 
        RowBox[{"-", "8"}], "3"},
       {
        RowBox[{"-", "21"}], "1", 
        RowBox[{"-", "12"}], "3", 
        RowBox[{"-", "5"}], "4"},
       {"0", "1", "9", "24", "16", "5"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm[
  "After adding column {1,1,1,1,1} between first and second solumns we get ", 
   
   MatrixForm[{{-16, 1, -7, 8, 0, 1}, {-25, 1, -16, -1, -9, 2}, {-24, 1, -15, 
    0, -8, 3}, {-21, 1, -12, 3, -5, 4}, {0, 1, 9, 24, 16, 5}}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886948585384864*^9, 3.886948601615122*^9}},
 CellLabel->
  "During evaluation of \
In[493]:=",ExpressionUUID->"b7f27e3e-5498-4e18-812e-22d144efb342"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. Solving equations and systems of equations", "Section",
 CellChangeTimes->{{3.886948673954214*^9, 
  3.886948697410881*^9}},ExpressionUUID->"3150ffd2-75d2-4fc5-839f-\
9c17d0580ad3"],

Cell[CellGroupData[{

Cell["5.1. Solving equations", "Subsection",
 CellChangeTimes->{{3.886948683230987*^9, 
  3.886948705997819*^9}},ExpressionUUID->"b930bdd9-3f7f-4f3f-ba2c-\
e4f1aa1d1294"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Solve equation ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         FractionBox[
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                StyleBox["x", "TI"], "2"], "/", 
               SuperscriptBox[
                StyleBox["a", "TI"], "2"]}]], "-", 
            StyleBox["x", "TI"], "/", 
            StyleBox["a", "TI"]}], 
          RowBox[{
            SqrtBox[
             RowBox[{"1", "+", 
               SuperscriptBox[
                StyleBox["x", "TI"], "2"], "/", 
               SuperscriptBox[
                StyleBox["a", "TI"], "2"]}]], "+", 
            StyleBox["x", "TI"], "/", 
            StyleBox["a", "TI"]}]], "\[LongEqual]", 
         FractionBox["1", "4"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\frac{\\sqrt{1+x^2/a^2}-x/a}{\\sqrt{1+x^2/a^2}+x/a}=\\frac{1}{4}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "98c9a458-c0ec-464e-b018-68ac4491a04b"],
 " w/ respect to ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       StyleBox["x", "TI"], TraditionalForm], "errors" -> {}, "input" -> "x", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "e5e20537-2324-46ca-9fb9-9aa226362c4c"],
 ". "
}], "Text",
 CellChangeTimes->{{3.886948719310954*^9, 3.886948726246007*^9}, {
  3.886948787975449*^9, 
  3.8869487913526087`*^9}},ExpressionUUID->"4ede7cdb-264f-4f2b-9647-\
270daa494a74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         SuperscriptBox["a", "2"]]}], "]"}], "-", 
      FractionBox["x", "a"]}], 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        FractionBox[
         SuperscriptBox["x", "2"], 
         SuperscriptBox["a", "2"]]}], "]"}], "+", 
      FractionBox["x", "a"]}]], "==", 
    FractionBox["1", "4"]}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886948797858025*^9, 3.886948860009736*^9}},
 CellLabel->
  "In[498]:=",ExpressionUUID->"2190133e-dcc7-43c6-bd68-174dd330fbe9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"3", " ", "a"}], "4"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.886948844564666*^9, 3.886948860451639*^9}},
 CellLabel->
  "Out[499]=",ExpressionUUID->"7bb2160d-e1d2-41d6-be94-2c01e13a9819"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2. Solving system of linear equations", "Subsection",
 CellChangeTimes->{{3.886959541093034*^9, 
  3.886959547715036*^9}},ExpressionUUID->"e63473c4-a89e-4b58-a4bd-\
c23856cccb00"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Solve system of linear equations ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], 
         StyleBox["x", "TI"], "\[LongEqual]", 
         StyleBox["b", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "Ax=b", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "725cfa74-2fef-45b3-bd12-1369343efc15"],
 " given my matrix ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["A", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["4", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["2", "InlineFormula"], " "}]], 
                 Cell[
                  TextData[{" ", 
                    Cell["-3", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "A=\\begin{pmatrix} \
1&2&-3&4&-1\\\\2&-1&3&-4&2\\\\3&1&-1&2&-1\\\\4&3&4&2&2\\\\1&-1&-1&2&-3\\end{\
pmatrix}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "87dc1a3c-9ee3-41b4-b632-879032cc654a"],
 " and vector ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["b", "TI"], "\[LongEqual]", 
         RowBox[{"(", 
           Cell[
            BoxData[
             FormBox[
              GridBox[{{
                 Cell[
                  TextData[{" ", 
                    Cell["-1", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["8", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["3", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-2", "InlineFormula"], " "}]]}, {
                 Cell[
                  TextData[{" ", 
                    Cell["-3", "InlineFormula"], " "}]]}}], 
              TraditionalForm]]], ")"}]}], TraditionalForm], "errors" -> {}, 
     "input" -> "b=\\begin{pmatrix} -1\\\\8\\\\3\\\\-2\\\\-3\\end{pmatrix}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "5b0786c9-1f06-4ba5-bfa6-d9bd8b5d7ba0"],
 ".\n"
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886959696078499*^9, 3.886959759707322*^9}, {
  3.886959875397159*^9, 3.886959877974086*^9}, {3.886959910881341*^9, 
  3.886959924800009*^9}, {3.886962663780005*^9, 3.886962665010455*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"abce9887-4150-4d8a-8bce-9a5007715dd9"],

Cell[CellGroupData[{

Cell["5.2.1. Inverse matrix method", "Subsubsection",
 CellChangeTimes->{{3.886959948300321*^9, 
  3.8869599537213297`*^9}},ExpressionUUID->"52885431-1f1d-4b69-9275-\
95e7f19aea09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", "b"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x = \>\"", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886959956693712*^9, 3.886960010907481*^9}},
 CellLabel->
  "In[500]:=",ExpressionUUID->"78cd0672-10f0-487a-a249-659dd1507fdc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}],
  SequenceForm["x = ", {2, 0, -2, -2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.886960011752186*^9},
 CellLabel->
  "During evaluation of \
In[500]:=",ExpressionUUID->"ce64dbac-65b7-4ff5-9bd0-a5a2c3c57d0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.2. Using Solve function", "Subsubsection",
 CellChangeTimes->{{3.886960043502861*^9, 
  3.886960054424472*^9}},ExpressionUUID->"16720fd5-a602-417e-bd2e-\
542d77807571"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x1", "+", 
      RowBox[{"2", "x2"}], "-", 
      RowBox[{"3", "x3"}], "+", 
      RowBox[{"4", "x4"}], "-", "x5"}], "==", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "x1"}], "-", "x2", "+", 
      RowBox[{"3", "x3"}], "-", 
      RowBox[{"4", "x4"}], "+", 
      RowBox[{"2", "x5"}]}], "==", "8"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"3", "x1"}], "+", "x2", "-", "x3", "+", 
      RowBox[{"2", "x4"}], "-", "x5"}], "==", "3"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"4", "x1"}], "+", 
      RowBox[{"3", "x2"}], "+", 
      RowBox[{"4", "x3"}], "+", 
      RowBox[{"2", "x4"}], "+", 
      RowBox[{"2", "x5"}]}], "==", 
     RowBox[{"-", "2"}]}], "&&", 
    RowBox[{
     RowBox[{"x1", "-", "x2", "-", "x3", "+", 
      RowBox[{"2", "x4"}], "-", 
      RowBox[{"3", "x5"}]}], "==", 
     RowBox[{"-", "3"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4", ",", "x5"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.88696005754172*^9, 3.886960208524148*^9}},
 CellLabel->
  "In[506]:=",ExpressionUUID->"fea13180-37e1-497d-a684-f0f9ae2bfcb3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1", "\[Rule]", "2"}], ",", 
    RowBox[{"x2", "\[Rule]", "0"}], ",", 
    RowBox[{"x3", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"x4", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"x5", "\[Rule]", "1"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.886960151189015*^9, 3.88696020910892*^9},
 CellLabel->
  "Out[506]=",ExpressionUUID->"947cd259-810e-45df-bdff-40ad0ee4f597"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.3. Using LinearSolve function", "Subsubsection",
 CellChangeTimes->{{3.886960227047261*^9, 
  3.886960234466166*^9}},ExpressionUUID->"7f06f54f-fb38-46b7-8d73-\
50ae5d07732b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "b"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x = \>\"", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8869602412593813`*^9, 3.8869602699189987`*^9}},
 CellLabel->
  "In[516]:=",ExpressionUUID->"7d3561b6-121e-401d-958d-58c9556de92b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}],
  SequenceForm["x = ", {2, 0, -2, -2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886960267563847*^9, 3.886960270445183*^9}},
 CellLabel->
  "During evaluation of \
In[516]:=",ExpressionUUID->"49a57f8a-cdb2-4e44-8b6f-8cda2cad384b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.4. Using Cramer\[CloseCurlyQuote]s method", "Subsubsection",
 CellChangeTimes->{{3.886960279973373*^9, 
  3.886960289487318*^9}},ExpressionUUID->"515ccf5f-7589-4777-a44f-\
170882e44281"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "1"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A3", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"4", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A4", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", 
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"5", ";;", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A5", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"A", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Det", "[", "A1", "]"}], ",", 
      RowBox[{"Det", "[", "A2", "]"}], ",", 
      RowBox[{"Det", "[", "A3", "]"}], ",", 
      RowBox[{"Det", "[", "A4", "]"}], ",", 
      RowBox[{"Det", "[", "A5", "]"}]}], "}"}], "/", 
    RowBox[{"Det", "[", "A", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<x = \>\"", ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886960341254387*^9, 3.8869604571968107`*^9}},
 CellLabel->
  "In[531]:=",ExpressionUUID->"0e27a091-9f75-4b18-988e-aa6fec68091c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"x = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}],
  SequenceForm["x = ", {2, 0, -2, -2, 1}],
  Editable->False]], "Print",
 CellChangeTimes->{{3.886960446800357*^9, 3.886960458087509*^9}},
 CellLabel->
  "During evaluation of \
In[531]:=",ExpressionUUID->"b9cf70a8-10cb-4c70-a8ea-d2cc54d649dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.2.5. Using RowReduce method", "Subsubsection",
 CellChangeTimes->{{3.886960467904324*^9, 
  3.886960472011578*^9}},ExpressionUUID->"b633fbc2-02bf-4d50-a6c3-\
897f678ce3fd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"A", ",", "b", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", 
       RowBox[{"-", "3"}], ",", "4", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}], ",", "3", ",", 
       RowBox[{"-", "4"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "8", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RowReduce", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"A", ",", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "b", "}"}], "]"}], ",", "2"}], "]"}], "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.886960516735553*^9, 3.886960588195342*^9}},
 CellLabel->
  "In[545]:=",ExpressionUUID->"cc47acfd-7e89-4d94-b2f3-3ecc957e92d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "2"},
     {"0", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", 
      RowBox[{"-", "2"}]},
     {"0", "0", "0", "1", "0", 
      RowBox[{"-", "2"}]},
     {"0", "0", "0", "0", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.886960563983725*^9, 3.886960588473365*^9}},
 CellLabel->
  "Out[548]//MatrixForm=",ExpressionUUID->"48939b11-9707-497e-b404-\
f688fba30a35"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.3. Solving non-linear equations", "Subsection",
 CellChangeTimes->{{3.886960629109853*^9, 
  3.886960639122243*^9}},ExpressionUUID->"a0657b09-35df-4359-adb3-\
c0cbd9e5a59a"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Solve system of non-linear equations ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox[
          StyleBox["x", "TI"], "3"], "+", 
         SuperscriptBox[
          StyleBox["y", "TI"], "3"], "\[LongEqual]", "35"}], TraditionalForm],
      "errors" -> {}, "input" -> "x^3+y^3=35", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "183607ae-bdee-490e-86b9-35585dc0a56e"],
 " and ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], "+", 
             StyleBox["y", "TI"]}], ")"}], "\[LongEqual]", "30"}], 
       TraditionalForm], "errors" -> {}, "input" -> "xy(x+y)=30", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "293cfb1a-d6ad-40cf-adfe-e2c3eb019d50"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886960678845511*^9, 3.886960709597929*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5d09796a-55df-4c5e-8239-801fa68bd298"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "+", 
      SuperscriptBox["y", "3"]}], "==", "35"}], "&&", 
    RowBox[{
     RowBox[{"x", " ", "y", 
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}]}], " ", "==", " ", "30"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.886960721623098*^9, 3.886960752636393*^9}},
 CellLabel->
  "In[552]:=",ExpressionUUID->"3a00ccb8-be56-45b4-a0a8-f10735330c8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "2"}], ",", 
     RowBox[{"y", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "3"}], ",", 
     RowBox[{"y", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.886960732710792*^9, 3.8869607529430037`*^9}},
 CellLabel->
  "Out[553]=",ExpressionUUID->"b91517d4-e5f7-4dfa-9af4-a76f68338dc8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6. Functions and their plots", "Section",
 CellChangeTimes->{{3.88696083561491*^9, 
  3.886960846711356*^9}},ExpressionUUID->"0dff84e4-2fde-4f36-9f29-\
dfaf4d4ad9b9"],

Cell[CellGroupData[{

Cell["6.1. Plotting function by a points list", "Subsection",
 CellChangeTimes->{{3.886960852899634*^9, 
  3.886960867069808*^9}},ExpressionUUID->"2ab91690-6710-4ce0-ae9f-\
701e255c241e"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Plot function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", 
         RadicalBox[
          RowBox[{
            StyleBox["x", "TI"], "(", 
            RowBox[{
              StyleBox["x", "TI"], "+", "2"}], ")"}], "3"]}], 
       TraditionalForm], "errors" -> {}, "input" -> "y=\\sqrt[3]{x(x+2)}", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "30ef81f7-a1cc-40c8-9412-4d699f13f80c"],
 " and its table of values. Plot ListPlot based on this table."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886960961320891*^9, 3.886961034995372*^9}, {
  3.886961419825473*^9, 3.886961425626286*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"bef2eada-bd3a-4bd3-8003-52959bd15458"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], "=", 
   RowBox[{"CubeRoot", "[", 
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"x", "+", "2"}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "6"}], ",", "4"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8869610515456676`*^9, 3.886961115604908*^9}, {
  3.886961174372685*^9, 3.88696126339777*^9}, {3.8869612948440647`*^9, 
  3.886961294923634*^9}, {3.8869629633020763`*^9, 3.886962964401374*^9}},
 CellLabel->
  "In[668]:=",ExpressionUUID->"c205c11b-73db-4bcc-8479-516afded70ae"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
TXfiqQ==
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1:eJwl1WW0VWUUBdBHd3fz6G6QkG5QUcQgRSxSxMDEQAEFAwNBRUWx6FQM7O7u
7u5u5xr+mG+t/QGXc87dZ7zCaXPHHl2koKBgtx/Jvfz4Rl7PdIbRlaIUozgl
KEkpSlOGspSjPBWoSCUqU4W9fe63ci0zGE43qrKPP/tO3sBMRtCdQ3JN3Kqf
yniqMcbZ9/JGZjGS3ERlHtKX0oOp5qLcpp/GhHyOuQHP6yupzr7mH+RNzGax
uRVv6aOYq1fhYf1q2Z9l+nLZhW18kn8vR3AHe5gPlcVYzy7zlXJPdrLAvEy2
Zwvv5/7lMG5nYq5ZNuQFfY0cxCr9Utmdz/Ua7Kf/KG9mDkvMrXlbH80xelUe
0c+nJ9PMxfN/6acziQXmRryoX0FNxpp/krfkGWc/mOesGo/qF9CLw8wlcu/6
GUymFvs7+1muy3PMHnCss+o8pl9Ibw43l+RO/Uym5LrMjXkpz47ajDP/Itfn
vrI7HOesBo/rF9GHI8yluEs/K/etd+CD7FWuUS/kZf0qLtN78IVehwP0X+UG
Vum9maefK9vwTt4ROYQx+vGyJht5wnyNHJDdY7n5YtmV7Xya70qOzP1mJ8xH
ytJsYHeuSfbN7rMwz1l2ZCsfZvflcKbmeckmvKJfJwezWl+RPeRLvS4H6r/J
jfkOOM/clnfzDnCCXosnc7305ShzGe7Wz85O53mam/Jq3gfqcZD5d7kp30d2
kvnOavOUfgn9mG4uyz36OdlD6nOwsz/k5jzL7B0nOqvD09l5+jPDXI579UXZ
Oxaam/FanjsNGG/+U27JfWUPOclZXZ7J980AZprLc5++OPuod+Kj7GTuWW/O
6/q1XK735Cu9IRP0v+TWvDN6H+brS2U7NvOeea0cyjj9ZFmPTTybz5UD2cWK
PCvZjR18lndPjsou5++ZZ8kK3K+vlv1Ykt2Xnfk4+5/nq7fgDX0NjZho/ltu
y/PNnnOKs/o8l/tjELPNFXkgO5/9pDGTnP0jt+d5ZqcYTCGT/dm/ckfuMTvB
EJrQlGY0pwUtaUVr2tCWdrSnAx3pRGem+Nz8ctqZa82uMJQ5zirxYHY5u5qd
MLfkzbwLrNR78bW+To4u8v/vui7m/wA9EMgU
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$99757#1"]& ]},
    VertexColors->CompressedData["
1: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
hoG2Nr4rk4Y/O3WxnxsbB2SaUO/l0W0vfx5GX6NYzN2o2AGZ4sbNc3tYcKHV
5OD2EipI111u0whrh6sJXX+ahFiQOJxVZzaHemDpSn0rzN8UP71NDPO3B/1M
MMb8e/RIn96eFqjq4lLRNO+Dh0+tTxmupsGx5g6VHahbT2esoPQltQFFz8xo
UJ0J7MtOBv8EU2Cc463NAry/Sept+RLEYXzT98rXiNuYs31KGOavqHm/tgBx
6z/1vHGRFeLg8H66+j4DXCSKbvdtZP113nss6k3X4J59Ez794My8PslsFTmP
eQQqNkt6h+P+kptycKC1Qa5L8g3nzj64cNm1Zm5PC8z8sHlJ+dILp6/W3hLV
oAEn+coI5nnP/OaRNZjHff3vHDOsl2NQN13Erh345PJlli9jgc7JraviuJCf
OTm03A92QHTxy6gJRxZc360euyaFClcubT6ci3mUr5iJbph/z8/5m7ZgngZa
ykQYm4B8/+jGXcOd4Ok73XiBowOK5dLT52IIEKj02b6fGz8nZP+aSNc+8FBu
XLoA8VlGPolzwDwC73hetWBdbbHPc9NxXna/T2WZYbxF2ENyAuMxSVdHnuYT
YKB22FGQ2Q4TdlwLV8T2gAllKL78DgFL30RUj9l3APdp4dW3ArrhWJSbbDfe
M3r57/DNmCdwjzV1Pd5TVT5b9IVnG1zTclu+o54JUwKiMuO6BNzXLONWwPOU
uWrzed/U8d7XyBLPS8aqjgkgb8rNJky/sGbCTk4LB97Lf+fnv8V5zHtdBcaH
oalUNXfixxBcoAr3bJpuhthxRXn3FDZQ764Sz6Kx4c75kfwnczRo59hvkhfa
Dx2t54JSdQdBq3p1EQP9gMSGMdHRnh5I8ite41tBwut4uaiUYvQPU/847D6I
+3P2/YQSiwHH6poKIqaZECbi9DgvmgqCspP5xp/o4E37yRkiQYKttD7XwDgF
BpK4dR+iruj5kb41EXXFxNNmV0inQIjrrsM/UM98bbVXuI56xjml+eY+1C3X
dWhh9xAfyDwgpY59KXhsyh2O8dulH7yqMe579KSrIsZfts7cts+mAG2LAvsK
6pnf3DN8F1HPNFGthXzwcw2ljloV4ecWOVZVluPnUl7mlm5Jxn06/fPkwwk6
VCcrfl+6loTsTxu06r0IuCRyVMHOsg3OTnywEYtEf1nHq6D6oAdiWgIb2deQ
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
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 4}, {-0.9999998025472135, 2.884499058854636}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8869611162605677`*^9, {3.886961175127833*^9, 3.8869612640254917`*^9}, 
   3.8869612962912207`*^9, 3.886962964885284*^9},
 CellLabel->"Out[670]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnQl4FNeV79u9CLDjTJz1ZZlEmWSSyf6yTJKxkVTq1oaEpJawjYwBN7tY
bLMjwEYFGDCrDNgQr+0FTDAGbDBgFlFgjDGYxTbGGGNTmcySvCQzkzdZ30xm
7jvLvVW3pNtdLdl5k8yLvu+UpKp7/v/fOfd2qbtV3V0/YnrrmJtHTB8/akRx
9dQRk1vHj5pWXHXrVNgVuywSid4diVy2oTgSh59FJGLerItEfm87vkLbuD12
7NjsuHHjMDJjxoyZQbtj1ujRo/EQRiRK21hxa2trRH3dwuNwnzcuYRg3gbYJ
NQ5t8DuNmcoaaBvUmF4gRF/+9mXaFgmpj7/gMAd0XaUWpcQY7sNx6BmZ4teA
+3BsJE7bmFC2fg19EAf343fcYcsc+n2KX4tJS+VwzV1g6LcruJYvsQ7WIZR/
NMhJNc4wjJP9tLU+RGLBedLnxNXHyZ5FogilNcYrME4k+KO0Vu2l34L0wkCA
+zCFfrvVN0BFMoiyjWqK2q+xOHKhqPSMPpkxn8rraZc6aN+MXNZRHEI/Xc7F
fBI3/VBca6K3MLgfmDPaG8frXPVT4fEs8WpQnbGDecFlrc23Gqtub7bU0EtW
+6gU7TbllTw9OI5oot2ZMEeW/udBAhrbh7ZFOqm6RWDT44apH0UVds9TutR2
zgss5DE+sGdfRNtgo7R58dbGzUE9akrMsF6mBdcG5U4L6vENwl9XXVf7F2kb
17uA0lqGR8ArsUgpqwIU5UxW0s9a+PPEAmuZ7nOLYC1FeFy/kSv59+gl9FUl
qLOtWhaqMyxG5+aMxPcmbFbQnJpUKPiMnBOTUOtDh44EqOOBE2JEnlZZMqF3
2kNtM8zMBH+tdUUN3Ni084ZX5jTfS62Nrqh0RqST6mx/tahFLVRr6bRjcpV0
+vwoOiWgn+m8UzyJ8j41l/Qbu/HZI88JPKN3KObreH/Gpvl+nv40r1QT4YRg
/xztBObqfxomByvWT3Re332CuDqVuPKY3nb/zx5ldbld6qdGNYN+HZE+qgeq
p2oMkU7yx7jajSLT/TbfVydUZy99nGlhySrkHRs8pG7H6jyH+2YGi9TaktDP
3N6pkf+GJNTdKl1KnS6UlTquboWz/FlRtaol8//m7movdnyCdmBPaTOHbwS0
N44/873HmHfb8HK67Pt4gfveSe4fut5/FUsRbhLazHU53u+/SZ3/neeQ7lNe
9qc5/GOurTdzOMuwb+a7vO9PXO8ul9ASx7a3t3sHfvenxN9z4nv5eODZsJjh
Sa/EOzLgp57i6q65uv9nui9UkOj7+Lh60ELqpsX97ot9g8uxWjrgfmn/lrWZ
kpY1dv/rV8PDVNjG8Fc+QEPw61sh9v79W7qPW8SPPbzHPPgV7wkh331PoL+C
c0oGr3VLBt8duUrAT5EE/oz7svAdxwBvR+RroZzq0YD+zIh3vzwvZx+6P4w/
fZaHIB2SUeuiQLXmo4yGPwLeGsAjdEL7kgHtV7jp24sZ/MsgAZqxLRHQT/Dg
ELbQnTU0n38V0pke2f+Fwb4fmvYje5yay/GnvkEQ6sNfvpsgxUEQsruCtn2E
XC+4PvCYXCO8pkmQbwEJdQvIygVFc/gen5zap1X97pB/0ifH1givhZG4apda
Oh+hoXF1Y8jKlXW5j0grUOvHu4P4CR/RUYh9g6Y0o5/yxyk+WUoQ7pMhcHwa
DzzIDof8mNbHMgnZJ2hO06zdYhDS6VIMFaIVHQapHu2r00l+yI/KtpfCEi0F
SIhIkWGFfdGH9JYz3ZijlBLDCr1z8sdCSHP+Of1Il3kladzGGAl3ei5fNSDR
uBjnubCFunjwR3uL9GGvQR0gi01aHYlLMLncieibBhoaF6WUIPpHekvzwW4N
Wk0NWh31a/YWzLdpS7dOfX7jnAVD8czDQz/cW6AP+EBeexJsgJ7e4L/xx7ml
ElwD8ebpQ70FeT8fwOID8yQNvKb01+ZJzqkG3OGJfqC3IFfxAWxtV5CAQZkP
7BqAvXHv7y2IOqPqKzdm6EgyMDXdQLxFe1VvQf6MD9BJMB9IhWFqTCDv6y3I
ezWQMgAp80HorKu+qg2dkzdjzHHL5PT0GuRKzaBs8F0EEvVxPJhaI0iZBLkL
QO6KaB3ODxL37iXyk7xxC2+0bE8hlZ0yrRV1rEyr2W8Z+mIb7/LGXWkg+C1u
8jzPp7HEdBZlEACplyCGcYGb1Xt6Oyf8X1I+k3UH8Stt7DZ3ZpAr3iGIU9bi
zQxNOhi4OkiTAUQbZ6mbS69B+ikD7AjCtHiVeuL41czjstpSQpAWAmnxgS/v
LYh8IMtrRIJEfRwP5loeR2cyAuERLbRYNZB+7xDElRA6CHbJG3ydD6J3rqVr
5/r2FqSPbDkaWGBg+SCOXulgHpcJds6iqXlXQIroxz4Wg+hBZnTOHsLJtKAZ
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
ZAjIx3oyNWkDyDm/pXkr+UQIyEdzT033xdpsAHk999Rk9an5WAjIR3yd8PPI
tQaQNwoU+GgIyIdyF9T9bsB1BpALuQUCLf1ICMgHezI1gw0gF3OD4O/e1Hyo
KwjdL7vKzw5foi0Ge/kShlw3Nk+E/v2V536ZekvXsL9UBDLEAHKpwAl5f8iE
8Puq5zyxB88eQw0gPzC01NSRq0JArjTo5JyaYQaQH/qV5J2aPwsBuSJ/Z4NT
c5MB5O8KnJorQ0Auzz81wbPHCAPIPxQ4Ne8JAZEXLCgNXaf71Iw0gPwo/9R4
i+zyXoDEDJ0lkNEGkB8bpkaCePPqGYWCFGGO0GBUV8l/nMH/J4YZiRo6GdYI
uTRUDZRLpuMNpj8Ldh+j0LWHoMGumgzoMvIojg2TJYmZBonfvRuJfC6L46XI
eG0vfseLUE3XnBakJz/iQ10njNffKm3vglbT5e09EKdEJ8e11DkvTO6JAYp4
L7FRn00HXcFB7jsy+ICf6Krkot6KyQvf9V4zGb2mgSSmGiTo2uXAqw/iWJx+
eXSv69PeFd6Vs+TNVq/XlLoHol/TbVpDJoNZhn0z3+V9+plHzol6h/6cL5X4
Q2CVq13dNum3aJCfXrLwR8Dv9Vq71l+MzXOtv4nfdBL9eIH73knuH7refxWL
Ptfay97U5xFFonQKDb4Y0nQy/dNc/+Gz6HOtfXaHd9w0h3+a1z98lgIfnvzR
1/n/1RwK/Jk2s3FzGQ8T3madTLzs/wKBgKmd\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"1ad95290-d0ab-4a66-9e2a-49d6d6071a93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"N", "[", 
        RowBox[{"y", "[", "x", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "4"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"points", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8869612722105494`*^9, 3.8869613354624147`*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"8c643499-d3f3-4537-811e-8bc883f5a544"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", "6"}], "2.8844991406148166`"},
    {
     RowBox[{"-", "5"}], "2.46621207433047`"},
    {
     RowBox[{"-", "4"}], "2.`"},
    {
     RowBox[{"-", "3"}], "1.4422495703074083`"},
    {
     RowBox[{"-", "2"}], "0.`"},
    {
     RowBox[{"-", "1"}], 
     RowBox[{"-", "1.`"}]},
    {"0", "0.`"},
    {"1", "1.4422495703074083`"},
    {"2", "2.`"},
    {"3", "2.46621207433047`"},
    {"4", "2.8844991406148166`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88696130708689*^9, 3.8869613357745323`*^9}},
 CellLabel->
  "Out[587]//TableForm=",ExpressionUUID->"a685c80b-8d8e-4391-8ca7-\
209678115b3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"points", ",", 
    RowBox[{"Joined", "->", "True"}], ",", 
    RowBox[{"Mesh", "->", "Full"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.01", "]"}], ",", "Red", ",", "Dashed"}], 
      "}"}]}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.886961343559403*^9, 3.886961382542801*^9}, {
  3.886962968310669*^9, 3.886962986824192*^9}},
 CellLabel->
  "In[674]:=",ExpressionUUID->"0186d185-5572-4501-8818-461f9903c58b"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQESB77ZCXmWCLM7QPgiB2L/J6ae3cUM5QscgCqE
8jmg6r/bQ8Vh8lDwYT8qjQ4+2KPpd0Az3wHNfgdU9426l1buBQBPa1kI
    "], {{{}, {}, 
      {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], CapForm["Butt"], 
       LineBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}}, {
      {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], CapForm["Butt"], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 27, 28, 
        29, 30, 31, 32, 33}]}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.9, 0.36, 0.054], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.365248, 0.427802, 0.758297], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.945109, 0.593901, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.645957, 0.253192, 0.685109], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.285821, 0.56, 0.450773], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.7, 0.336, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.491486, 0.345109, 0.8], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.71788, 0.568653, 0.], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.70743, 0.224, 0.542415], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.287228, 0.490217, 0.664674], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
       CapForm["Butt"], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
       
       CapForm["Butt"], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6., 4.}, {-1., 2.8844991406148166`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.886961383487464*^9, {3.886962969795075*^9, 3.886962987295138*^9}},
 CellLabel->
  "Out[674]=",ExpressionUUID->"b0267eb6-3ec8-4dcb-b4d0-d7180ebedd1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.886961396366028*^9, 3.88696139862179*^9}},
 CellLabel->
  "In[675]:=",ExpressionUUID->"f2c3749a-fdfe-4e6e-8c00-6fcd1eb3376b"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
TXfiqQ==
     "], {{}, {}, 
      TagBox[
       {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
        "Butt"], LineBox[CompressedData["
1:eJwl1WW0VWUUBdBHd3fz6G6QkG5QUcQgRSxSxMDEQAEFAwNBRUWx6FQM7O7u
7u5u5xr+mG+t/QGXc87dZ7zCaXPHHl2koKBgtx/Jvfz4Rl7PdIbRlaIUozgl
KEkpSlOGspSjPBWoSCUqU4W9fe63ci0zGE43qrKPP/tO3sBMRtCdQ3JN3Kqf
yniqMcbZ9/JGZjGS3ERlHtKX0oOp5qLcpp/GhHyOuQHP6yupzr7mH+RNzGax
uRVv6aOYq1fhYf1q2Z9l+nLZhW18kn8vR3AHe5gPlcVYzy7zlXJPdrLAvEy2
Zwvv5/7lMG5nYq5ZNuQFfY0cxCr9Utmdz/Ua7Kf/KG9mDkvMrXlbH80xelUe
0c+nJ9PMxfN/6acziQXmRryoX0FNxpp/krfkGWc/mOesGo/qF9CLw8wlcu/6
GUymFvs7+1muy3PMHnCss+o8pl9Ibw43l+RO/Uym5LrMjXkpz47ajDP/Itfn
vrI7HOesBo/rF9GHI8yluEs/K/etd+CD7FWuUS/kZf0qLtN78IVehwP0X+UG
Vum9maefK9vwTt4ROYQx+vGyJht5wnyNHJDdY7n5YtmV7Xya70qOzP1mJ8xH
ytJsYHeuSfbN7rMwz1l2ZCsfZvflcKbmeckmvKJfJwezWl+RPeRLvS4H6r/J
jfkOOM/clnfzDnCCXosnc7305ShzGe7Wz85O53mam/Jq3gfqcZD5d7kp30d2
kvnOavOUfgn9mG4uyz36OdlD6nOwsz/k5jzL7B0nOqvD09l5+jPDXI579UXZ
Oxaam/FanjsNGG/+U27JfWUPOclZXZ7J980AZprLc5++OPuod+Kj7GTuWW/O
6/q1XK735Cu9IRP0v+TWvDN6H+brS2U7NvOeea0cyjj9ZFmPTTybz5UD2cWK
PCvZjR18lndPjsou5++ZZ8kK3K+vlv1Ykt2Xnfk4+5/nq7fgDX0NjZho/ltu
y/PNnnOKs/o8l/tjELPNFXkgO5/9pDGTnP0jt+d5ZqcYTCGT/dm/ckfuMTvB
EJrQlGY0pwUtaUVr2tCWdrSnAx3pRGem+Nz8ctqZa82uMJQ5zirxYHY5u5qd
MLfkzbwLrNR78bW+To4u8v/vui7m/wA9EMgU
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$99757#1"]& ]},
     VertexColors->CompressedData["
1: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
hoG2Nr4rk4Y/O3WxnxsbB2SaUO/l0W0vfx5GX6NYzN2o2AGZ4sbNc3tYcKHV
5OD2EipI111u0whrh6sJXX+ahFiQOJxVZzaHemDpSn0rzN8UP71NDPO3B/1M
MMb8e/RIn96eFqjq4lLRNO+Dh0+tTxmupsGx5g6VHahbT2esoPQltQFFz8xo
UJ0J7MtOBv8EU2Cc463NAry/Sept+RLEYXzT98rXiNuYs31KGOavqHm/tgBx
6z/1vHGRFeLg8H66+j4DXCSKbvdtZP113nss6k3X4J59Ez794My8PslsFTmP
eQQqNkt6h+P+kptycKC1Qa5L8g3nzj64cNm1Zm5PC8z8sHlJ+dILp6/W3hLV
oAEn+coI5nnP/OaRNZjHff3vHDOsl2NQN13Erh345PJlli9jgc7JraviuJCf
OTm03A92QHTxy6gJRxZc360euyaFClcubT6ci3mUr5iJbph/z8/5m7ZgngZa
ykQYm4B8/+jGXcOd4Ok73XiBowOK5dLT52IIEKj02b6fGz8nZP+aSNc+8FBu
XLoA8VlGPolzwDwC73hetWBdbbHPc9NxXna/T2WZYbxF2ENyAuMxSVdHnuYT
YKB22FGQ2Q4TdlwLV8T2gAllKL78DgFL30RUj9l3APdp4dW3ArrhWJSbbDfe
M3r57/DNmCdwjzV1Pd5TVT5b9IVnG1zTclu+o54JUwKiMuO6BNzXLONWwPOU
uWrzed/U8d7XyBLPS8aqjgkgb8rNJky/sGbCTk4LB97Lf+fnv8V5zHtdBcaH
oalUNXfixxBcoAr3bJpuhthxRXn3FDZQ764Sz6Kx4c75kfwnczRo59hvkhfa
Dx2t54JSdQdBq3p1EQP9gMSGMdHRnh5I8ite41tBwut4uaiUYvQPU/847D6I
+3P2/YQSiwHH6poKIqaZECbi9DgvmgqCspP5xp/o4E37yRkiQYKttD7XwDgF
BpK4dR+iruj5kb41EXXFxNNmV0inQIjrrsM/UM98bbVXuI56xjml+eY+1C3X
dWhh9xAfyDwgpY59KXhsyh2O8dulH7yqMe579KSrIsZfts7cts+mAG2LAvsK
6pnf3DN8F1HPNFGthXzwcw2ljloV4ecWOVZVluPnUl7mlm5Jxn06/fPkwwk6
VCcrfl+6loTsTxu06r0IuCRyVMHOsg3OTnywEYtEf1nHq6D6oAdiWgIb2deQ
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
      "]], {}}, {{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQESB77ZCXmWCLM7QPgiB2L/J6ae3cUM5QscgCqE
8jmg6r/bQ8Vh8lDwYT8qjQ4+2KPpd0Az3wHNfgdU9426l1buBQBPa1kI
     "], {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], CapForm["Butt"], 
        LineBox[{12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.01], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], CapForm["Butt"], 
        PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 27, 28, 
         29, 30, 31, 32, 33}]}, {}}}], {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 4}, {-0.9999998025472135, 2.884499058854636}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.886961399047863*^9, {3.886962979695449*^9, 3.886962989637064*^9}},
 CellLabel->
  "Out[675]=",ExpressionUUID->"45d46d3f-a85e-4a07-a021-56dd57264b0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.2. Building polynomial plot", "Subsection",
 CellChangeTimes->{{3.886961454443787*^9, 
  3.886961463356419*^9}},ExpressionUUID->"c94bf70d-b5dd-48f6-90b7-\
c832cc3fac74"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Plot polynomial ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], "\[LongEqual]", "-5", "+", "3", 
         SuperscriptBox[
          StyleBox["x", "TI"], "2"], "+", "2", 
         SuperscriptBox[
          StyleBox["x", "TI"], "3"]}], TraditionalForm], "errors" -> {}, 
     "input" -> "y=-5+3x^2+2x^3", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d17b8ca6-1ec3-4327-abbb-4842202ad387"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886961472034359*^9, 3.8869615144388857`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"4482cbbd-b021-4a68-a7e4-aa979f3f780b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"2", 
     SuperscriptBox["x", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886961592100997*^9, 3.886961654150113*^9}, {
  3.88696295038577*^9, 3.886962952420269*^9}},
 CellLabel->
  "In[662]:=",ExpressionUUID->"12f91193-037c-41a6-8fa1-ba8d352aa8b5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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

    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1:eJwl1GWUVWUYBeChU7p76JYG6QZbx0TFwC5QMUhRAYNUwEAlBAHBTlDA7law
u8UWAxTr2csfz7x7v+eugXu+c6ZwzLiiscUKCgpu9SNzTz9+NW/n3HQ6UZwS
lKQUe/ncb+YdnJdOZ0qzt2u/m3dyfjpdKMM+ru0w7+KCdLoyxn43npbnplOW
fe12mnczIZ1uHG9fiWfkeemUYz+7P8x7mJhOd06wr8yz8vx0yrO/3Z/mvUxK
pwcn2lfhOfnKdCpwgN0u8z4mp+c+2TXmbXkZPTlJr8rz8lXpTNFb8bG8hooc
qP9l3p/rXKJ34Mtcy72Vm/COvJxenKxX4wV5AZfKnfkm15gqt+YT+RpzELfI
c8ye/CQvMUfmnstF5t/mUvOBfF+zD1Pl6WZHVvCVfp05hLUU5XzNQpbzrr7I
HMAabtJnmd25mR/0G8zhrGMP/RSzOi/mu5j9WChfZnbh23yGC+U2fCqvzTMi
9+JnuRIHyf+Y6/PZ9Dxfdk15T15Bb07Va/BS/q/pVOZgu3/NDUxLpw+n2dfk
ZfnqdKpwSF4WHjQuSqcvValGdWpQk1ocmveLh+SL0+nH6Xa1eCVnlU5tDrMr
zsY8E+n05wy72rwqX5tOHQ63K8GmnFl63he9Ge/LKxnAmXodXstZcrncle9y
Ld9dbstn8jrm5ZzYLtdllFySzXmuzb7MkGeYu/O1vNgcyih5otk8zwIf5B6a
A/M85pnQZ5s9WMWP+o3miGL//z0aqOePU12W8bq+0OzPahbrV5jdWMn3+vXm
MMbmXMx2fJ57ZQ7O75Xnm735Ra7HEXIpHpZnhtyJbbnGJLkFH8qrGMQ4vR5b
8m+m51z19nwh30Z9jtRL80je03Qm6y35SF7NYM7S67M170g6DTjKrgyP5p1I
Zwhn2zXgjdyzdBoy2q4sj+Vs0xnKOXYNeVNekk4jjrYrx+O5l+kMY7xdI96S
l6bTmGPsyvOEPCud4TThWPsKPJlzTWcEhRxnX5Gn5DnpjKQpzWhOC1rSita0
oS3taE8HOube+j3/AViwvHw=
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$98811#1"]& ]},
    VertexColors->CompressedData["
1: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
kreX21L/80sxA///95n/+/92/h+3i2qk
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-2, 2}, {-8.999999020408223, 13.709216992799938`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886961622219467*^9, 3.886961654487405*^9}, 
   3.886962953672648*^9},
 CellLabel->
  "Out[664]=",ExpressionUUID->"96ea6fca-c1fc-4bd0-a6f5-887dd1870beb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.3. Build arbitrary explicitly defined function", "Subsection",
 CellChangeTimes->{{3.886961683740201*^9, 
  3.886961693962922*^9}},ExpressionUUID->"57aa3e37-ded0-42a9-aa97-\
c66a14de562a"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["x", "TI"], ")"}], "\[LongEqual]", "2", 
         StyleBox["x", "TI"], "+", 
         SuperscriptBox[
          StyleBox["x", "TI"], "2"], "-", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], "+", "1"}], ")"}], "ln", 
         RowBox[{"(", 
           RowBox[{
             StyleBox["x", "TI"], "+", "2"}], ")"}]}], TraditionalForm], 
     "errors" -> {}, "input" -> "y(x)=2x+x^2-(x+1)\\ln(x+2)", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "aa06a269-89e4-4c70-a514-6b86bb4f6495"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.8869616999165373`*^9, 3.8869617046802483`*^9}, {
  3.8869617422571173`*^9, 3.8869617571357737`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"5f629ddb-f37a-48c3-bff8-be709b418ca7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "1"}], ")"}], 
     RowBox[{"Log", "[", 
      RowBox[{"x", "+", "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"y", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886961760968286*^9, 3.8869617804636173`*^9}, {
  3.886961840550911*^9, 3.886961848882023*^9}, {3.8869619027606153`*^9, 
  3.8869619700069838`*^9}, {3.8869620197964983`*^9, 3.886962055232664*^9}, {
  3.886962946888434*^9, 3.886962956149392*^9}},
 CellLabel->
  "In[665]:=",ExpressionUUID->"107a72f0-6aac-4705-ad6d-1ef34786098e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
/fp2oYcB/l5FI2JnI5uInPe7fHpRWRP5H/hFPT0=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1:eJwl1HV4l1UYBuCNVLq7RiMtHVIKtsJQwYYZYA6wABUBg1BQwS6UblDs7u5u
sLu7uZ/LP+49z3t+17bvO+dsRSWlxScXFhQU3OxLI1bygvlK2Y9N7GI+SpZj
KXeZL5U92MAs87myDW/r1+Z72Ek/QP4i17JQ78YUfYZswWv6SEr1GjymL2CO
3oH39TzfMF8+klcxjmnmxryoD+JovTx367PpyIHmX+U6TmEUk6zV5PE8D2XY
1fyxvJrxDOYYaxW4J+9GJw4y/ybXcyrFlGU365/IayhhCMdaq8i9+nl0Zoz5
d7mB0xhNOYZb/zT7ln1mKBOs7cB9+vl0Yaz5D7mR07O3TLZWiyf0iynPCPNn
8rrsS/aOidZ25H79ArpysPlPuYkzsl9MsVabJ/VLqMDu5s/l9dkXppub8FL2
juP0SjyQc6Mbh5j/kpuZyjnmIl7PPuY89Do8lbvE3NwXtuoV2UP/Qt6QveRM
c1Nezn5zvF6ZB/VFsidzs9eyLe/o3TlU/zv3O/ujd2eaPlO25I2cuxzAmJyr
rMtynjZfLvuwSJ8nO7KWbdkPOZhbclbmPeWX8ka5RF4ku7COCeazZDNW8Uru
suzPZoabT5BVWMZD5sWyFxuZl3sg27GGd3O+clDh/3+7O5sPk//Im/JMOb+s
s57p5lmyFat5M/dVDmRs7qOsxwqeMV8h+7JYny878UHOQw7JXdL3kl/lfVmg
d2WifrZszqu5i5yoV+Vh/TLZm/m5h7I97+k9OFz/V27JeTPb3Jq3cldz5/X6
PJufQyX2Nn+dd849zF3lJGvVeES/kJ4cYf5P3ppzyP3MnbfWgOdyzlRmH/M3
cmnuWO4h+QdZnUdzpvTiSHP+Md2W9809owr7WvtWLst55k7Qm3HWC7ldn5Gz
oir7WftOLs8+ZU/pw3jrZbgjfzvZG6qxv7Xv5Yq8Z96fvlRnpM9+kCvzzHkX
+lGDUT77Ua6iNM9Jf2pS7LOf5Gom5ZkYQC1qU4e61KM+DWhIIxrThKY0ozkt
KKIlrWhNG9rSjvaM9jt/lmuYnPdiICXWy3KnPjPnxlRzQ57PvcyZ6p35UF8i
h7KFDubtwvrAkg==
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$99284#1"]& ]},
    VertexColors->CompressedData["
1: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
     "]], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-10.06350193532953, 8.562247665704987}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.886961780757794*^9, 3.8869618493679457`*^9, {3.8869619033452377`*^9, 
   3.886961912788475*^9}, {3.886961943175354*^9, 3.8869619703983917`*^9}, {
   3.886962044746202*^9, 3.886962055584353*^9}, {3.886962947495141*^9, 
   3.8869629564944153`*^9}},
 CellLabel->
  "Out[667]=",ExpressionUUID->"1fe023c6-af5b-49f0-b0c0-15c9becc7b30"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.4. Drawing Parametric Plots", "Subsection",
 CellChangeTimes->{{3.886962539458325*^9, 
  3.886962553302968*^9}},ExpressionUUID->"1b514d27-16f2-4fd0-a948-\
8d60ab504ad7"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Build function ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", "3", 
         SuperscriptBox["cos", "3"], 
         StyleBox["t", "TI"], ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", "2", 
         SuperscriptBox["sin", "3"], 
         StyleBox["t", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "x(t)=3\\cos^3 t,y(t)=2\\sin^3 t", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "2ea5a83a-0bd6-452a-8276-4ea39fac889b"],
 ". Build table of values on interval ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"[", 
         RowBox[{"0", ",", "2", "\[Pi]"}], "]"}], TraditionalForm], 
     "errors" -> {}, "input" -> "[0,2\\pi]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "c69fa63c-a43a-4109-95ac-716b34f61a3b"],
 " and corresponding list plot. "
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886962559931553*^9, 3.886962579693067*^9}, {
  3.8869626188366127`*^9, 3.886962621099779*^9}, {3.886962717401464*^9, 
  3.886962756874774*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"40bb42af-ff82-40b5-97e7-fd961771883f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], "=", 
   RowBox[{"3", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Cos", "[", "t", "]"}], ")"}], "3"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], "=", 
   RowBox[{"2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Sin", "[", "t", "]"}], ")"}], "3"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.007", "]"}], ",", "Blue"}], "}"}]}], ",", 
    
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.886962781090074*^9, 3.8869628564675093`*^9}, {
  3.886962942192412*^9, 3.886962942369005*^9}},
 CellLabel->
  "In[683]:=",ExpressionUUID->"12af2d7e-1448-4123-859a-ac1feb87d44e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
v8vG5A/7/kf7H7M0qrk=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.007], Opacity[1], 
       LineBox[CompressedData["
1:eJwl13e8l/MbgPEjUhpS0ZZSaWrRjmhbbUp776FdaEo0adCw2kbRMBraQ3vv
pb0TUqSS3/v++eNy39f1PEed832ez3mVvXmXWp3vSkhI6Hp3QkLMjxMlJJyy
vMwrm6XMgVpr8yfXs5gteONw158z3+ctXbtjVsIX+rP6u/Y89sftPez77U+4
b6v9QfTmf/Gcrnfg2/gH/AFely/hpWFN+MR/TturYD1vhX+1yvhSy4sntW38
IfThN/iH8L9L+FQ7o1XFBt4axbBdT4e++t98Au7BZ9rZ+P6wkbdBcezQ0+N1
/SafiMSYop3Tnscm3hYlsFPPgDf0W3wS7sVU7bz2AjbzdiiJXXpGvKnf5pOR
BNO0C9qL2MLboxR265nQT/+Hf4SkmK5d1F7CVt4BpbFHz4z++p34vHEfZmiX
tGrYxjuiDPbqWTBA/zc+ByTDTO2yVh3beSeUxT79YQyMhwmfGskxS/uF18AO
3jnhvw+miv6Vlg9PSft5Vgzid+EzLbX76mk/8jJIoX3Or9hrYifvEn+c+6rq
s7X8eFo7wB/B4HiOkMs9Hfl2+xTX0/BX+VJeyT7SXjaeU/vr9qP2WvZJ9pTu
/8L8VXtFqxXPpzlI2+Xaw/aW9ibm+ngWzDG8k/ma64nM53h9c47r5c1hvJ1Z
gBc0e/Lm5oH42Zof8i5mOV9/0J4Ndflb8fMyh/C77Y/ZO9l32Ke6Ny2vz5fF
ffFu8Df4z/b7Xf/S/pu9NnbzrK630jbwrvHR8Of51/H+4hntEM+OIfweTNNS
4Svtd14He3i3eId8/Qv6N/F9xXmgHeaP4m2eGNPjXcds7WqcOdjLu6M8jug5
MFS/FzPiWcAc7Y/4DLCP90AFHNVz4h09CWbG54uvtWu8LvbznqiIn/VceFdP
ilnxc8M32nVeDwd4L1TCMf0xDNPvw+fag5ir/clfxUHeG5VxXM+N4XoyfKE9
hHnaX7w+DvE+qIITcV5ihJ4cX2rpMF+7wRvgMO+Lqjip58XIeCfwlZYeC7S/
eUMc4a/HGeXzeFGfqxWKc007xfNhFE+J2VoGfKvd5I1wlL8RZ5avf0mfpxWO
Z1s7zfNjdDxTyO2eznynfU78bHgDvjzeRRTjb/Jj9oyuf2e/ZW8c77Vrg+P5
1B+xt7ZvjPPRPjbOwzgH7dXsDcz5rlUwh/P2ZpH4vsxevIV5MM4acwJ/LZ5F
X3/GXgD1+HvxdzLf5m3MVDyP2YU3NXfFWWuOi3cgPjd7Q/sKvbJ9lL2cvbi9
n/24PZP7vrfftjfBMZ7N9TbaJt4vzmZenS/gRePP0M7yx/E+fwDfxOfuvkba
ynj3kFn7gf9jb4rjvH+c3e6roX8bZ1ac99o5XhBjeGrM1bJgoXaHN8MJPgDV
cF4vhLF6GsyLswyLtH95c5zkA1EdF/TCGKenxfw4P7A4UcL/f1m30E5ZB6EG
LmpFMF5/EAviM8YS7S601E7zwaiJS1pRfKA/hG/j54gftURopZ3hb6EWLmtP
4EM9Hb7TsmNpnI1orZ3lQ1Abv2hPYoKeHt9rj2KZdk88D9o5/jbq4IpWDBP1
DPhBy4HlWmK01c7zoXgZv2rFMSmecyzUcmKFdm+c99oF/g6S+fxqat/FGR1n
mvYbL4HJ8Uwhb/z+4Lvti+Id5435qjhXkUtbyZPEu8AvxvfvnrZ8M3+XJ4/f
V/x7XtE+Ir6neJftve2H7DXtE+P3i/t/N0viVe0j18qZQ+N7NTPzfGZX3szc
E8+dOZ53NhfHOWI24Q3N1a5XMUfzDmZ5XsLsH5+9eYLXNifH+eprV5lJ4169
bPyus1+Kz8jezr5FH8ZT8Nr8h3gPUYT34Yfj7Hb9qr0UPuZZkN/1bnyvfYnr
GXlTvibOkji/tNX8PnTkl/lwpHRfHW1h/L3jnNf+4KXxCX8YP2p5sEZLhk7a
L3wE6uOaVgaf6lmxVMuLtVry+LlpV/hINMB1rSw+0x/BMi0f1mkp0EX7lY9C
Q/ypPYUpejYs1/LjJy1lnIHab3w0GuEv7WlM1bNjhVYA67X70VX7nb+HxrgR
5x2m6Y9ipfY4Nmip0E27yt9HE/ytPYPpeg6s0gpio/YAumt/8DFoipvas5ih
58RqrRA2aanRQ7vGx6IZbmnlMTOef6zRCmOzlgY9tet8HO73+b2sLdJKxnmm
3eYVMIs/hrVaJvc109bGOxLPk7aFp0Uv/me89+5pz7fy8TwVf4Uv5qXiTOd9
+RF7C9f/sVfE53GOu/aOPbe9gL27fZ+9mv0D+zr3Z7Y3tzcy17lWNX5XxfNo
Voq/vzkgzkDzJK8T72ei//79VtTX/w+vMZ42
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$103651#1"]& ]},
    VertexColors->CompressedData["
1:eJy9vHk4lW3XB2woSiqzKFNmIUkDYWVKpDIVaVDJlMxTRMlMIhWSIUSKCtFk
ShpQ7H3tzTaPe2STDCkZ8p37Ob7n+I7jeb/nfZ73Pp73PY77r/M+rXNda/3O
tX6/dV07mfPe1s4cbGxsvpxsbOg/Niwr0XbTSQZs+919Oq8QB2Pn281lbrXB
39dV/8n6P+53MtoZrX6GARMP2By0cDi46eeqNXG/DSh7DQRG+MbgjiJ/aWdn
L6hapFV4fiJAuueQ/O4eJhCDutbgj1HAL0rIOoGrA25T7joOjoyD3F36KP06
A/zvDfBt+NQBJeRRpUehTJC0G2eomIxCOHVvxun37bB/3Vc5TpVRWBcTqrYu
iwEvIsHY7RERuNJ+hovx0iF0WiZZN4UOsgNxnp0fCeAm+dY98DkVzk8rPfMj
04DBr/HdYicBTDl92r5IUcFI7kXOdBYNQj3trjF/YSDg13bGc4UCnVI5vLM3
aNAkcuWlLxMD4yT2lHPzFHjvZsbLFk+DOeHrrYRRDFT5Hb5RSikgJpPj+eYU
Dezi1obbdGPQ7/cz3PcJGRo3SmeGfaEC15Pjcpl5GASNffOrrxyGI0qHB3Oe
UyBELUTTQwuDUNMK1ZuEPtiX8tpWUJwMWrqmkde18NAG7j5fbnSCphNx8m3Y
MKy61Lf+ix8G393SxHH2RChNO0JLmBgAvuPXnWsfE+GiEPZtDScBXskeZBjt
74PzqVKtc4bdkCd4yvenPwZPe8sKhp90gQS7w8CPTcOAi3ELNx7Dw5sC6Ydt
yyTYmiwffoSDDGw5lulRP3CwxTZhI6mHBFLsUXtijMhgMPFA1zUcB1VS4sU2
zSSQXj3VZuBEBnunt5fWheFg/9DGBGm0rnHaNjQXrT9ep3eiZhEHeevCHlB7
SRD3lItyz4AMD/YVJHQM4iF5eGLaeIkEEvhlD5HVZODYEejWGIIBsfAtP7O9
C3RVXQdfdAxB6dr+tmV+AhwTShrYdaYPZPRqhTVXdYPFY3lje3MiWHhzHEzH
D8B8yjE2DxoRfppox7s96wSljRFP9eOGIf2uVFz7RQysG8rLvOL7wNFX6ZUT
Os8t7qZlnRwehA8p6v9JGwbe/ZbhzTkUGOH5Ms2mjsG16rQp1/vIr/qGgIX3
VGBGLwuezMFgzOiPRdY9tK8lZCfeigYRJ2mrt3VgcMLV7b70Lwoc1VT2M4+j
wUzK04wkhBMdWz9TfoSrtblTCZ8QrpofHj57COHqS0705a+bqOCosvNU2D0a
lG8z62ebw4BrscFvXTEV+mgH3jYP0iD15YWx3RoEMG8+szV7gAbVFYtrjS7T
wYeqHBNWQQDPUwK065KjkH/HqPRkGgPGFNMsc/OJUBxxpv5WIBMIk6ePTZqO
wtGYHR/K69rhES5V+FXNOBz/2NJcmM6AdxZ3jl5+0gFyZDGXYSoTzO2Ka4ev
UGD1u7W3pzZ0wPUA1bbj+mMwWi4rsmptP1RJjyUxhIiQ/Z1v/mUsAzgun+QU
uIxBvc8N6wIl3D+tG39fV/k368xfXf97HWP+v+u7C2pycdtHQSDQ4PssswNK
W6xMpvdhIBvneEh7PRPEFTw4RGuHIVf20650/3ZYTNsoKp8+DgX1tLfO9TQY
k/osU5jcAeSmOkKJwjhYckkee8JgQGtqV98bvQ7Y+mIis6JoDIr3Ttx8dnwU
XC7M9PkZt0OAk3VQ2QodchcclXK4GeBVoP9BR4UIJgJzwWr7aeA4yjMeqEIH
O3fToh/eBOg6td34uS0Vvtx3LxF6RQPbm/JGk+sJEH7793tObiq41EX+eJFC
A/6gib33v2Eg3RUg9eEPBdjOP7fPRrhip1au1US4oqQmTF8dpoCtVtihsFAa
JEVvtC2loHXbmzexAxQoWnhUGSdLg1fb9gnHN2Jg39p+ZDc2AnoEx+7bR6mw
bkv2+HtfDHov91dxdg9C7inbMLU5MtjmEIQi+vDw9PHFuM0iPdCb00PceXAE
hKbHLa9V4OEaf6FE2K92KBe40wGnhuCH0wt1zY0EmJHYKj/wnABRV9ufmt/r
h4Ia3BaKLwmGkxa7dCsxOGi95lRtQA+U+e7Heezth2DKKgMRPQzSHit3fdvc
CUVwNmcbcQQ4yusk9c7hQSZgtgo/RgKbbWx8NxXIUOU4132/BAcErrmj8zgS
sBVJpu+2I0MUfyhT1gsH9Z8SXYQ/k0DSpoZm7UqGsf5Gh6elOLDY7RApjSfB
Spr4q2/HybA1VYqejOzbV7a87UP2HdZ1mgQj+wtmOxffIn+4r3QqpUp3wrcd
obu420bgFd4/SustBr5MzhqOvB5QG3+sGNTdBy9AzXgOPe8jXqX5UPS8Jrhr
lHD0vI+qcF7Pxtrh5ULmWJbNEBwiB/gGCxBgISbDIYK3By7R689qmoyA3JYE
G95XeBhp3uhEvDsIWm8ERLaRycDlosPN2YaH+YFo17PVI0BuvLe4x4gK76uc
Mng9MVDUudvIq4n6Ec+d702iNBjeuNK3vh6D6ZAA/w89FOB32SjxLIgGMUat
L/aQMdhp8X5jEsKPH9emHeEIP7oHD6soIPzItGs+tV1FhYSrra6OyTQQu5er
HTaBwSuL/l13DlHh4XnlsrsVNPguGPBLlgfV5Ybu4AhlGnB/FFY0kKLD3thw
22gXAmzQ9c/wHqCDNJWmWv6TDrzKwsq/NxOhR0zzp++9MZh52eorYzkKysla
Yt/12+FwE5enkMA4eFme1emdYYCAj3dDp3oHnK0PjKaUjcNu6cV6dwE6pGXc
/7w9vwNeRmjtc5Fnwkr/yfdLPCNwKNYqjy2mHVw2OV07fXIUbl+6bW/N1wm8
sVULovHY/1qd+Wf7mf+i7gWGGFnXfGSA/YjahxYxItx9bb/qKjsefjW+/Rqe
MgY5nwTZ07cNwgkTi+amAiLQ6wg0mb3jsFWipy/tBhXYzIfDmeYdQPq94pEd
OQ6+rdMVz18ygKeoBtOI6IC44GItnCoTLFxDXK54j8KR9tXyogntYKazRZg9
mQHlqlf0Zg4zIGzAQemyMxFeqrcqR+fSYMv4AlPoBB1u1F46op1BgKOz6174
hlHhUrWbdk0LDT5fYrt0RRLlnVvt4kM+KuwlewYH3KUBJ3b1VdY0BjZ4wi0G
whVp5vlEOcJVfJYDpw7ClRUfKcXhOwWwk2f8qJE08FzTHTZEx6A2U5rr0zUK
qOReufveiAbROoacGA6D4J/qxkvGZMhO7XIoSqUCN9Gx83siBkIPLq1cFB2G
bC5MXeU4BZZ6Xs69FED950fNkpVBL7zgLkwkFo3A1JLWjXeyeGi0/iJrY0oC
1b3r/bTQ37X+yjQueof42w6e/Q6riLC9Sp/obzQAy+LGmrLrOmCL6i5TPtTP
lz7xXG4+3wuHp+Zzbin1wo+zVh6Tdmjd4GdI5mAn6N80bDm2MAwhUbubhQrw
YLyQbms3SwLhvT+2HhAmg2qD6YpgKw5iV2VUUdpJ4DhufPrQETKsmqCv2eqH
gz0FObmlqC5VSOYnG7qgekUlvipPwcEHvOdzzq8kuFdT5HP+DBmWzmJK8dvw
8Kj43brxERL0iz/x7Nciw6Fz6yTKhTEwrHpLiebuhOUi4u6KqRHgTXPoWJOJ
Qcx0kcTrV93wonNrZ9PAADxUMNUKOEuAwK++9YcX+2BJsOLkZHUnBATeFa3P
JoLHvnWqKQGDEPU+u/jhDQLUhdqoylC7wETwxJ7g0WGoMr7UpC2DAa/U/PT8
lgFwbql36Awmw+cnfWvnr+Dh3fjFK0yNEeA5afzNZ44C9/nm3rodxeDwCSHf
1gky+JZXz96bokJYzcQ2qTIM2tcnLIfUUyDtIxciloj/sPv6H+vHINeQU+Ly
EuIfs91alok0cBXKCaocQ7zL62KCDxsVtjadlPZPQutEwfQBhCv15QrZj2pU
WD5IvNpTQIPA0oGbNcsYRKd46TuTqTBsd9RGYokGjUEFZuMHCfBcK8XM5xgd
iJufdodW0uGpxb3zpykEKEwZ5RlqH4WJ8STPpUkGpOMlrbd8I8LokDI3ZyMT
UiZkjc4innXuXt3DHz/aYVWDZS2b4ATMZ5r2Dx1jgJV0j0H6KOJR+K5R4Rgm
5I7uWjFEvDnx6I+pyZZ2OFMjzOfydRSGY59sG+HoAaVoPsO5Q4T/M770z+rV
P9pnxsQnv8sdhQP13F6KnV1Q8Ey9jIbiyadUrSrmz4S8pl3HUtaQYR4yGn/X
tsPn9HRc7cw4CKlNn7szQQffd/yTdoQOYGpqmMXjmLB/w/mpVNFRyAvQwrH/
aYfJgYUek+FRmIyYOCcxh+ofM77dZIYIdd+Ozwlfo4Oft+bbjc10sPHBHaj8
QYDkB0GnvRBuzgvYsa/npMOuWklm4xECOPP/ilPeTYU/yUcqVx7RYCE4cZ8O
O+qnxRdIL9ipkPVlwEXgJg1O6LTWOY1jUF0DHjuXEf8ZZWyvRriSOvO9pw/h
Ko2kQfD5QoGx5pFcdi8auF+yGR4bxAB+vBytXyEDe/tXT6tFKswFbty4C/GV
xOtvlNLMR4ArQa/6JycVLijIJUzbYjAZLjV/xmkAms3VphpukCH1yq0NCjfw
YH2477d0TxckV/DwcdGGYZgq1tshi0EgLdHjVBER2qhHU7CYQZhrv0297EqA
WNuOdXR7Avx2LjBVm+iDOmun+YLeTqQfiQIydzD4oyeuQL3RDTnDvWl1uoMg
uXp3Nc8mDJ7M8q/evaYT6uJbhH2+j6A+KC6uq4gHLXdrRzNUNxall+LZd5Ph
oJY3n/UtHISvWue8GdWZbz10vz2ozjiNrkvx98XB5SWFhVRUl8RuVK7zRXXp
rlW8fxMeB/fTw2a9OkgwHSo4fuQwGS5NiUYG5OChVT/H9MkMCYLsXz2/LkIG
4U9aa9afRLyu33Ng71wnmPxSatg/MgxjpQbHeXsx6ClnL1VP7oUpoUon2+Ye
mJ61vsC3TACfrS7i/VoDcKZq9Y63yh3w5tISJmlNAjeZaypp4sPweLaqQKQO
gzN8W146yveC2gPpDUI5IzCmdgFb0sBD5D2syfz7EKgEP+fVMKaA1EVbuf51
qM5n7zGr1ES6s4zw2SKOCrwXfl39E4uBOCNgbOUiBYqDbPnZ99KAR3LX9WNf
MGAv2PZacIICwQ80sLXXUd04fShbBfWpxclXUXTU18SEZBxZfU2zyLZUG9Wf
wRLbGW5eKtDCdqar3aZB4muks75j8LueVpzmj+qP+LXzDp9oEGx88ORXcQKc
2DyutD6cBofPl+68cZAOhl2xlocSCNAZ6zv7JRDpMcOsHYsGDIjY9HXnhZOI
L/m78swrMuHRAr/fFr9R+OLdwXMP8ZyAiIo33s7j8Dgy9GbiJwY86fO9KubR
ATf8a+TmzcfBuYHj7MYWKgQpHTwdZt8BF71WnR18OQaSHzuLNqoPwbkHiR+H
kF5WE958kInqXQT7p3narnY4Indneuku/l/ymf8Uj/p369tVDpf3PbcY8JEi
/O1ULar7FsV3RCxwwLX/gNXQ0TFII5Dqxa/1Q/6VsKfJO4mgz7e5qmHNOKwY
mE/NTVHAlDnS1qzUAa+kN33sqxiHnGOpQytZDDiYs6PfvqADnPdbtsvbMKHk
xPbWhw6jMCjbKIEvbIfc24aMw70MoJilyRb7M6CKtqlQJ4YIa7SjDpxppwFH
R4b9Tn86BHm/UdN+RgCmUdSFLXepUF8uedqThHj4zfjjx5QI4JpG2+gvSoVB
YWMlYgZajz4e4fsDg+feaRs4VygQ+7wksh7hKrqzLcAE4SppVkE18gcFuJO6
xfExNDDifs29xMDgbIeN5okMCjjI/ZzZZEUDF+3HqbR2DAwc1MJ2h5DhJ/Ox
v2YZFQIc5XCa6RjobUh6fdl1GPqzHgwHRlHAKv3p1DyqP0Hi408+jPeC98VN
m/h7RuBoafuOOQ6k7z5LKwiOk0DmbH2lj/kwEJ3ulfbdw+BoYx5fvToRhv+4
vrW+NwCboqc5959oB9wvgZanVAxCb4936ff1QkxH4CE/iR7QSfDag3fGIODN
ZJmeURd4xR8MbEgchvSj39iZH/FwOUZ9JHAe1Y2o6m1/1iFdtrlQ0HcIB7e+
yurVdpIgyXZ96lYzdG9XTRT2B+EgrdU78XQTCfquRP1ZuUCGO9e/hGDRiC+t
pIVdbCGBUs5t84PnyFDCeL2LJIAHN62hT2aDJHA5fVbJdx8ZCrwuNmlyYKBh
FmX3hb0TDjpFrAgujsCbz1UXTRIQr8yb5nc17ob0tm5Vo75ByFOvjtPQJsBd
wSed5U/7IMvGqLnSsQs4+/DE9/5EUG6dkInYOggWT6Y5C/YQYaqXvHzFHP1/
jUL7C2+GQUTYsyDXBIMp3FUO3eP9QAiy6swGVH8pPwslrPAQOy9y/hHqB1hU
1Mte1H/Gr95erQ4YrEs7zDD/RIaVJ1aJ+r1UOBhL9Lz/CAOT8ZmxuacU2LPi
EGBzmgZTA2qpyd0YrEkpVzq8QIGPW9S0RBJoMHlhoXUf6mu/dE7ujkG46msc
7/iDcGUdw19wBeFqdVJdl9FWKuTjBQJVcmjwc7RkZXoe1b1WCzuLD1TgclST
fTdBg11jTmm/9xFgsepWU4woHSSbL1eN3KUDn/mt4owWAlz5YNxkGDwKPh6R
AnvfM8DLZQMx5TMRDHuC+KyymJB8y/u3285RqGiVObnY3Q6yCtqSt8bH4TtJ
ezg/jAHaAbbb+Vo74EnlVA3bSyYIkz4JFg6RYYLjxmf/iXaQOXXpeNKqMeAz
cX7VEtUL4kU3RwbL/jpf+vv66H+ojv29HuoGb5bsdBkFE7nH+LunO4HxJ+C3
fDaKZxhWLrKfCYVHNhWLnB+BwlX2eTr32qH1Wpbdo4/jcEDDBqdynA4706uu
ypV3gMKro4abFphwYHGESVlhIPrxsf+aRAe8KwzwlzQYg8Unr+//lhuFi7uz
n6WJt8OWa9x3n9bRYfZlxfgynQ4vHBeLGjYgHuWcJhonQgPjAyYVw8J0sDhB
C8w9Q4D61R6bjhlToTQZ58L2nAbN7Aaa0twEkBSj+9MQjzE6vcVXCen9Nl3x
ycNI7+cqBxgeQP3u9PjxF8cQforHdkuIIvwkf7Z39++kAO+coWlbAA3EXjZ3
RoxgQDsoekhSngKCSaaEID4aXFexWmtcg4F22beJuJQRKPJ93/FbhQrhZjYR
eCcMJj5WizrJDMKwgvznyPdI5z3KXZGswkOK0YZb70O6gU8oQ+Og6AioU+R0
UhfxQC/zEm891A56WgZ1+KlB8ObrFRvYQ4C1s03ljCgCCKxXUz9o2A98tQNB
ygqdcKHhxgWhhxiI/Ey8n7LSDau+rqOA7gBoLW5byVRB+ojDI6NkfSds0pRW
SaKNwLkMFQcHIzwsy7qaedBIcDmwPC1KHfGiWR3jm9k4mIjjTGO0kmC8yEdh
zoEMJx6+EiR74SDsgeyJHYgvaR38rCPtSgbOl0e5qmtxEJ3QIlVAIEH0lOzV
89bo+Y4njH29iofjv9lbFCdJwHHIhvlUkgwcv/483mmBgZlK59rEhE4QE7d8
VmiPntuEfjW5BQOF8rhn6SK9ENpjlR5D6AXh69nhIp2IH575SifS+2F18m9u
s7YOOIQJW1160AE6GhGH7D4NwZKRVc5F1C/2xm2unrrfA8ryawo++I5An4V3
WaofHl58sSU2mgzBoxUxkrYQ0mt3vkuqzOJhU7Acf/H8CFRhb7IDXKjA9vuj
fmgoBt46KrbslhTQObRvulqJBhMXN7tGfUR8uKCY+Z1CgR6Vig9eYTRYLbHa
3B31A4dD3fldCD8+FT6zxaz5UgsxcDfCz46QhU153FQ4tnBpD9stGvyuc7Lo
+4bBAYs15tpnqGC2rnfhazXqqyuzygx+AmxgLrY/R31uf4hs8paddHgshK3o
BRNAO54t/5YiA/HtRHfrzQww38q06NAhwthdeq4JGxM80jLxPlGjMKovile4
2A6Sn3E3zuwbhyNHGOFu/QwYNpjbVm7RAa5xl0pzwschdcGyzB7x/8YdjvHz
YR0gee55nsnMGJyKadrhe34Y4t5dexxytB3ic7pjHqF72I971IpH8S7bwrve
Rwn7H79H+0+tT8yTLtu5UuHci/Lrh9/RoHCmq/GFMAFa7mwa3bWOChfdUlo+
pdLAQeTKsROIl87o9UrRUF7ONH5OK0N56Z27d4bFY3dcybldN4p09/pjsQrX
aFBncdbbj4bwd//18MIFCrw07ZbK1KIB4dqLPWsRLnnlEt+RIvBQ3XotNADh
mU+wakgG4fnscPyrgGocyAtnlFsg/Fd9zD23jPBviSqvtjcO/LdvUNdH9+WE
rOOvNei+9Jskfn2E7tdx7WvHxtH9am6UPjGJ7leK6MK7FhM8vIvmGf2M7iOR
EHFlQI0MWuc8D9q3UWD7HmOzR940EA/u2p44hEHDrRpeItJ3tzb7Tgui5+oU
cdnwB/VBxz6y6jLSg8n1nHJ7kB6UJNwvi0R6cJ98m2foPioES+Xq5T2hwdJo
X6UP57/uL//u+po5oxZuVO92hTsOs+XTEP+OD1FbQveC13eHERsVVht3vD6V
RIPAXeavvqD4n7niTTu6SIHbPuvvP0Z9fCvfiQx/5L9NSmPSZAwOXvu3xd1F
PGdbkAP/0lkyaC9cMOsKxIG3tqLMHsSLzONw+SbOZHj02cXyKxUHrRNNuTFd
JBB6+/jyS1MyFFqI27vMoLptoPokJxrlkcmTH4fqw2fhSAMmwsO+WC6DFyhu
g02rtu5D/lgzvXmr+Kkw5vFTc/EuDQYiVTTXz/zn56j/Ns5xBgKnghmQmyT0
6hkfBtvsyg7PzbRBIBbgbK4xBheHZqjOJX2wg6AiaL9EAHfJlbiVKSb4fLpJ
9n5IgfhLW1Y/Fe2ADJm17z+1jEN91yc+thQGVOrHZhVUdkDF6o649y5MyNXi
UF08OgrVR8P/LL5oh5/RFsQa9lHQ4TvvIxvHANzyD63CNCL0h2zD63+nweNJ
uuxCBB3qCj7Xtb8hQGhI09HpPCqYFzfVfOyjAXDsevZUjQBH7K3SPDZTwfbN
i8jmTMS73krlbfqJ+OHlolXbEE9T9gFDIop/kTKP6HEU/z8/pHnu/aRAShiP
2nIsDcyu2ch7jyK+h5MYWsqnwI33P3kl7Wgwfcl4QKMTA/lVey8RU9G9uXqA
T6qOCuxCvrrXsxCf7DmeLZQ8DG77dByOZFLgee5xFQtVDHRSJILLHPtAYYt7
fv/vEbC/bSLwYzMeLlkb44n7OsEtKzC7ymkYYq8wttXEYKD5dm8ewYgISfUT
F2MaB2DLZNunNrZ20N2/fZJnEoPUQ/HndEX6IEHx5831Wd1wscv/bO8lDFq5
cf1WQV3QcHrygaT1MNiHWD9jdOJhHYfNR/FFEtQFWLHv5CZDfdFRrY9jiJ+t
6anY302C8uv2lucPkCFR/Mam0RAcbJj23IQhnNukdBzVQPy/KJrbUCUCB++2
L6TUNJPgWPRHj5jzZNCd+BMlxI2HmBCZjJR+EuxcHY3d1idDcGPRc69pPFBN
jDvYVkjwtP/kLRk2MlDPCV+6ch2D4cC1bOPrusF89/WkKPsh2CS8XuGuPAHO
G/084hnTB/0JTZkrFV2wCcuvEnMkAq+2drLc7wEozGo6a5VMhNn2TpfTS53A
tHVaM/tgGObqZyul7DG4LqvqtmuqD5THsp6820oGPhj6IrEPD9YK4ryO9cPg
qvdYJ7+KAq3v9ne83I1BFPaYw7ScDMepZ6474Kggz697XqAAg7yL+RcUEI5X
aqoufEZ51+1JWOWL8h77a8em3nkK/OLCg3E8DUr9Jb+MI5xcidT/oY9wNXrM
aUs/wpX6grPTGYSrvJmL980kkF1Rsfqq+zRgq8nIHEI4tFufHEWsQv0+NKgx
g0aDLUU862Z3EUDf2bqAf4EGmtnW/jaxdFjjNilyrI4AuuoqO13MR2HNt42x
vKWoD6s6O1MqifAtSlLSOp4JT+QSnWr1RuHTaXR5v7YDvvNHbFL7OGxe6sws
S2BAzLaqb5XVHaDZLMU/28oEep9W6hc1Cnw+6v67chnxfyM+jzMyYyCk0TpG
M+mDktjpGgMyAbi3dp818mCAdRDO5CLiU3PK+Ownzf9z3v7vzkv/US/8Y39f
PHj4s9ahUcjY5b8+/CEJ6rktyV0eKO/+KYv5CkywUHu9h3PjCDjHvRGhxrTD
stsLYb9n4/BgOjvfh4cOEqZ62p6IR6zmGtlsyDcOt33fveyaRfx/T/zDGLUO
EFyQ6J72G4PtVr2qmSieVHlnQZvt7XDg7mfz/YN0iK4XtBT9RQfx/I1rLLcQ
Idu56gddhQZHZHZYzkjRIUi6IknMlQBbzz/4qm1BhVOduzkYFTRIflpwxJ2H
ALEHyLm2q6mwsPUMdQDx/2l5ww90xP8HPU413EF94ebEz8TrCD+jQ81ERYSf
jB68/8s+CmxIkKV+DqaB55dsoYdkDE5t4Wi7uJsCHTrtifvFafDVW3HqTz0G
C16rv7uUj8ByWML2O3pUMFwlvkK7iAEXlXtTfvggsC3Jnc3qQ7rYjuMrRzMe
zibFKIc2d0MBnVw+tn0EDn7fJXMA1QsHYbnJyfx24DUTznqlMARphnrjgbIE
kLv6ZZNzJgFcah9+OeLZD7cffVi3+JUEZkk7PbeWYkAKeSX0W7sHiGq73N9W
90NWye4twloYWD3bzxHA1wmd12I/XR0egUbJaH4hazwMfq6zTGOQQJr9p2KG
Chlanx+VcniIg5rR916MNqQLxrmOyJ9APEfkwI2DiP8Pahc0iyM+M5hsKWuG
+MytP61PZypxoDXcRLLDSCBaXGb+1pYMPM901Fa80R01Ffm5ME6CjzKO7rms
ehCz+hLTGIOAiISySttO2C3xJl/7zgjEe9bdPvUe6ZSnNtNKfT1wxih52+Fj
fdD4ZuZ7QiMBSofwG8ve9UPBHydPaykSsMsleDCNO8Dc57RcVdIQtCqND/Yi
vtHI7l6z27YHDs7ohxecHAFxRVNtwbsozql7SbsnB+HdJnvzwEUy2Pj/ijQb
xsM3S98NvL0j8LFA3Ev2GBVON67Ghv0xOHo+84WrAQUsMxKlL0vT4NSezsun
kX/KLzTUJYcoEF69/kVVCA2q2HyNHCkYJA1LJdUi/NzW0M67h/Bz5npNrgbC
j4mB3okehDfetSJhUimI/88Uc0gi/n9Cwm4x1ZYKK8/5y7le0UB5p0o4eT0B
bBdaWzX1aPBig8iqZSU6fNzcs/21FwEiqGHzS+wMOG7kF9awhgGWZb1yGtuI
4HdQuJzxdQx63+xoSHEfBb7W/XkOtkh3O/0ZeKAwDi+rt5uVMVD9MJuaKtdD
9UcmDWtLHwfTi+ynkxpQnTSveSaR0gGq5KNOKevR/Y06tLC9bhgO/WTf1+Hf
Dk9NRFhVFeQi1L4dsCPB3JFVNzba/2v+/4/fpfyneNEcqAbc9aXC5JTUx1Mf
aZBd2FE7J4Z47OWQ1sb1VChS9PVZc4cGfCtaYu5TSI9/kclkzbF3OIIHa47t
RJ0pY/H/iQzNOL0JCkz2v7wsc50GjAen8nbSMZib17jQ4keB45kynO66iG8/
JZ7gbEW60m440CAVD5oJ/uaDUySoXjuDey9GBqHzS1t5P+BgtYr39xQiCQ5t
lnaotCQD/ru4o78PDqT6LthcQvfFwMz2yEsXpIslfjuPpeFAbuDc+2/o3n5l
FxSsPkUG6+tBbcF78TB27n4DgUKC6xeN1l/cQYba2rhanc8UkKHhHjzwoEHo
5t/u7IOIP38qVtBF/F8or1b6XSINJDxmagYQf/7mTBSWRvy/95vzSAvi26tF
XB4rIP6/Hq/5+pgWFbivUiM3PaLBerLf9WC2/8r//9150T/mdx95/nXPdips
CFPcPvKQBmLBFcWZfzB4yaunRUP8/8FereanyB/LOxsVNiB/NIq1LjguofuV
R99jiPz3UZ+TeY78X41LWUdLxMFjvg/7j34hQWOKS9ITR8SLlJX1PPxx8Gn3
TbZ+FE/z+KtdTMT/c2hFmut6cdDdeE1+mkSCjhfRH26bk6Eq60Gx/3cKOK7f
WDQTSYNuoUUaFeXXqm+lhYWHmiZaLAsPcU5h1Sw8vPM7zV65gQqHt8fLX0P4
MfMKEG6b+s/x/+LHK22T6Nyt9IiIKnTuc8FaLj10bslyqa440il5PRKZfkin
iCqM7glGOmXzBOw0CcBB/kOxtUvoed+fPfCxHD3vT8un15cTcGB695y2GooP
3bxWj4Hi44BTw64hPeXS1vzqA9JTw+VnJ8JRPAc086zH0A3eLyh1RAPFf+bP
h8NFzP/6XP8q7yX1bHsqOKiA99KRuIV05Rnf8Lw2lEdhIQfjdoTDXyON+ULo
uVZuZlixdKjd85hVu9KRLosLGZxHOJcwXP+tCOE8KKvGfwrp4qnsF8In0HMN
KV7Q6Eb3IiH0fhAgPf7oQvi2oas0KJ8U07dDepzBO55IQXFTP/24/DmyzxNy
kJuVLymt+J/P1lLhh9OQ6Cqk97e76mu8mvyf5yvkquvnPlZeCDGHSpD94R/X
Hfaw8JCnuCsA9TuKr+dOGeTnhe3s1/VQv1uzTfAnsOaEu7i3WqP9mxVvvBdG
+0tvYku8nFQ4m3k/uA7FZ+v9t+2z4/+fP/84p/X+6lrYhPIyJy/5RArlxU37
y8EMZOfls7Sy5d8U0J1J1R1D/FZsgadEBcVTlcEn6X0dB4zH/kfGEf8nsi/2
qyP+r4Rj+L2+jANJd0/rh0gvnPFkXrmO9IIhd2TCT+SnyLb31m9Yfu6s1N//
/5P3/7RufdH9XLLmIgMSHYy79IPxIIBXVm/73Ab353T4bkmPAY+Kgujl/X2g
tiFpvnuYACK0czWbaUwQF9R3LAijgH6QiuXmjR1gP1rm2EoaB4nM/LtB8Qxw
26aibVvbAZvuPMGX+DDB9/aW2QzEx2WcpgwVqtvhUmLdyY/CqP9dPsdYm8oA
LTWjmYUcIjySPPY5aRnlY+3drnXxdKhkN+RqrifAjZIm/ZxiKmCHnD7zDaH+
230x01+DAPe8+PiTkV6g+6be6UR64eAEh9gS0gshZ4NDD6J8aXvaEoZRPE9o
H3Y4j+KZnflqMeYXBfy9FnFRcTR4uYPsX4D0iNU3i2zuYgq80HJ3nD9Bg/rn
F9VNuzAQGAtyfJ9DhqOmu7OGPlBhh1TCT8FcDG6vGDRz5w/Dx/bDOtyFFLhv
cELrvAYGF27Y+A/f64OZm4nlPDwIf5qVvGZKeNjdfmmJ4dQJv46J7gKfYXgk
u3hfNwwD51b6iPURIqw1+PTiZtcAxFnQPN50EIF+zD8gfh6DQpMIDb1tfRBk
7DbA7d0Nkcq77Vx8MHgTFqHPc6sLhjMjz93fNQyFh8VseRA/+nIzMMRviQRr
nvKMfFhFBmWvi94i33FAUjGgr+khQdVTQYdfxmT4c0VUJ/MKDs4/udawEeEz
0KmNUetEhkyD2+S1V3HgK5aS7IHWrc4WBoug9efu+kwHdjz0/ri5400fCcre
l1qJ7SdDyR2NYeFRPJhZZCvnL5MgzDNV8gEHGa5oU2qzwzGg2HXX937vgjdP
vffWpw/BcOng5ubNBDgYlNWD9+2DZmL1lS19XWD2yYir1pYI+gvxEU7UAcST
dX0Ib4mgzfvYfbmjE6oqaqTz7wzDVC3thP85DKLb17Um1PYBB1d6oIwQGRb4
FO/83o4HskBht1XJMOANej8ffEKBdDfZhfOaGAwdSefxLyKDjyankE4zFdp2
NT2tfYCBY5Tp4/kcCmy+wWHSbUsDD9EURRsS4oGT+FgupFuN688mtsaxdEfU
tnqEE6boQ0d5hCuhZdnLeISrq4vJdTYIV5YlBs6L4lSwfZnKn5pJgxGB0G9j
cxhMXlbv7n5GBYdxy8PyZBoEcp78sG4nAelSN+XX42gf6Wzqvmt0eDhQnXny
NQEMb6z9bqs1Cj5r3d/I5TEANR9GZQkRcJJjT8auMkHvz4G0HsNRMHs2V+L3
sR3+mETFZjWNA9Ps+TG1WwwQuUOZ4n/RAd/x+KvMbiZYZf2S7balgPmAHdGa
qwPmAy79IW0fg9+DkmPHivtgn23k7aRFAjz7cXVu6jIDRG+1PbXdjIGPxGv2
8Pn/ve+f/9V6wQ8fmVCkJz09vsWtNiWBuqn5iS4bDFzqan6OizFh5j65KI42
DFyBF6Zrwtohss0oGZc/Dj8cngwEUGnQU8fEeDI6IKQm643X5nFouDhR/fEb
AzQ9Kh9l7uoAX7+9tlpJY9Af/LpTCNWlycNXazq12+HilUzP/kk6zJ5IL7VY
oUPYsap5bVkieGqu1/DcRYOgA48/ycvTIZessOqKBwGAHP/lnCUVwu99IP6o
pAHJ1XSHHC8BGtwUR2S5qJD2TdnKGOmIYavcNXpIR7xt8q97juo8/7g+dgvh
B5d7q1AN4Ud8VfN3pUEKfFCunFRGOsWojHlOBemU6CNvdKr1Ed/QX2f6QxLV
N5fWkpYGDNoFFUN8GkZAIjhg26MDVHAzWm140gvVhd3kn+tLB6HATOFg4CgZ
CmeGTHEEPNjHiIh4fe+GJf0HzWK66O8SlbmJH/BQKGpT3NzaDgGtMRpxBkNw
6tZY9FHEz3nUlb/LFBJA8+mdU7jIfnjxJr1kPJcEfe8b5NTLMHiue4Jx1K4H
sgtGMkpC+iHZ+ZvE0F4MbHMjzvbzd4Kq/xef6YEReHuT8OX+CaRbv6ZcKR8l
gXGgR0uaEhkO7b3PO/EIB7W79jV44kjQ7Fb7ZYc9GSxaL+Qooj6uHvhymvVd
tPxnzzEr1McvPjewfleGA3l73Je3eBL09v/Auo6Rwc017nyNGx7GPSLzx5gk
4FMJmLkpR4YXX/fxHjVAeAnXu3lDpxNqDok3aSOdf++1lIFpHeLXpw+EJ9X1
wKaK104/0/ugJHdPZMMbAvSVf+kQedoPobf2OFw4SILS3ylt50U7oLv7o91u
nyGI/rpY+5Ab9aNoF1KoRg9cWDqhHWA5AvK05Fm2Ijwk2okmvXs/CF8+vO4f
niTDqm/+Cy868bDjgZWn/ZcR2CmptcHAggo82WcEr6I6HjVZ94CoTYHttFKS
2hbU99vWfKt+h8GHoehTkf0UiPi9hqRzmQZR0UVGeDLi4fQDZ4oRfiLU/AuT
EH7CVxeuV0X46RQN4d+IdGvuo60xNck0GODA4VsmMKCnlPcsH6VCIRuX9weE
zyNajzMW1hGgKyTh9v6dNDBZ/P1CQI4O2bdzbO5cJMCC8aXItO900D9SvPUx
wn/n+y6OOIT/VA+f/I0vxmBg591tX06NAtOZ+PKeWTs0BJMe2WwZhyfuaWYH
0f2Kqa5QgN0dcPJojvSph+Ng/6rpROwY0sfTV/cq3+uAzYeDbUPQ/RVvz0vg
pw4j3d5yyh3d36jVgu6Zh0fh9rSudlYlCbgHbb9z+fzfz/P/ro/kDmxsnQyi
glGR22/2JhpwDRTLamwhwPXAZ8eVNlJhTXm+zFukO5iBrhPLSHeIZZtVsXTK
+Y7sUJZO+UBue8nivWXLdnzd3yigKhfUuBbpGgdpXoUkpGtKknN0z4VQoPuW
OJfcfhos8J885N2GAf6PgEVuJh681Lm/bZpBffZdmVOcKBl2iVwTiGzCwX73
0A972knwOMRUJOooGWKcSNK6vjgwUS7sSED3JXH7Q+wa4udshOWLtbdxIOI9
ahKE+PyS8Mfy26cRnze0zJrdgYcR5ay7/WQS+H2ITlDYiXhCTKKSdyMF8FeS
KCHuNMjcfo+5fQCDmTfeB4eR7lO7Xy1/A+k+BV3cRAvit6kO/tONSCeKPm3q
yUJ8+HOSPmUFPS9xozl5QYMKn2WlRHwKabBFcGaVwMp/Lo+uKu2Z05pIRziu
xLgV0cD2wpYDFGQ/+Ua1/gGkoy+0CdX1I38k5p8l7kZ8/lLB0fMY8p/i2qwQ
ifzn2KF+7TPy/63+mc9JN3EgvKdDoRLpsstXW7x/nCGD7ofGzrN+OKBz3Oyp
QvEcC6ol7kDxdPna9aKnAwf1p9Ia1JBuHfVUYJ87RAabgOFmAsovefybFhfK
b9d176+JKL/HnQ7+bY4huvvY3+YYHHsW/zbHuGeVucZmParXc5+1CLdpMBGX
cUfnP6hbnTVLySwdUbyZcPVvOkICc2LpiIgdRQT7WQrEy/j0KcTQYCrn9VgN
0q2cX/e6RgbiYBXlerEK0iOv0+vgFNKtAY6RasfjcJCg53K+pYUEzwXYIPss
GYzNKUqTC4hXn2c77It0a+u4UfQZFE+pPOFdlYgXdb/oSxFG8T9hZdyU/Bf0
S9qvkoPGSJclyRt/7Ua6TPnSxm4eVMd2pZuM8aPnOr75reBe9Fx3fqW2r2O9
h2oqjLHOxAHHpeeCXq0kGJBY8iKcJENep0GJA9KtH5VkBIxQHnXlPcTYUB+p
+s2IV6RTwCSlcrIsnAalWyufU6gYwLt9m4aQ/eCuM6pPkX2Fxgb+vci+B1t9
e84aKpgkH8sKv0UD9/n8MeO/oFsPvOemjyD7qyWiGp8h+yn2cU9Z9neYPNJo
Rv1uc8u2G2rIz8/v4qUVkZ8NZpa569F+xZmxol1of+O2LDoP2v/8tpzHVaTr
q7YPcgSj+KRplV55M/7P/fkBvyfZ0D3l8dz2ex/Ky43QlzJlrHlaytjdMpTH
x0l51MMoj7TuqdVWKI801wPjD6JwwO66+FYP5T3G9ppP5jnkj+Oqob3BOPDc
4rjJA+FEZ89zDwbSrYm+H6ZYcxJHgbJU1pwkJl1LWO8v5N2db0JRCOEnvYM2
9xnZ2TjXd9sC2Zn3s6DYIL2s05Fcfhed+yqQnTMbnfsG031+Bu3Pctn+ZRzt
N2Qq3vNA+6/8vrLPF/nzpnOUwwut7+i0PieN1hO9DSpjUZzflmqMy6I4V3vm
3tmL4tw5a3C2Fe3v1l6+m4/22zuGrtH6C/5/dc0+x7rvcZqkQ6z7XiCx8JB1
33tyfjU3IRyq7i/abIPOfXT4CBcF1RMj4uCVpGUKqNwg351AdSlq3m7DdxT/
mQAf/hSUr0rqzO5IlK9r7SGHmMiObI9pze0AHCxHynhxozjMUjo2Z6N7qvv7
XhPr9ywJa99zV6BzN7xSFNf5C/736+xZGEN2UpW+SrDes0eM2a1ivWcnXbLg
l/fHwUMB73IC8p9XfTRhmVUf1mlfeuiDA64MYyd/tH4ovjbiMXquTRui3rO+
3zi9rD/N+n5j/n7Ade3/xh+x2FPtBNY8p/1USSGrb4ZZ7NqF9uNLcv30UL4C
8PKKYsj+4WzNTRYoXz23Onvc0X5erdckd7RftWegRRLtZ6d/Kk1HePgxXRzI
jeK27O1Pj0TrEjWf3rGj9bhvWgN1rHp4x2fM+P9grjLbccDA7wIDeLfO8Gds
xYO13GJ1e3kbdA6ZSL3eNAbeBtZFOev64E+AIU66nQBZq3zklYeY8DDa6ay2
OwWi81SCiTwdcHfu56/2vnHY9OZA5PYYBmRvZpMpb+iAsj0fdR8FMmHb45OP
yKajEFq5+nBDXTuUnBNc6JcahftX3XdwpzNAUMm1Rb2ACMRt2IGvq+jg4j5s
mXeDDlbRz398fU+AsPWdnzhLqfBAkLRQP4zwM6j9Y2AHAToiFySeSCLd6jIZ
cD4L1Z+jpUzfXxgcO3p1+gSKJ8O+32+MNRetd3jgjuIZ+CRr9c9fFIiNLNv5
Aenl7pd+2dVIL4euj4y9gnS4W43945Mn0f1qCL+D68JA88KCYf5DMgyq7YnX
bKLCme4sPXukxwOzQ55dRPqdz/Rx+3H0d8/dOm3dkH6XmyE6mb7sA7tYvUpB
ATL8mr3V66aOB0ND8r2h4E7AHE6lXg0aBjVrI8L1YAym8beNUm2IoPxMym49
eQCqRLNVX9cTYX6TkV3zMgZzhXNd73b1QZY6/TDbiW7Q4zIdUfPDoNc0qXo6
uwtsrn6sPaSI9OV+SlghFQ97r5zLk1omQZvVqZ8JnGS4V/aquGUaBxb5eWFe
PSS4d+GVGhiTYWvn/IOwMBxsixVV3dFMAqc9DMsIJzIsDfq4c4Xj4Kyq6iUT
tC455XL/JGuuIg2DcX8QTwus/na4jwTY/Z/zPfvJsIfoZOBHwUPqt+rcmSUS
TK1NT+5D5yrG3F1ddgUDEfJm98GRLphfY+D2/uUQjDx6+5YsQgAH2jZnDrc+
oD4a3f/4exekGmVSEo8Swe148Lk/PQNwIOCoWBaeCObjVxK133cC/XDDD9+b
w1AwuZMs44LBbpkd8okFfeBcQ4r+zEtGfPyY7xkVPPD/fNKtkTcMvqtX59x8
SIGHpe19OzWQTuGQcv3xgAzf83LUJD9R4ciO6dM3czHwKlqzcDSLAtTtK9J2
NjTgzWg919CBQZPGJCMN4eTk6rOEJIQT4nUiuQjhBONKeS6OcDXDuL79C8JV
NtHA/CjClWkSvmJIjArFV0YHVmXSYOeeiE7/OQy2nrv68FIJFZx6I8wDEG7l
VoWue4BwG5txsCYf6f+8HMULNVfokJw1/MGtigCWT13ynJRHYfbBPfva+wxQ
ltg9KP+ICAeTu/bvC2XCxtM1q5xNRmF6RvII3/t2qMj7YFf8fhxsHMt63e8w
wNjiMf/HZx0g9O5hMW2QCR+5hiVOu1Hg5qeI7nx0T03uDhsJ7xkDF+GFM/Ld
ffAprUdo7xoitBkGp2DXGFA89LHlgRkG4VHiUTF8//e/Q/+7rmGc8w8q2D0K
8+Oknu+bSBC6w/zXsCkG/jknNG4LMuFVth21DRsGot6FRqXL7RDp8ihpIWsc
ZD43lHgTaBDGsFnput0BGsHHe3hkxqGK5ij4hsmA+qyXA8XaHTAWO1Iwfm8M
jOOl75y2HIXjZY31MtAObs6tQvCLDtGx2TG+nAzwiUiJfK1AhKVMJ97POjQw
tnGEL4p0EMpcbq3yJMCDseveUdZUcMFfDeF4SYOAyx8tudcT4OVifWUqFxXK
CgUzQlNosO6+3ruL3zAYYqypfIv6wkXlCs4MhJ/FpBh21vtcHhHLNLshCrx+
16ZKCqFBX4dooQcF9WVOzquthqiPDE2yG8rQ4B73imvJewyyCFJdJ5tH4NSR
XjOZQ1RQstB350M61DN1b30G0vXd9cxMEtL1Dgf2O5cgXX9DsvZxG0cPuPyo
ua1sOAJla5NDC6vx8Kndfq8iuR18AlQT6EeGwMk7owqECHBT4XPjtScEiHgm
+DPpZj8ofOILcoknwYsbr6R3VWDApxMbyunSA7ZSQsL8J/oht5hN3XQfBk4c
3YGpAp1wRmu9/JP+EWC+Vo1xO42HN5cX02EM6bsVQbvbimQIaw/pfvcYBwTf
GxEvWHMVQ1WFl3ZkMAxN3LIV9dO52UdbWXMVHznsrA3qpx6xm5srnuFgKuPX
zUt4EjgH7ep2Yv3eXD9yz1ZnPKg/ugfnmSQQ213iFCVPhrPCCm+iAINrIm3p
8WqdEF3HRXlUPwKnhdmS9WowcKMz9n563gPb0wVTa173QWjXJ7G+SgKIKNTb
mBX0A78xSXvqFNKvOsRPN9k6QOb+3ZKJc0Pw8IrVfl6UX/ETu8/HSPZA3DPO
OpL5COT542Yin+Ehe0tImV3pILxIPi2bOEqG62IWaoMEPNwvTFm40DgCGx33
n35vSgVeTj71Ji9UZyo+EOZ2UUDcQ8XhjxgNvh5+94pWj8GNIkt7xT4KnDvG
FhYUTAMsUt8nmox0a01s3H2En3HZhrMxCD+moZMHlRF+PEsqJspWUWE00jwi
KZkGk09O7SpAeqSH7Hn+w2EqpOsKRj95QQOnst2y69cRwE9e5YCDOg1UjPCd
j2To4G8TpJPgRgCZXLlToXQ6qHvd2qy0SAeBbLVntVJE2FitFKpdNAbh+e80
/I6Pwob3WX37jdtBnOHmqik6DiV/QuUFphiw5ST7pwTNDqQDuF7mPRkHxSex
3xeWabAg93Lrs+wOaFuq8PSWYsKeBKuVmF/D4MzMqauKaIdtAusKQ2xHIZmZ
dJs5QoKC51fNeMP+Nf/53/p3MHavTZAvDaHC+lxdoVPNNDgr4P7YRoIAOYEP
5CkbqfArQsNf+C4NjovceX5oGvX9uB9sLH775Fh6EYtXL0dfbmLxSX9d5QPZ
kxTAhds3XUa6+/gEI+AV0t2/Q6PuZYZRQGxNW+BPA8RPfmjyyuAw0KJeP9GZ
gwevjV8ev54hQdPasWxXETLoyGncaGrBQZJ++d6b7ST4QqQpjh4hgzzNy6fU
FwfPRDM07qP7otcvqHQe8dtvCgkumqk4WCfkd1r3Kwk2xHU+XTxNho6T55qq
ER85c/w8ausk8EqzPcqhRYZQ3QBiSAMFOowuap9xQzolpgL70I/4z43c5mdL
iOcdnL3thfj/M6V9a98h/u+icdTnHkuvBfl2xyIeS61b2THJ0kGTvutObqfC
yLhdWsFDGuiYun278Oe/ftfxV7/fiG1Si03QosKWoiMSmo9o8KBVWuAmGwEq
Yw5suMJOhYoPZp0/kT+kS4qxFkhvXv3Vlc6J9AuXFib1APlvh3+TQED+R9U+
qx5PxoFeuGgN/QsJ0nj5vqWfQXrtxpNkOoonI6hruADFsyou29UaxXNl7sFj
CyIOjj8t/9zWQYL1svrsDy3IsKo50vbnBAU2P5Vam3gd8caWKyEnUX7rIjIy
WDqL1/Tsxb/prKGcv81VVJ0XmCW8VFibLCB99TYNYussMn98/8/x/CVvW7cl
dC5nnpd2DTpXole/3BCdeyG0T3xqFunoO8KBYTE0KCLWx/czMJg870rbFoQD
7YawW0ZIr6nYpIpsR7opJspWcmMsDmaVla0ykb7+XUtymj1Lht7HHHkPkB4f
mbcaMEZ63E5GJu0w6/sKpqNuFuJFVZdUXq9F8T+IH26N/gv65fOLab47nFRQ
Vd1ZvXKTBhw9vA+3oToWXJFjqYaei+udVJopS0czDGv5kX2cwEP9ifs4OLi8
5lBJKwlKbYqNLpwkQ+MZ1zfiSM8+x5s+1UZ5/Nq/RZYf9ZGd+/LrNtIo8Cno
Uy5/OA0Gy5dPFFMxmDL43cJ6X8/RlXiY9b5+aOnASdb7ejbsdOWWNVQ4fQm+
6t2iwfZn7Cob/425yj++J+KMwWOs7w2kdbS6Wd8bmCY7iLDwcCRfTHYZ9Tv4
qG+zC/l5u/zPKjHkp/VXsbXTCLc1Iy9D5NH+2hVi7SrW9wPN1G26HFQQvtVq
chzFJzXYczT7v5mr7N/ZT5dG93RH7c1Ph1Be6FU6PrXIzn7F0yPsixSkZ6IC
w1Aej+3o+Xge5dHqdnDkh2gcvFNuuOuG8s4c/1N/6BwZymrb/aMRTpJ+Wt21
RDgRubT5qijCSSFRy3SCNcd4NbC/Evn56Hjk731/Ie/8PtcwSYQfoz22Oq2s
7zEEH3BYITsh16ocxUNwIH7zTH8FOncxQUva9QLqq6tWcRxB+4tJw0kUtF9O
Lab4AktH2z4Lj0L+zJYX2V1G67OpO63k0LrBpPC8E4qzhdNlTBLFebVLYYcB
ivM7vZ9Cn9B+DS7fgBy0P0umK1DzL/gPtOYU1n0P8ppzZt332fHJZ6z8PmI3
nxTzwUHagJm6Izp3Km6LbBuqJ5Y5m185o/yamb4p7ER1iVtW9AUdxZ90XRV7
g/IlZby7O52Vry+tpYvIzkjsmxOL/jjQPZGuPo3skP0zfD+i+HPU2Ciw+s7l
4xvesM517+Lq+u/mGP9sndvKZS0rjxvcrbey8uhj1DzEyqOna/y1CnTuE8MF
Gzo69/cVYaludK61+lnzA+i5Xg2aVDqzvkMrt7J6j56rVxNGqMjOh/MOfqy5
SsEWMav/zp+BTMXjrN83jXDnNLN+3+ReEuHM+n3T6ORj1WMoX4bvOh9uQfb3
i3/5ZILy1WskxDyG9p9cP3HzDGuuMn0qXBztP3Btn9JzhIdMjhk+QRQ3PEPy
WRJa3ydYVbSI9tssQ0812k+5t8/R8C/Ep6FFYGgvso8T7BXvQXYsZ3T6TiI7
38dFZQqQfR5K2rMEtG5k7TehgtY3EVYuaSH/Wyar2kWR/6VP068dQf43zfY+
fYH2xzvt57nDmq/eaAlXZ+0/4JTFwo+uVOwlVh6L3b3LWXE7Udkh3oHirLt3
ODEU2VEOlIjPQnEW+NqYz9rvZyTjw9q/sAtf8VfyfuQE8fwMay5qlm7yCtmJ
3XQqWh/ZaWLrG81H9TPs+4PEw+jc+kdtEt/QuYnVt4pY8+Fyj7W5rPnwTH9e
Lms+PLu21YA1ly63oBix5tI7hV+Ls9YprfQb91Ec6ozJJAVkx7KSZrYTxcG8
vcKWdW4pT5Y+69yj1aFX9f+C/1uCkmvLkf2HcY2bVJB9nOyRs2rI/oFVzFgi
sl818mNjEbJf0s15ijWva0sYnmLN/Q5/XcfLituKaukNVty8jJ99D0PPq773
xuaDyI7/r4+/fqLnnWmQbxlF+3ebrIljzS1Xrz8V89/NLcus8mNY+/OvlTiz
9jf4G7iz9ssUPzNm5eulbdA+1rndXHU5rHOPep+Q/orWh5oXhvLQ+rT9tQ87
0Xpdkga3Gus7sctn60RYvE5a47Ileq5/du7/AwHNBE8=
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2.9999989482166787`, 3.}, {-1.999999155687347, 
   1.9999992696470201`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8869628457888517`*^9, 3.88696285709862*^9}, 
   3.886962942830781*^9, 3.886963087652239*^9},
 CellLabel->"Out[686]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Z58ffO3K/W0Tl/ujpixdPmH6YoEPOfKTWwuFAv7i//EbmYo5q266afnG667z
t40a+fy+QU1/dbB2QObzkv39A/V1Uf3PouxTNjtvtHX+7u8j3R9SiQRE98IJ
hN0vLO7/p2ROIVmiCHyxvAgkEqbXCJx/EnH34Ey6D70DmZT3lCn/YDFFzvev
lN/a/X6iT24wAv2izHy6IGu+EhmTyeqzmz4rOHw6cBENPhnU8IkgYWRlfA6Q
/UVa+b8tRspZ5NliIz8Xd/8K3f31+3zacxBd7mZf7WlzYnM315KbNpt5AaLk
GZ2/o6IzelXyjO7yF1UWp3SfRIfybyxG6hnL6gtXG/nZnheGEDbN3ELD2CxP
qEsHbVXie8tm1fdVEqlrCW1UICPX43u3yrymwHdvoK4lOEv/ymLbf5bHzABm
PhNfSejARVcS5q5F6stXrx2im0xsvmj7nlL7JFYrl8P1vvq+yWR7u0DK8gUp
X0+4vvoUt/OXFqv+ImkVd7Ki66OEVT03y6zUV3qwLlArpOCY7fqoX5x7bmzN
KLamhyF95fWevtLjyPy5xYY/tdhwRc+UA79n4NuuqGttDqdLGcLKXMo49HOd
EoZ+jkBUwixTUzOTWD83sWpkwlxux2pIwRrIJf9QzStvIF/ZQfK3EbBWhPSr
zs+NXk51lvIvuo8sWB+oqB30PO9IPX1xyDsC+lfcJckrfE04KIWwOSb0VE8C
YUVM2Kf4tyd+SuPmj58bs9Tzxi5+3wIrf1bzz8/CkYH9guPGj/+in6Dq56cb
GmeYTGsKdmsy3omfn67+yZy8zWHeBcCtkDH34ofpmMVkxmLcCVBz+5J2yJse
l8pbAfJ2mb7TlHY7gDh62tWeYpecQNFH2bWM7SJr7LdsSt2dItPG3Y17wrif
qmfCJUyTd6qulPdu2si81hrjblQN340q4/4N7t3Ia96rU2y7Oo4ZEh0Jr+Ky
lG+3LaGf+kXG2G4m4ia3nxt/FxnWdc5il7yxyHfbCkG7F/CNQ/PmYXl33IKj
tf1wL4IvlK9JMW10ZJq+27tUm6Lu+l7c867vuMRd3zA3vovM6uK7va9Y7JJ3
gPnmaOHk1bng1Ah1l7fHDVLjLm/SxpDSFt0R549xKSapCYgwiXoH9xKVWn16
uXkd3ZqXD1LcMJef7+fyd7BFL1osOmtaNDoXnjGeIlhvxbfxrXjzHnZImYp7
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
zjjSbu8QYQQRw8Al5wtRCddDdSQP7qwLSGw5oZ9jbyd9O6QQN2mnnECZaP+7
5UDoh/9KMYRafPCxYk84vdMEOxI0KC3JcR40cEk9GCJ56LE6f8NjdbacUGDe
VjqFbE9C9HRJWXGRYyQqA6VYS0gCMFtOOOojO/Y1MIQWwohy4gfl62bXa71k
DcoKOCBjvBjAVQ7bupus3wdpkNLd4AMA7/6wHMVymEpFsEEZjH83PF4Xkigl
FQmL6eVv6wbctn2Yr6mUAyRzvlrd/Abqg6QJQi2izOKYaSpDZKW2AGWiobKc
q3d4QIdT2lg2kp0PP14ng5g1zcxv2ZtTOvFnis74Mk7Z5W/Yxa1DyC6UrrdR
9ipWo5I33LavTmwlD5JIj8atpF2jqWFObFRSVaX/8K66SBW9OEu27q13WY/L
8Uu0VVbM5NiuvsFGbRv9S4rCImX+tr0URagjOL/bu2BNlB27ctAAIdNQZuFF
rSncsrfOEVugCOpYcdTGj89DEfswqcgNHt5dB0Uc/qzU0jMVflSOFjmWsAot
ai1iEzmOBBr8Leww0sC1/7j8Jjmn0BSEwFG6y5ffPyncvLeOkZV7WEWigbLc
o7RU++SeIi1/tenxgWIzIW9mLZvt7ilLi9rLLXiE3LPJEPo/uWWzPY/Oo2U3
v4ny6BHVoqPafXQPsUvxt+yp4/p/ch6NslOKG/Xp/6rRvE9Ky25UDZANVINx
ow5ApTbLJ8pstrDp8ZylWa7y74x2+NZLVW87sJgtehvpjAJrfW4RpYsm/Uf3
GH3QNF39lNe7xvFBeYrj/ZciLbZpHqZm9rtFc8HfXW/XbOx4FF6vdjzKyn2P
ytPMPTKrVPl76hDakqr0Xn9SVXysTFXERVqEEhhJpSUFzDPFZRbNF5+3Fn7X
3Kjn8mSzvK/SRSnNFjbtzqU0e4Wl2XhCQ+LUrKzmc37c/9QshCvjdoQKb6bX
1LXNL+hBpm6k6+HlvW5uWH6LapxRIv700ltV8UynX06DsbNfqFvQI3HVEPRf
nRbdIsfMSXqLs+5X4a1KtKh3hNIdF5p/ueAaaRdVso12L7/FXs+8n3z6/+un
bcfGlnlszK+4Xtrj6E9Y/2VYbT35in/Fxy7/NWL5xAf2Y/aR67ZvsV8n6n9r
UfrEB+oZSIl7Tp+cXX+9+D7xgeXs+knO/tqwfOKDMnNW4G8u5qD4lKr3qf8H
PR4cTQ==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"c4d0733d-42cf-4c85-a3ae-8abdb1cfc79b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"points", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}], ",", 
       FractionBox["\[Pi]", "8"]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npoints", "=", 
   RowBox[{"N", "[", "points", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"npoints", "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.886963013833933*^9, 3.886963077515991*^9}},
 CellLabel->
  "In[687]:=",ExpressionUUID->"1b81519f-371a-468b-857b-0ae09527e1be"],

Cell[BoxData[
 TagBox[GridBox[{
    {"3.`", "0.`"},
    {"2.3657415224242127`", "0.11208538229199129`"},
    {"1.0606601717798212`", "0.7071067811865475`"},
    {"0.16812807343798694`", "1.577161014949475`"},
    {"0.`", "2.`"},
    {
     RowBox[{"-", "0.16812807343798694`"}], "1.577161014949475`"},
    {
     RowBox[{"-", "1.0606601717798212`"}], "0.7071067811865475`"},
    {
     RowBox[{"-", "2.3657415224242127`"}], "0.11208538229199129`"},
    {
     RowBox[{"-", "3.`"}], "0.`"},
    {
     RowBox[{"-", "2.3657415224242127`"}], 
     RowBox[{"-", "0.11208538229199129`"}]},
    {
     RowBox[{"-", "1.0606601717798212`"}], 
     RowBox[{"-", "0.7071067811865475`"}]},
    {
     RowBox[{"-", "0.16812807343798694`"}], 
     RowBox[{"-", "1.577161014949475`"}]},
    {"0.`", 
     RowBox[{"-", "2.`"}]},
    {"0.16812807343798694`", 
     RowBox[{"-", "1.577161014949475`"}]},
    {"1.0606601717798212`", 
     RowBox[{"-", "0.7071067811865475`"}]},
    {"2.3657415224242127`", 
     RowBox[{"-", "0.11208538229199129`"}]},
    {"3.`", "0.`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.88696307798419*^9, 3.886963089966919*^9}},
 CellLabel->
  "Out[689]//TableForm=",ExpressionUUID->"230c5213-cac1-4f9e-b592-\
6716429d86ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"npoints", ",", 
    RowBox[{"Joined", "->", "True"}], ",", 
    RowBox[{"Mesh", "->", "Full"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Red", ",", "Dashed"}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.886963099162229*^9, 3.886963124182041*^9}},
 CellLabel->
  "In[690]:=",ExpressionUUID->"6ca216c5-5bef-47ae-acc9-0662f9aeb4ce"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEcDjBW5HmdJ5xvmRwsD/uuXrBxj/3NnPtnyn58
sD9jXZ82b8Ez++ygqgaL1qP2ivutDXhtftozoAIHqPx+mDxU/36Yfqj5B2Dm
Q+0/gGY/TH4/mv79aObvR7P/AJr79qO5fz+a//aj+380PEbDA194AABmaTi4

    "], {{{}, {}, 
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], 
       LineBox[{18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
        33, 34}]}}, {
      {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], 
       PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
        35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
        51}]}, {}}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-3., 3.}, {-2., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8869631251730547`*^9},
 CellLabel->
  "Out[690]=",ExpressionUUID->"9fc33913-ad29-4d5c-b96d-11e7f9691b54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2"}], "]"}]], "Input",
 CellChangeTimes->{{3.886963130257209*^9, 3.886963132529776*^9}},
 CellLabel->
  "In[691]:=",ExpressionUUID->"420fba9f-449d-4c25-a9d5-398a5549c7bf"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1: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
v8vG5A/7/kf7H7M0qrk=
     "], {{}, {}, 
      TagBox[
       {RGBColor[0, 0, 1], Thickness[0.007], Opacity[1], 
        LineBox[CompressedData["
1:eJwl13e8l/MbgPEjUhpS0ZZSaWrRjmhbbUp776FdaEo0adCw2kbRMBraQ3vv
pb0TUqSS3/v++eNy39f1PEed832ez3mVvXmXWp3vSkhI6Hp3QkLMjxMlJJyy
vMwrm6XMgVpr8yfXs5gteONw158z3+ctXbtjVsIX+rP6u/Y89sftPez77U+4
b6v9QfTmf/Gcrnfg2/gH/AFely/hpWFN+MR/TturYD1vhX+1yvhSy4sntW38
IfThN/iH8L9L+FQ7o1XFBt4axbBdT4e++t98Au7BZ9rZ+P6wkbdBcezQ0+N1
/SafiMSYop3Tnscm3hYlsFPPgDf0W3wS7sVU7bz2AjbzdiiJXXpGvKnf5pOR
BNO0C9qL2MLboxR265nQT/+Hf4SkmK5d1F7CVt4BpbFHz4z++p34vHEfZmiX
tGrYxjuiDPbqWTBA/zc+ByTDTO2yVh3beSeUxT79YQyMhwmfGskxS/uF18AO
3jnhvw+miv6Vlg9PSft5Vgzid+EzLbX76mk/8jJIoX3Or9hrYifvEn+c+6rq
s7X8eFo7wB/B4HiOkMs9Hfl2+xTX0/BX+VJeyT7SXjaeU/vr9qP2WvZJ9pTu
/8L8VXtFqxXPpzlI2+Xaw/aW9ibm+ngWzDG8k/ma64nM53h9c47r5c1hvJ1Z
gBc0e/Lm5oH42Zof8i5mOV9/0J4Ndflb8fMyh/C77Y/ZO9l32Ke6Ny2vz5fF
ffFu8Df4z/b7Xf/S/pu9NnbzrK630jbwrvHR8Of51/H+4hntEM+OIfweTNNS
4Svtd14He3i3eId8/Qv6N/F9xXmgHeaP4m2eGNPjXcds7WqcOdjLu6M8jug5
MFS/FzPiWcAc7Y/4DLCP90AFHNVz4h09CWbG54uvtWu8LvbznqiIn/VceFdP
ilnxc8M32nVeDwd4L1TCMf0xDNPvw+fag5ir/clfxUHeG5VxXM+N4XoyfKE9
hHnaX7w+DvE+qIITcV5ihJ4cX2rpMF+7wRvgMO+Lqjip58XIeCfwlZYeC7S/
eUMc4a/HGeXzeFGfqxWKc007xfNhFE+J2VoGfKvd5I1wlL8RZ5avf0mfpxWO
Z1s7zfNjdDxTyO2eznynfU78bHgDvjzeRRTjb/Jj9oyuf2e/ZW8c77Vrg+P5
1B+xt7ZvjPPRPjbOwzgH7dXsDcz5rlUwh/P2ZpH4vsxevIV5MM4acwJ/LZ5F
X3/GXgD1+HvxdzLf5m3MVDyP2YU3NXfFWWuOi3cgPjd7Q/sKvbJ9lL2cvbi9
n/24PZP7vrfftjfBMZ7N9TbaJt4vzmZenS/gRePP0M7yx/E+fwDfxOfuvkba
ynj3kFn7gf9jb4rjvH+c3e6roX8bZ1ac99o5XhBjeGrM1bJgoXaHN8MJPgDV
cF4vhLF6GsyLswyLtH95c5zkA1EdF/TCGKenxfw4P7A4UcL/f1m30E5ZB6EG
LmpFMF5/EAviM8YS7S601E7zwaiJS1pRfKA/hG/j54gftURopZ3hb6EWLmtP
4EM9Hb7TsmNpnI1orZ3lQ1Abv2hPYoKeHt9rj2KZdk88D9o5/jbq4IpWDBP1
DPhBy4HlWmK01c7zoXgZv2rFMSmecyzUcmKFdm+c99oF/g6S+fxqat/FGR1n
mvYbL4HJ8Uwhb/z+4Lvti+Id5435qjhXkUtbyZPEu8AvxvfvnrZ8M3+XJ4/f
V/x7XtE+Ir6neJftve2H7DXtE+P3i/t/N0viVe0j18qZQ+N7NTPzfGZX3szc
E8+dOZ53NhfHOWI24Q3N1a5XMUfzDmZ5XsLsH5+9eYLXNifH+eprV5lJ4169
bPyus1+Kz8jezr5FH8ZT8Nr8h3gPUYT34Yfj7Hb9qr0UPuZZkN/1bnyvfYnr
GXlTvibOkji/tNX8PnTkl/lwpHRfHW1h/L3jnNf+4KXxCX8YP2p5sEZLhk7a
L3wE6uOaVgaf6lmxVMuLtVry+LlpV/hINMB1rSw+0x/BMi0f1mkp0EX7lY9C
Q/ypPYUpejYs1/LjJy1lnIHab3w0GuEv7WlM1bNjhVYA67X70VX7nb+HxrgR
5x2m6Y9ipfY4Nmip0E27yt9HE/ytPYPpeg6s0gpio/YAumt/8DFoipvas5ih
58RqrRA2aanRQ7vGx6IZbmnlMTOef6zRCmOzlgY9tet8HO73+b2sLdJKxnmm
3eYVMIs/hrVaJvc109bGOxLPk7aFp0Uv/me89+5pz7fy8TwVf4Uv5qXiTOd9
+RF7C9f/sVfE53GOu/aOPbe9gL27fZ+9mv0D+zr3Z7Y3tzcy17lWNX5XxfNo
Voq/vzkgzkDzJK8T72ei//79VtTX/w+vMZ42
         "],
         VertexColors->Automatic]},
       Annotation[#, "Charting`Private`Tag$103651#1"]& ]},
     VertexColors->CompressedData["
1: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
      "]], {}}, {{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEcDjBW5HmdJ5xvmRwsD/uuXrBxj/3NnPtnyn58
sD9jXZ82b8Ez++ygqgaL1qP2ivutDXhtftozoAIHqPx+mDxU/36Yfqj5B2Dm
Q+0/gGY/TH4/mv79aObvR7P/AJr79qO5fz+a//aj+380PEbDA194AABmaTi4

     "], {{{}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        LineBox[{18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
         33, 34}]}}, {
       {RGBColor[1, 0, 0], PointSize[0.02], AbsoluteThickness[1.6], 
        Dashing[{Small, Small}], 
        PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
         51}]}, {}}}], {{}, {}}}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-2.9999989482166787`, 3.}, {-1.999999155687347, 
   1.9999992696470201`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8869631329454412`*^9},
 CellLabel->"Out[691]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
fN/ZwBCzHP+mzSzcHCSPO+j/AvumEvY=\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"5779c540-7307-4448-ae12-f0bc944938d3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.5. Drawing parametric plots", "Subsection",
 CellChangeTimes->{{3.8869631876821117`*^9, 
  3.88696319321341*^9}},ExpressionUUID->"175a2a99-4772-4b1a-b432-\
7ad9e28d0606"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Build plot ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["x", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["5", "2"], 
         RowBox[{"(", 
           RowBox[{
             StyleBox["t", "TI"], "-", "sin", 
             StyleBox["t", "TI"]}], ")"}], ",", 
         StyleBox["y", "TI"], 
         RowBox[{"(", 
           StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
         FractionBox["5", "2"], 
         RowBox[{"(", 
           RowBox[{"1", "-", "cos", 
             StyleBox["t", "TI"]}], ")"}]}], TraditionalForm], "errors" -> {},
      "input" -> "x(t)=\\frac{5}{2}(t-\\sin t),y(t)=\\frac{5}{2}(1-\\cos t)", 
     "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "4717b0aa-b40a-4b1a-b6ac-8948287d4e0d"],
 " for interval ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         StyleBox["t", "TI"], "\[Element]", 
         RowBox[{"[", 
           RowBox[{
             FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "]"}]}], 
       TraditionalForm], "errors" -> {}, "input" -> 
     "t \\in [\\frac{\\pi}{2},\\pi]", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "f45eadb0-f377-483c-8769-c3a5e8658fe1"],
 "."
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.886963198957695*^9, 3.8869632138777523`*^9}, {
  3.886963248526696*^9, 3.886963267090506*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"17fbbd24-e29c-4048-ab78-61f73cc93d02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y", ",", "t"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "t_", "]"}], "=", 
   RowBox[{
    FractionBox["5", "2"], 
    RowBox[{"(", 
     RowBox[{"t", "-", 
      RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "t_", "]"}], "=", 
   RowBox[{
    FractionBox["5", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "t", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.886963284033928*^9, 3.88696336804541*^9}},
 CellLabel->
  "In[709]:=",ExpressionUUID->"3354aa83-94f2-413c-a3c8-ed6e98c4b001"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1], 
       LineBox[{1, 130, 106, 86, 70, 58, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
        29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 131, 
        107, 87, 71, 59, 52, 45, 132, 108, 88, 72, 60, 53, 137, 113, 93, 77, 
        65, 46, 133, 109, 89, 73, 61, 54, 138, 114, 94, 78, 66, 47, 134, 110, 
        90, 74, 62, 55, 139, 115, 95, 79, 67, 48, 135, 111, 91, 75, 63, 142, 
        118, 98, 82, 56, 140, 116, 96, 80, 68, 144, 120, 100, 84, 49, 136, 
        112, 92, 76, 146, 122, 102, 64, 143, 119, 99, 83, 148, 124, 104, 57, 
        141, 117, 97, 150, 126, 81, 147, 123, 103, 152, 128, 69, 145, 121, 
        154, 101, 151, 127, 156, 85, 149, 125, 155, 105, 153, 129, 157, 50},
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$107863#1"]& ]},
    VertexColors->CompressedData["
1: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
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{1.4269908169872414`, 2.4999999999999996`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{1.4269908169872414`, 7.853981633974483}, {2.4999999999999996`, 
   5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886963336125927*^9, 3.886963376992052*^9}},
 CellLabel->
  "Out[712]=",ExpressionUUID->"3971edbf-63e1-43ae-83d8-899b7e53105f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      FractionBox["\[Pi]", "2"], ",", 
      FractionBox[
       RowBox[{"7", "\[Pi]"}], "2"]}], "}"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.886963372484934*^9, 3.886963391427318*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"36c29a41-a99e-4712-bcd6-37f008332fc7"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
rgd8BKpM8fXfI7t5hNZwvxzt0p5AYIL/AbYgtec=
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], Opacity[1], 
       LineBox[CompressedData["
1:eJwl1nfciFUYxvHXKySZEdmbbJpo0JY0tJfdVtopmjSsVFRoUTbZSkNFKhTt
QlG0NUWFor7Xpz9+7vv6HS/neZ5zbur06tf1qiIFBQVrCgsKUpurj2r2w3y5
Dw4AXdDCL2P4qlggX4QDURQtrY3lq2GhfDEOwh5oZW0cXx3PyZfgYHTjl3Mn
4mv5YRRDa/4xrgaely/FIejOr+A64xv5ERRHG/5xriYWyZfhUPTgV3In4Vv5
UZTI8/BPcLXwgnw5BnLfypeiEG25ntzb+i74Th6DIdxW+QaUxZ55B9yT+tp4
UR4l79LfjivkW+Xv9JehKMbLe2G4vp31Xvp39Cdjlr4KvufHqXvgHn6sPFS/
TX9j3qO+NsrpJ6llsQoPyq+pTfAJSuY7qE/xr6t11BlqJbyLl6yPVnfzK9Q7
8k7UevgQfa3flv3wb6qXq/PU6tmbfoJaCiP0r6iN0d7P9M5+uFMwW78ffuAf
U4vhXn6cPEz/h/4mlMfkPBMe0u+Vc6Ifr6+Ll3NG5H/1d+JK+fb8uXnPKIbD
cma51fpTsTl/J0rlDPETuHpYLF+Fw3OO8y640/Cj/Dj2zhnin+bq59nkfjgi
Z5t/j+uKn+QnUBpt+We4BnhVvhpHogzaWZvIN8z3ka9BB5RFe2uT+EZYIl+L
jiiHw6xN5htjqXwdjkL57N3aFH7/fFv5ehyNCtmntal8EyyTb8Ax2Cd7sjaN
b4o35BtxLCpmT9am883yveWbcFzuLP8+dzp+lp9EpeyTn8E1x1tyfxyfO8t/
wJ2BX+SnsG/2zs/kWmC5fDNOyJ3NeePOxK/yeFTO8/DPci1zPuVbcAe3We6L
4uiUO8x9pD8Lv8kTUCXPzM/iWmGlPAB3cj/m/KBE5g93Bfex/mxsyRmQi+M+
+Wl5uP5PfX9UwBS5PEZlVub96WfrW2Omft/Mjsyowv+H512ZDWp9DKTuUn/K
O1MzgOerNfKOsWf+TnXvzAXcn/Ok7p89orOf75v7ne+nnqPOUavmXOL3nEm1
ROYfhuTuqA1zPq2NUP/ibs58zUzAPvqpagWM1lfNd9fP0bfBO5mfchEMkm+V
B+l/1vdDycxZ7kruU/252CpPxP3cdvkWVES1nBFurv4ArMqMwWDuF/nq3H10
yR3l1ujPwzZ5EqrnzPDzuAOxOnMAJ+eO8mu58/GHPBk10Imfzx2Ed3OGcEru
KL+OuwB/ylNQEyfyC7iD8V7ODE5FLXS2tpA/BO/nW+I01MZJ1p7jD8UHeUfo
ijroYu15vi0+zPPidNTN3q0t4tvhI/lunIF62ae1F/j2+Fi+B2eifvZk7cXM
PXwi34uzMl/4z7gL8Zc8FQ2yz8x87nB8Kt+HszNz+M+5btguT0PD7J1/mTsC
a+QhOCdziF/PdccOeToa5Xn4xdyRWCsPxbmZTfwGrgd2yjPQOM/Iv8J1wDp5
WJ6d+1W+BqXy7TO/uC/0PfG3PBMjuR3yAFTKHMx74V7Vd8Rn8hi5EIPl4Xl3
+t/012KBvmbumf4ZtTRG5uxkJuq/1PfCXH01/JO5l/uZu42h1harjTJ7Mqes
P6DuzGzLPVcXqXUzCzMT5Gm5a/n3CQ/LS9SmuTNokm+nvsYvU49Sn1Ur59tY
G6sWxd38S2oDjMg3V7dw12GhvlaeRT9RLYMHcr4zy/Ub9b2xKzNZLolh8iz5
Qf3fuduojKY5G9wS/dFYn7ucM5MZI1+PMjljmfvcJn0f7JZno1nOCr+UOwYb
8s3QLXOf/4q7CP/Kc9A8Z4V/nTsWX+R9onvmPv81dzHyH9W5Sgucxy+Tj8OX
eQb0QEucb+0N/nhslB9CT7TCBdbe5E/AJnkUeqE1LrT2Ft8JX8mj0RsD+G+4
S1AE8/Jn5lzob0MVTJcr4hH9UrVZ4f//t27j9/4HUT9f2w==
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$109603#1"]& ]},
    VertexColors->CompressedData["
1:eJyle3lYje3bdYMoork0GEpIkqmQoVVEJE1CkqlEhmhCGRJSSWVKhUaKpIkM
SZqUktSe2s3Dntq7vTMkSULftX/H9/7zvsdzPN/wz/Mcx5Lrus/rWuc617q7
6bofc/KUkpCQaCb/kSb/X30qUkfvaD2+DzzQU3vXiGP6lD2bD7BBeb73zc7a
eqgmZGy8T29E1MiQXpkdG8UXLhrfQwNkz0za3sVtxPLp8RvOz2fjcxn93cni
BmyIz9ZcNtSI87Y2NuaT2LCLytjer0uBxNc3ctMmMOGSmrt/jpCF312r7q/d
QwHtdnG2mnYTdr3bOX3dy25IL08NbrpFwdSZhwevpjTDyOn40FSlTrRplAbv
olHQ+fZ5efDWVoxpiptIWdOKXTeW9bxbQ0VQ6isPTnkb8hzXN65d3ITNSqOd
STQqDJFX3tXVDqX5QrXWNgYezuxxmHmYhg2B5R6ryborrpnNqNpBQ5Jb3Z8U
eQb+3JH1P3WwCyYOjmsXjKdiPUs6/JkbExrHDh/8692Ns7lSVv1nKTj11/mN
5NNmaGhNZrAMWMh6nLle1N2AL6LcTZuetCKe2jASVsNCfvCdSa4/6mEjtcTo
YGcHdhjPk7+Wy8ayNZrcnIwGTGqyH9+6thuq+VRlHx8O4uRKprzSoaB1knXl
RkcWFKonz3w7jot18hU6+7ZS0P57mit1ORt17qJY7hUutq9/H1sSQUHJ5q2+
PBYbMm945d5CLl66SLlVZVPg9/jdtQn7OKg9lfVSyYQHH5mEpMYaClb/qj0h
eMFBaeHIlu/uPNDe+T8uaKXA/VODVQCHg9SfXh8NzvDgbZmaaselgOFV8Xf/
MAc3EmYO34zgYeW1rrnjeykwXn7T/ulfDrIaAxtvXOFBPyD7oLGQgvLVnvaK
oxzQtXcoVBF8a/DEYRuCj9+jdcd6DBdWlou+ucTwIPxLqTnRR8G0oeq1d9W5
2DK4MvRAPA/L1g/maHynYMyTo/ZJq7mYK39LcXYOD2apCjMOjqVi24OKAVYM
F+u/fRU10Xj4eNJyqcEsKgItk2bM+MXFjd3UgeZxPTjnzF/40YkKA8lj9RF3
eTjwuD/77rYenOzJuDpyi4oTDc39Znt6oHrVNrWhsAdjGV3CVj4VLoHN3Vp2
fFgO+i7eZcyH0+NozS4bGii79ZWkLwowXmtM8dhqPrwGjaUDPtAw4F5Xd47a
iwevRk9vPiJA9I9pb3K30nGgM/TNn3NCNNstv7hmtQBF1OUWy6vo6B4TsNVN
SYRB/o2N5gN82I26P3Y0ZuBUavjP+CwRkieepn9L4WP/nsM7JycxwOujSZcx
RKjvN/79PLIHSS2BeW9eMxDYq3vZy1CEnZnXhR92ceE60BY6zpIBv8WHg8uO
CqFzcIfynl8s2FakLW5+RYdUzT0j3OuFzmMGnf+oE8pWgV3X39JwhcVV2lwn
wDOJmz5T5FqgdUwp8eYmKhJuuI279omPV8kHRe+N6Pg5vGr16msNoNyNdJ68
g4+5w807U9Pr0etOt9G99vFfcaP/jQv/D3/+v+P5+f2hdnfq8SX9g87NukbI
3TGwidnBRr6RS0adVANc7NdEfG5rxKR9C+tfgA1zs+8V6840ILz+y1DNp0Yk
9tpQXKaxUW9aMPjobwPO51c/+CbBhP/5Xtm7v1nwUV3YX2NFQem0C7yyzUws
MFlCXRfLwv6Sm4dfnaLA2a3Wtbe1CR5rOz8YV3VB4seVTa0FFPSsdDZbFNSC
JYcD3ocbtyMycIPnsiHSl6VZ2xMN2qClFTktMqAZeSFRV2yvUFGR9u2bmmM7
dtoYGeuNY2IdV9Zj1zQaPnd5fYoM6gBbdlj09jYd15cYTTKi0SAhPHutIL0T
GoZC22xnKvjueQs1zRrB3cLrK1PuxoWD6V+k31LQZz3+HCO6CYLDG/JPfOyG
zdi3XVmmFJxf6lQ7+LwFdT25vKWniF41WX2o9GxA2Adpx29b2jF90pQ/4eS8
omeplE90bEBrxL4JHmuIDh7Q4kSrcGBcE6j08FsDlrZ523Ko3Rjj7bUwu5SD
5QufzRItp4DDPaxm/5GFxSHDDp83cVGo5/1I15eCJQUaIxti2ej+/MkrtISL
D7Eph+QSKZA5Vl62dA4HbvZJyTXKPDSvr948q5iCc7vUm6JucLDufGzfXjse
Xm6Y8Kyd6P65G4IF6RQOLm9Ir7noy4NV4cfZFt0UpPVIzl7az4HGsKbOt4s8
pDZUWazjE/1MmWtq9YcDv3kleW8jeXhOzQnsInr10nLGSA/Rq+mHC+7lE11i
N6pWmRFdYs3YoXNYgovb93p8faJ4sI5jb24juN+adX+sJ3DhdgSv6q8TndHe
2b7nCwWyhlJvegy42FW/WtYvlTyP5AeD5yMU5K24/XjWPi6Y85e3vnrDQ5Pl
2KpdqlR0HSzxrC/louKuo5uMiIdiA4/Tl5ZToTr/PSvbiodJHaOfc4168JCp
JqL7UmGSX5pj8JOHsBMBlL2XeuB+YcG1y8VULFtg9j6C2oPLK0NP1X/twV8k
fhmjQUOaouEPCTYfkmufLDl+kujGz1z1YxE0DHID39L0e5HiYdD2R12AUaVt
F+sn0VGxPOig11Ih/OerSxYeFMD0yU+H8mt0TN5bsXROtRBLboW+vKktwCSL
SQk5P+m4O31mxXs3EQKlDo41r+Vj9letH837GFAtv71ri2QfDp1Sc63z4WNE
8ejKj2TOnpT7U6ITIoKAGbY5+ASZO1W83spgokuntpmV1wlhnOHCnz2Pg4i5
x5Wu/aFjuPin+y1lIXY+udMRS3g7xXU43e8kHTyBhMa5Jb0QHPXpW8how6Oo
7xELx9EI3zcrBe8QYNOOsOfzlJgQ+WWIHMgcZHxb6Dt6mY+f6Rxv0xgKQvaV
X51uUv8/9OS/64/Rv+jPv+nV+pNzz72+WI9T0teqLd83YrbDQY0be9l4sDt9
79ieeqySZvYVNDXC5Undpb3WpB82BS8N2dmAWT2Xldf0NmKMUdHYqNlsRGj8
TDLqaEAk2yN97O9G/Gqv3B0uw8arRJ1ndqSP3fP85lMUmeC95WQ2dbFwzVv+
spc3BR3b/la6nGrCbk3WvYebupGb2+/yLp2CMItzV1sntGCMHj//z/QOLPA7
MnCGRfQg7Ns1vcpWfH12z/aJQwvaP0kcuHKACobCOdkQuXZIvyj7bpTERLrV
x00aw1RUju0v4Rt1QK7p8Q7P5QzM11SZrBpDw4Gkn9MWb+tErPO4WfPeU/Fx
YvfxnvsMRNwbG6Zf04XFqgnTd/RQYKdzNazhBxNDBw1nLknuxo4FJSE+2ymo
fJAfeN20BdJvcz5OcGKhOZXLjL/XgCx2J1MlvA0ME+EtSVL/123nw/z0G7A+
f7OJf2wnUu1DDRTZbBwSTDv/ua4B41bXKPhHd6NW63f/twQONuK98xwjogN7
Iw7rXWchrCxyMnsuFz+7i6UN9lEQW1BCVzzIBmc+LUbhAenLz6qnX96gIFoU
N91oHAf6bzPmXhrlYmNGo1TDMwocd3w8nnaGg7q53wW/LHnIHO9YoldPwUaT
+yEFlRz0DPVYVhziwcKgbGJOBwUbqu+snyriYNb1uP7gEB5yq9zzB3kUUBNZ
j16McBAaQC1lX+YhPlKv7DLRpZq6NV+6iC7pDsk9yCa6xIqearGM6M/0VBmv
C8RH9aZ88v1DcCd7xZOnCE5r1QnfRHzhtiHng01XiV+KavhU+ImC0TMrTHum
ckHfnZ0RQvyOl9VJlytkDl0+ffiDjRMXy3a/PN3zjOiS1cw3X+SpeFC+nm9C
6p90uPDprk4eqo0e3O2YT3jQMf5ezxQe9nw6EHxJswcRWp/18/dSYfEkKeFo
DQ8uWkXvPnj34NjmVurjTCrk5Ma8CYrvgYu1ofMURg+SF99f0fqXCtmoy94H
4vgQbUkVTnYifcbOXDHkRcOT31tTLtME+Lv/acHmz3z4paaYxPTRsCyGaXZX
VYgY3Xj2vTMCxKfNS0sgOiBZdfO08X0hij6+uag3XwDVLY2CrE46Vmts8KpY
IsJT11d/ezv5uGWWPmbHBgbU039fy20UwTQ2qiYsgg96QVG2eTEDXNpCqzji
rxaJpDbrSPbg+Nu9sruIv5L4o5D1cESIdrWcJUvfceA16rZ5+zSSB8a+e59i
IYRLe5cy04OFVfqPPJIS6FiiObt88ZFenPz9vVCwqgNDrTadap40TA+PVIm9
KUD9kPaFvsgmvNQoitpF7stl3dv97q/5mKV0b15jK+mTymSNhu7/qUv/tz7q
335+VC/pUoAiBUacQL0RGSZ+mrCVTw+wMDx+y4SDTkRP9BcNXH3BhJHgwMNX
s1hIXfG4x4ToqKOuFzN3ZTNMuo/v2NvXiYGgnymTiL/g3HC7E8BvwYLZkw/J
LW/D3phDo8enkDk2VBhldLwNt/VVgxQZTfBtarotkUeF7rYXj64ntCPxTLWT
nW8jfMYUyx5YS8M7qwitJ1Ud4J4ODjb4RYNen5/KZh86QtJWbn88rgvpY67o
LSE85FpWzlElPm/os2X/G4tu3DprtmJxKgW/A2jmM9aTPkof2mqtT/pOdtYU
agUFarxyr88ZHChV31uzfTsP3w+OjRrfRPr0hPbrllYOXpzKum5zkviNsr4C
fzYFA/OD5USDBF9RveFuGA/G1yKbNggo+Hw0g2NK+vGKlM4xW9J37+Zdv6VC
7rFJJum9iOBRmXVSBQR3XLWiagXBF+Zu3Ppdkgv9JZ1Vi6J5WF9WL3lOREHg
py9O2xS5OBcv1WEXy4NOucP4M/0U7HG+4FJhwoX29q8L7R7wIB83WpguQUWO
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
n/nwvwAMmHKr
     "]], {}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{0., 29.98893571891069}, {0., 4.9999976388499325`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886963375206011*^9, 3.886963392280621*^9}},
 CellLabel->
  "Out[716]=",ExpressionUUID->"2b60ae49-3211-4837-ab15-85873f67d60a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.6. Build unexplicitly defined functions", "Subsection",
 CellChangeTimes->{{3.886963466865542*^9, 
  3.886963476489389*^9}},ExpressionUUID->"2030b2f4-7c18-4274-b1e6-\
9ccf9f89ad9c"],

Cell[TextData[{
 StyleBox["Task.",
  FontWeight->"Bold"],
 " Build curve ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"2", 
         StyleBox["x", "TI"], 
         StyleBox["y", "TI"], "+", "2", 
         StyleBox["x", "TI"], "+", "2", 
         StyleBox["y", "TI"], "-", "3", "\[LongEqual]", "0"}], 
       TraditionalForm], "errors" -> {}, "input" -> "2xy+2x+2y-3=0", "state" -> 
     "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "05317ae8-99a0-4986-a227-0e08507e39f1"]
}], "Text",
 CellFrame->{{0, 0}, {0, 0}},
 CellChangeTimes->{{3.88696348061489*^9, 3.886963488618598*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"f5e761c8-e865-4122-98de-4648180e16b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", 
   RowBox[{"x", ",", "y", ",", "F"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"2", "x", " ", "y"}], "+", 
    RowBox[{"2", "x"}], "+", 
    RowBox[{"2", "y"}], "-", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"F", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "==", "0"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<DarkRainbow\>\""}], ",", 
   RowBox[{"ContourStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Thickness", "[", "0.007", "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.88696352577282*^9, 3.8869636013001347`*^9}},
 CellLabel->
  "In[726]:=",ExpressionUUID->"46d52602-3962-4968-8abe-ea658849dd04"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      TooltipBox[
       {RGBColor[0.9, 0.36, 0.054], Thickness[0.007], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64},
         VertexColors->Automatic], 
        LineBox[{65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 
         80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
         97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
         111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
          125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
         138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
          152, 153, 154, 155, 156, 157, 158, 159, 160},
         VertexColors->Automatic]},
       RowBox[{
         RowBox[{
           RowBox[{"-", "3"}], "+", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm]}], "+", 
           RowBox[{"2", " ", 
             TagBox["y", HoldForm]}], "+", 
           RowBox[{"2", " ", 
             TagBox["x", HoldForm], " ", 
             TagBox["y", HoldForm]}]}], "\[Equal]", "0"}]],
      Annotation[#, -3 + 2 HoldForm[$CellContext`x] + 
        2 HoldForm[$CellContext`y] + 
        2 HoldForm[$CellContext`x] HoldForm[$CellContext`y] == 0, 
       "Tooltip"]& ]},
    VertexColors->CompressedData["
1:eJxTTMoPSmViYGBYAMTMQOxU1SWjlHfO/uvnZUqix67aF6hcSAhOf2Q/Kj4q
Pio+Kj4qPio+Kj4qPio+Kj4qPio+Kj4qPpzEARG/CNg=
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.886963574565426*^9, 3.886963601976123*^9}},
 CellLabel->"Out[728]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Lfp/UBEwNA==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"364cbed5-7455-434a-83b9-9da99e18d9c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1106.3999999999999`, 604.8},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.2 for Linux x86 (64-bit) (January 31, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"83cb585b-e1cd-488c-b1e9-af9c801d28c0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 74, "Section",ExpressionUUID->"7c2bb4b6-f563-42bc-be2c-d153bc86b603"],
Cell[CellGroupData[{
Cell[837, 30, 223, 4, 58, "Subsection",ExpressionUUID->"8c9c8c9e-02b1-4af8-9a6d-7bf3208abedf"],
Cell[1063, 36, 805, 26, 70, "Text",ExpressionUUID->"deef2c9f-a066-4ff1-9065-7bab7a384d78"],
Cell[CellGroupData[{
Cell[1893, 66, 828, 22, 111, "Input",ExpressionUUID->"5aca2649-fd42-422f-93eb-10a0e33b4de5"],
Cell[2724, 90, 339, 8, 28, "Print",ExpressionUUID->"1544925b-049d-4cea-a77e-825a13a28a1e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3112, 104, 225, 5, 58, "Subsection",ExpressionUUID->"ad997c4e-905d-4d2a-948f-d95738043827"],
Cell[3340, 111, 1271, 35, 94, "Text",ExpressionUUID->"a2adb66d-5883-4d99-b9a9-5c7c461594c1"],
Cell[CellGroupData[{
Cell[4636, 150, 1073, 30, 141, "Input",ExpressionUUID->"5360ff38-79ae-4478-ab8f-6170ea08c630"],
Cell[5712, 182, 394, 10, 28, "Print",ExpressionUUID->"fb8b17f1-9e03-40e8-9cc6-1d7cf14e272c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6167, 199, 168, 3, 74, "Section",ExpressionUUID->"39b763f7-5081-4ecd-99fe-c72379fba2f0"],
Cell[CellGroupData[{
Cell[6360, 206, 178, 3, 58, "Subsection",ExpressionUUID->"c7c1c526-296f-43db-bd41-70b6283d4b6f"],
Cell[6541, 211, 2045, 58, 94, "Text",ExpressionUUID->"4a0d36ee-e049-486c-a83e-5b3e3c9fe194"],
Cell[CellGroupData[{
Cell[8611, 273, 1398, 42, 125, "Input",ExpressionUUID->"531603c5-d4e0-424c-8d0e-8056bccee8ee"],
Cell[10012, 317, 807, 24, 58, "Print",ExpressionUUID->"2eecb608-6c02-44c2-8823-3f19db0b928f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10868, 347, 192, 3, 58, "Subsection",ExpressionUUID->"8897ff19-fd05-44ea-ae8b-daeffec7b1a5"],
Cell[11063, 352, 1916, 55, 100, "Text",ExpressionUUID->"ec8da01f-daf8-4dd4-9633-dd8517257e26"],
Cell[CellGroupData[{
Cell[13004, 411, 1273, 36, 141, "Input",ExpressionUUID->"c8fe7f5d-54fa-4b31-a5ec-dae1a920eba6"],
Cell[14280, 449, 453, 12, 30, "Print",ExpressionUUID->"d3c51742-66e6-4403-9ffd-08bbf1c387be"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14782, 467, 172, 3, 58, "Subsection",ExpressionUUID->"6f44eccd-8995-45fa-8e28-9e14d67a111e"],
Cell[14957, 472, 1213, 34, 83, "Text",ExpressionUUID->"af031b6d-f630-4780-85c9-f553ff8d6bff"],
Cell[CellGroupData[{
Cell[16195, 510, 528, 15, 80, "Input",ExpressionUUID->"8f883bd5-51cf-4c00-8c37-8cb1fbdff08b"],
Cell[16726, 527, 720, 24, 51, "Output",ExpressionUUID->"c4c3b28b-2cf6-453e-9136-3eb51a856df4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17507, 558, 179, 3, 74, "Section",ExpressionUUID->"4a0fa35c-e200-4d9c-ae01-651885ffe84a"],
Cell[CellGroupData[{
Cell[17711, 565, 225, 4, 58, "Subsection",ExpressionUUID->"1ae86241-7ec7-4802-8702-e43d60d90e8d"],
Cell[17939, 571, 3204, 86, 84, "Text",ExpressionUUID->"7648500d-af3d-4f53-b09d-b93489a7073f"],
Cell[CellGroupData[{
Cell[21168, 661, 1238, 34, 191, "Input",ExpressionUUID->"06d04f8a-3904-4aae-960a-51951fd07508"],
Cell[22409, 697, 481, 14, 41, "Print",ExpressionUUID->"f9176d94-4738-4801-a596-3e3b5b633fa8"]
}, Open  ]],
Cell[22905, 714, 922, 24, 40, "Text",ExpressionUUID->"6c76a3fe-108b-46a0-953c-5237864d59d4"],
Cell[CellGroupData[{
Cell[23852, 742, 999, 28, 153, "Input",ExpressionUUID->"51d87477-d41f-4b6e-b002-44f38639a54d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[24876, 774, 581, 14, 28, "Print",ExpressionUUID->"aba160d2-497c-441a-839b-0f204a327e09"],
Cell[25460, 790, 591, 16, 47, "Print",ExpressionUUID->"2c2a1849-e5db-4b3c-9521-e8539469bfcd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26100, 812, 887, 23, 78, "Input",ExpressionUUID->"4411b014-6ac9-4912-9396-90d6989c7ff9"],
Cell[26990, 837, 204, 4, 36, "Output",ExpressionUUID->"8e164d18-38f8-4e80-b76e-11a6be0f3270"],
Cell[27197, 843, 23339, 388, 356, 551, 13, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"25188195-8bff-4639-a4d8-fc5ecccbc9d8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50585, 1237, 240, 4, 58, "Subsection",ExpressionUUID->"68ab4371-afc3-434d-8373-1e5c392d7f90"],
Cell[50828, 1243, 1014, 27, 58, "Text",ExpressionUUID->"8f1809e4-e071-4864-97a8-2533f22c483f"],
Cell[CellGroupData[{
Cell[51867, 1274, 895, 24, 79, "Input",ExpressionUUID->"0c5f2eb4-5768-484e-a642-d6cb622211a9"],
Cell[52765, 1300, 132568, 2203, 382, 6923, 142, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6ff6d804-3f05-4dce-bc77-bd0f2c1b547f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185370, 3508, 1426, 37, 130, "Input",ExpressionUUID->"a895fa53-74a8-4adb-ad3a-d67a51eed0a2"],
Cell[CellGroupData[{
Cell[186821, 3549, 612, 13, 28, "Print",ExpressionUUID->"ef65774f-d5f3-4885-a677-dab73cfda940"],
Cell[187436, 3564, 636, 15, 38, "Print",ExpressionUUID->"af60e48b-8a5c-4bd8-a57c-2448a1489876"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[188121, 3585, 470, 12, 74, "Input",ExpressionUUID->"1105956f-691a-443b-acec-c2b9ac9fc4f4"],
Cell[188594, 3599, 391, 10, 44, "Print",ExpressionUUID->"4c1c5525-f240-40ec-a88c-dc0dcc8f8084"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189034, 3615, 180, 3, 58, "Subsection",ExpressionUUID->"7ce7fbc8-b052-4d43-8798-9ea5a3c98ae4"],
Cell[189217, 3620, 2745, 73, 85, "Text",ExpressionUUID->"8a96f913-484e-4999-a1d2-4aa6f0fb21bc"],
Cell[CellGroupData[{
Cell[191987, 3697, 4040, 122, 435, "Input",ExpressionUUID->"fe9da181-7f34-411f-b9da-11233688d17d"],
Cell[196030, 3821, 1496, 34, 488, "Output",ExpressionUUID->"0ce7855f-63ec-4ee9-826a-ea9be9b6c9fe"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[197587, 3862, 167, 3, 74, "Section",ExpressionUUID->"76c4b2fd-b35e-41f0-84d7-2caab734ee1d"],
Cell[CellGroupData[{
Cell[197779, 3869, 174, 3, 58, "Subsection",ExpressionUUID->"2156b00c-0381-4fc1-bb1e-20ef0c009e61"],
Cell[197956, 3874, 6694, 180, 172, "Text",ExpressionUUID->"ceae94c2-eaf2-4f4e-859b-42c551c89d40"],
Cell[CellGroupData[{
Cell[204675, 4058, 1232, 39, 104, "Input",ExpressionUUID->"12220fae-fb73-468e-bd60-214eec87f2ff"],
Cell[205910, 4099, 931, 26, 60, "Print",ExpressionUUID->"2025b231-60dd-4605-be46-58de776f55dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206878, 4130, 418, 9, 57, "Input",ExpressionUUID->"4d58fbbb-98d9-426d-83b9-884bbb491fe6"],
Cell[207299, 4141, 1303, 42, 85, "Print",ExpressionUUID->"18d70f27-1527-4697-9b11-09414099f8a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208639, 4188, 359, 8, 57, "Input",ExpressionUUID->"d8eb1c3b-a94c-43e1-9fee-6db01bfa6b42"],
Cell[209001, 4198, 325, 8, 28, "Print",ExpressionUUID->"cbd7969d-d00f-4c99-8d69-110e32062af1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209363, 4211, 579, 15, 60, "Input",ExpressionUUID->"15569c75-0994-4b4b-b519-89b4a33e3457"],
Cell[CellGroupData[{
Cell[209967, 4230, 953, 26, 60, "Print",ExpressionUUID->"e3ef69ac-4ee0-478f-8f53-42b8125a3b6c"],
Cell[210923, 4258, 1056, 30, 60, "Print",ExpressionUUID->"ba0acad5-c3c0-45f4-911d-5746bb004f49"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212028, 4294, 943, 22, 129, "Input",ExpressionUUID->"0621a9d4-a4d7-4ac6-8f35-585518a4993d"],
Cell[CellGroupData[{
Cell[212996, 4320, 933, 26, 60, "Print",ExpressionUUID->"fc44e294-c6b8-4c45-904a-2b8d19c32221"],
Cell[213932, 4348, 968, 27, 60, "Print",ExpressionUUID->"dcfa9107-14fe-4eb4-87c3-5d49243e2bbb"],
Cell[214903, 4377, 967, 27, 60, "Print",ExpressionUUID->"cb858e40-2bc5-47e6-b56d-5ec37a0387f8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215919, 4410, 434, 10, 57, "Input",ExpressionUUID->"4f4df43a-56cc-4a3d-b7e8-278e3d91fd4f"],
Cell[216356, 4422, 1245, 37, 86, "Print",ExpressionUUID->"9be3c8e0-e052-4522-be3b-8c3eb1f3e298"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217650, 4465, 191, 3, 58, "Subsection",ExpressionUUID->"d37978e6-a7aa-4bbd-842c-16229e781527"],
Cell[217844, 4470, 6353, 172, 169, "Text",ExpressionUUID->"c168fa98-9be9-4f48-bf5d-52f17f440a9e"],
Cell[CellGroupData[{
Cell[224222, 4646, 1719, 54, 172, "Input",ExpressionUUID->"02efa7c2-d011-4fb0-a645-a3f1464fb1cd"],
Cell[CellGroupData[{
Cell[225966, 4704, 1005, 31, 60, "Print",ExpressionUUID->"be53b53b-db81-45e5-911d-6ee2877e4084"],
Cell[226974, 4737, 957, 29, 60, "Print",ExpressionUUID->"d7dfdd57-d883-46bb-a723-a092f4087b04"]
}, Open  ]]
}, Open  ]],
Cell[227958, 4770, 1086, 28, 40, "Text",ExpressionUUID->"21679cdf-ca99-43ac-8247-7a0209529a6c"],
Cell[CellGroupData[{
Cell[229069, 4802, 446, 11, 57, "Input",ExpressionUUID->"7a6d290b-108e-4589-91c9-cb106a21c5e1"],
Cell[229518, 4815, 1025, 31, 69, "Print",ExpressionUUID->"c409fdf8-e954-45e2-9621-7a8c758d1528"]
}, Open  ]],
Cell[230558, 4849, 184, 3, 38, "Text",ExpressionUUID->"0603c525-77de-4721-bdb1-426fb8c89940"],
Cell[CellGroupData[{
Cell[230767, 4856, 848, 20, 57, "Input",ExpressionUUID->"fdf23d05-d6dc-4db0-9b65-b73f42f99edc"],
Cell[231618, 4878, 1053, 29, 60, "Print",ExpressionUUID->"5540faf6-2452-46c4-94f1-4e7b0f5006a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232708, 4912, 833, 23, 57, "Input",ExpressionUUID->"49acb0e0-3968-48d6-b80a-5325668c9be4"],
Cell[233544, 4937, 1032, 28, 60, "Print",ExpressionUUID->"0660d570-0212-4009-af59-f83c3a154792"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234613, 4970, 651, 17, 57, "Input",ExpressionUUID->"5100c396-663f-468f-aa1d-ddd203268a95"],
Cell[235267, 4989, 1004, 28, 60, "Print",ExpressionUUID->"38354211-b6e1-4392-983a-344006dac488"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236308, 5022, 625, 15, 57, "Input",ExpressionUUID->"73d049e2-7c3a-4b6e-8e7e-e081bb04a0c6"],
Cell[236936, 5039, 1067, 32, 69, "Print",ExpressionUUID->"97f37e6f-384c-4117-acb5-fa6afec79eb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238040, 5076, 889, 19, 110, "Input",ExpressionUUID->"4447d4b6-a9c2-447c-88c9-abe49dea8890"],
Cell[CellGroupData[{
Cell[238954, 5099, 465, 11, 28, "Print",ExpressionUUID->"d310875a-016f-4002-b701-af1a9ab37904"],
Cell[239422, 5112, 477, 12, 28, "Print",ExpressionUUID->"e54dca60-fe5c-4645-83ed-1207eb87ef46"],
Cell[239902, 5126, 376, 9, 28, "Print",ExpressionUUID->"b66714d8-440a-4407-8ff3-86fc166da694"],
Cell[240281, 5137, 396, 10, 28, "Print",ExpressionUUID->"d5f649e1-af39-4f90-a978-5494611913f7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[240738, 5154, 216, 3, 58, "Subsection",ExpressionUUID->"53888805-8636-46dd-8546-4715fb68a977"],
Cell[240957, 5159, 5631, 151, 142, "Text",ExpressionUUID->"890c0707-542d-46a7-ae8d-b7c766ac6a40"],
Cell[CellGroupData[{
Cell[246613, 5314, 2871, 77, 387, "Input",ExpressionUUID->"08d41423-3ec4-4b32-918e-f8a1cd78c818"],
Cell[CellGroupData[{
Cell[249509, 5395, 1462, 28, 49, "Print",ExpressionUUID->"d777a8da-ab3a-4ab3-84c6-9f7fe0cffba4"],
Cell[250974, 5425, 1462, 28, 49, "Print",ExpressionUUID->"47e5bb00-475f-4f6b-a833-e4a24d6b0976"],
Cell[252439, 5455, 1880, 39, 78, "Print",ExpressionUUID->"fe8681d8-f1cd-402b-9327-a6b074c654c9"],
Cell[254322, 5496, 1203, 30, 78, "Print",ExpressionUUID->"5f786cbe-1f55-4b12-b57a-f0a2aa24bd3e"],
Cell[255528, 5528, 1368, 37, 78, "Print",ExpressionUUID->"4428998c-796a-4fe0-9802-f93331a5d8ce"],
Cell[256899, 5567, 1253, 32, 78, "Print",ExpressionUUID->"2476dddd-e383-49a7-a8fd-7282e7b24fcd"],
Cell[258155, 5601, 1985, 45, 78, "Print",ExpressionUUID->"273ecfa1-ce1e-4b07-873f-bdb75d4553bd"]
}, Open  ]]
}, Open  ]],
Cell[260167, 5650, 2958, 77, 88, "Text",ExpressionUUID->"16e12a01-6188-4023-afeb-e1b07d19e1a4"],
Cell[CellGroupData[{
Cell[263150, 5731, 1185, 37, 104, "Input",ExpressionUUID->"b1765562-4c35-44ec-8f00-d02b4deb4dd4"],
Cell[264338, 5770, 1417, 41, 96, "Print",ExpressionUUID->"999cf2cc-6e75-4b5d-b361-5ecb083bcbba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265792, 5816, 627, 15, 57, "Input",ExpressionUUID->"cbae4902-9350-42ca-853c-f308a564c392"],
Cell[266422, 5833, 1483, 41, 96, "Print",ExpressionUUID->"7caf703b-a9ef-468c-b301-838df00037ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267942, 5879, 917, 25, 57, "Input",ExpressionUUID->"2da998c5-f59b-4bc7-b3db-8c22eb790bf3"],
Cell[268862, 5906, 1540, 43, 96, "Print",ExpressionUUID->"b7f27e3e-5498-4e18-812e-22d144efb342"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[270463, 5956, 190, 3, 74, "Section",ExpressionUUID->"3150ffd2-75d2-4fc5-839f-9c17d0580ad3"],
Cell[CellGroupData[{
Cell[270678, 5963, 170, 3, 58, "Subsection",ExpressionUUID->"b930bdd9-3f7f-4f3f-ba2c-e4f1aa1d1294"],
Cell[270851, 5968, 1596, 45, 83, "Text",ExpressionUUID->"4ede7cdb-264f-4f2b-9647-270daa494a74"],
Cell[CellGroupData[{
Cell[272472, 6017, 791, 24, 105, "Input",ExpressionUUID->"2190133e-dcc7-43c6-bd68-174dd330fbe9"],
Cell[273266, 6043, 301, 8, 57, "Output",ExpressionUUID->"7bb2160d-e1d2-41d6-be94-2c01e13a9819"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[273616, 6057, 187, 3, 58, "Subsection",ExpressionUUID->"e63473c4-a89e-4b58-a4bd-c23856cccb00"],
Cell[273806, 6062, 5411, 145, 201, "Text",ExpressionUUID->"abce9887-4150-4d8a-8bce-9a5007715dd9"],
Cell[CellGroupData[{
Cell[279242, 6211, 181, 3, 49, "Subsubsection",ExpressionUUID->"52885431-1f1d-4b69-9275-95e7f19aea09"],
Cell[CellGroupData[{
Cell[279448, 6218, 1464, 43, 125, "Input",ExpressionUUID->"78cd0672-10f0-487a-a249-659dd1507fdc"],
Cell[280915, 6263, 429, 12, 28, "Print",ExpressionUUID->"ce64dbac-65b7-4ff5-9bd0-a5a2c3c57d0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281393, 6281, 178, 3, 49, "Subsubsection",ExpressionUUID->"16720fd5-a602-417e-bd2e-542d77807571"],
Cell[CellGroupData[{
Cell[281596, 6288, 1224, 38, 60, "Input",ExpressionUUID->"fea13180-37e1-497d-a684-f0f9ae2bfcb3"],
Cell[282823, 6328, 475, 13, 36, "Output",ExpressionUUID->"947cd259-810e-45df-bdff-40ad0ee4f597"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[283347, 6347, 184, 3, 49, "Subsubsection",ExpressionUUID->"7f06f54f-fb38-46b7-8d73-50ae5d07732b"],
Cell[CellGroupData[{
Cell[283556, 6354, 1469, 42, 125, "Input",ExpressionUUID->"7d3561b6-121e-401d-958d-58c9556de92b"],
Cell[285028, 6398, 453, 12, 28, "Print",ExpressionUUID->"49a57f8a-cdb2-4e44-8b6f-8cda2cad384b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[285530, 6416, 196, 3, 49, "Subsubsection",ExpressionUUID->"515ccf5f-7589-4777-a44f-170882e44281"],
Cell[CellGroupData[{
Cell[285751, 6423, 3714, 116, 237, "Input",ExpressionUUID->"0e27a091-9f75-4b18-988e-aa6fec68091c"],
Cell[289468, 6541, 453, 12, 28, "Print",ExpressionUUID->"b9cf70a8-10cb-4c70-a8ea-d2cc54d649dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289970, 6559, 180, 3, 49, "Subsubsection",ExpressionUUID->"b633fbc2-02bf-4d50-a6c3-897f678ce3fd"],
Cell[CellGroupData[{
Cell[290175, 6566, 1472, 43, 100, "Input",ExpressionUUID->"cc47acfd-7e89-4d94-b2f3-3ecc957e92d3"],
Cell[291650, 6611, 840, 24, 123, "Output",ExpressionUUID->"48939b11-9707-497e-b404-f688fba30a35"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292551, 6642, 181, 3, 58, "Subsection",ExpressionUUID->"a0657b09-35df-4359-adb3-c0cbd9e5a59a"],
Cell[292735, 6647, 1231, 35, 58, "Text",ExpressionUUID->"5d09796a-55df-4c5e-8239-801fa68bd298"],
Cell[CellGroupData[{
Cell[293991, 6686, 634, 18, 57, "Input",ExpressionUUID->"3a00ccb8-be56-45b4-a0a8-f10735330c8e"],
Cell[294628, 6706, 450, 13, 36, "Output",ExpressionUUID->"b91517d4-e5f7-4dfa-9af4-a76f68338dc8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295139, 6726, 172, 3, 74, "Section",ExpressionUUID->"0dff84e4-2fde-4f36-9f29-dfaf4d4ad9b9"],
Cell[CellGroupData[{
Cell[295336, 6733, 187, 3, 58, "Subsection",ExpressionUUID->"2ab91690-6710-4ce0-ae9f-701e255c241e"],
Cell[295526, 6738, 885, 24, 60, "Text",ExpressionUUID->"bef2eada-bd3a-4bd3-8003-52959bd15458"],
Cell[CellGroupData[{
Cell[296436, 6766, 1082, 28, 80, "Input",ExpressionUUID->"c205c11b-73db-4bcc-8479-516afded70ae"],
Cell[297521, 6796, 42959, 728, 270, 24800, 429, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1ad95290-d0ab-4a66-9e2a-49d6d6071a93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340517, 7529, 558, 16, 55, "Input",ExpressionUUID->"8c643499-d3f3-4537-811e-8bc883f5a544"],
Cell[341078, 7547, 1001, 34, 236, "Output",ExpressionUUID->"a685c80b-8d8e-4391-8ca7-209678115b3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342116, 7586, 623, 16, 32, "Input",ExpressionUUID->"0186d185-5572-4501-8818-461f9903c58b"],
Cell[342742, 7604, 4362, 118, 270, "Output",ExpressionUUID->"b0267eb6-3ec8-4dcb-b4d0-d7180ebedd1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347141, 7727, 230, 5, 32, "Input",ExpressionUUID->"f2c3749a-fdfe-4e6e-8c00-6fcd1eb3376b"],
Cell[347374, 7734, 25601, 443, 270, "Output",ExpressionUUID->"45d46d3f-a85e-4a07-a021-56dd57264b0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[373024, 8183, 177, 3, 58, "Subsection",ExpressionUUID->"c94bf70d-b5dd-48f6-90b7-c832cc3fac74"],
Cell[373204, 8188, 759, 21, 58, "Text",ExpressionUUID->"4482cbbd-b021-4a68-a7e4-aa979f3f780b"],
Cell[CellGroupData[{
Cell[373988, 8213, 985, 28, 79, "Input",ExpressionUUID->"12f91193-037c-41a6-8fa1-ba8d352aa8b5"],
Cell[374976, 8243, 24692, 429, 266, "Output",ExpressionUUID->"96ea6fca-c1fc-4bd0-a6f5-887dd1870beb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399717, 8678, 196, 3, 58, "Subsection",ExpressionUUID->"57aa3e37-ded0-42a9-aa97-c66a14de562a"],
Cell[399916, 8683, 1035, 29, 58, "Text",ExpressionUUID->"5f629ddb-f37a-48c3-bff8-be709b418ca7"],
Cell[CellGroupData[{
Cell[400976, 8716, 1207, 32, 79, "Input",ExpressionUUID->"107a72f0-6aac-4705-ad6d-1ef34786098e"],
Cell[402186, 8750, 24555, 426, 266, "Output",ExpressionUUID->"1fe023c6-af5b-49f0-b0c0-15c9becc7b30"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[426790, 9182, 177, 3, 58, "Subsection",ExpressionUUID->"1b514d27-16f2-4fd0-a948-8d60ab504ad7"],
Cell[426970, 9187, 1444, 37, 62, "Text",ExpressionUUID->"40bb42af-ff82-40b5-97e7-fd961771883f"],
Cell[CellGroupData[{
Cell[428439, 9228, 1334, 41, 129, "Input",ExpressionUUID->"12af2d7e-1448-4123-859a-ac1feb87d44e"],
Cell[429776, 9271, 69738, 1164, 288, 45049, 758, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c4d0733d-42cf-4c85-a3ae-8abdb1cfc79b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499551, 10440, 706, 20, 92, "Input",ExpressionUUID->"1b81519f-371a-468b-857b-0ae09527e1be"],
Cell[500260, 10462, 1584, 47, 348, "Output",ExpressionUUID->"230c5213-cac1-4f9e-b592-6716429d86ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501881, 10514, 505, 13, 32, "Input",ExpressionUUID->"6ca216c5-5bef-47ae-acc9-0662f9aeb4ce"],
Cell[502389, 10529, 3927, 103, 263, "Output",ExpressionUUID->"9fc33913-ad29-4d5c-b96d-11e7f9691b54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506353, 10637, 231, 5, 32, "Input",ExpressionUUID->"420fba9f-449d-4c25-a9d5-398a5549c7bf"],
Cell[506587, 10644, 74224, 1239, 288, 45800, 772, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5779c540-7307-4448-ae12-f0bc944938d3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[580860, 11889, 178, 3, 58, "Subsection",ExpressionUUID->"175a2a99-4772-4b1a-b432-7ad9e28d0606"],
Cell[581041, 11894, 1654, 46, 73, "Text",ExpressionUUID->"17fbbd24-e29c-4048-ab78-61f73cc93d02"],
Cell[CellGroupData[{
Cell[582720, 11944, 1277, 39, 177, "Input",ExpressionUUID->"3354aa83-94f2-413c-a3c8-ed6e98c4b001"],
Cell[584000, 11985, 7966, 145, 182, "Output",ExpressionUUID->"3971edbf-63e1-43ae-83d8-899b7e53105f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592003, 12135, 776, 21, 85, "Input",ExpressionUUID->"36c29a41-a99e-4712-bcd6-37f008332fc7"],
Cell[592782, 12158, 39328, 664, 103, "Output",ExpressionUUID->"2b60ae49-3211-4837-ab15-85873f67d60a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[632159, 12828, 189, 3, 58, "Subsection",ExpressionUUID->"2030b2f4-7c18-4274-b1e6-9ccf9f89ad9c"],
Cell[632351, 12833, 734, 20, 58, "Text",ExpressionUUID->"f5e761c8-e865-4122-98de-4648180e16b8"],
Cell[CellGroupData[{
Cell[633110, 12857, 1079, 30, 102, "Input",ExpressionUUID->"46d52602-3962-4968-8abe-ea658849dd04"],
Cell[634192, 12889, 13528, 244, 414, 4988, 103, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"364cbed5-7455-434a-83b9-9da99e18d9c4"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

